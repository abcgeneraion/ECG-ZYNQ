// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _load_input_HH_
#define _load_input_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv1d_urem_10ns_cud.h"

namespace ap_rtl {

struct load_input : public sc_module {
    // Port declarations 71
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_in_V_AWVALID;
    sc_in< sc_logic > m_axi_in_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_in_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_in_V_AWID;
    sc_out< sc_lv<32> > m_axi_in_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_in_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_in_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_in_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_in_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_in_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_in_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_in_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_in_V_AWUSER;
    sc_out< sc_logic > m_axi_in_V_WVALID;
    sc_in< sc_logic > m_axi_in_V_WREADY;
    sc_out< sc_lv<16> > m_axi_in_V_WDATA;
    sc_out< sc_lv<2> > m_axi_in_V_WSTRB;
    sc_out< sc_logic > m_axi_in_V_WLAST;
    sc_out< sc_lv<1> > m_axi_in_V_WID;
    sc_out< sc_lv<1> > m_axi_in_V_WUSER;
    sc_out< sc_logic > m_axi_in_V_ARVALID;
    sc_in< sc_logic > m_axi_in_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_in_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_in_V_ARID;
    sc_out< sc_lv<32> > m_axi_in_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_in_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_in_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_in_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_in_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_in_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_in_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_in_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_in_V_ARUSER;
    sc_in< sc_logic > m_axi_in_V_RVALID;
    sc_out< sc_logic > m_axi_in_V_RREADY;
    sc_in< sc_lv<16> > m_axi_in_V_RDATA;
    sc_in< sc_logic > m_axi_in_V_RLAST;
    sc_in< sc_lv<1> > m_axi_in_V_RID;
    sc_in< sc_lv<1> > m_axi_in_V_RUSER;
    sc_in< sc_lv<2> > m_axi_in_V_RRESP;
    sc_in< sc_logic > m_axi_in_V_BVALID;
    sc_out< sc_logic > m_axi_in_V_BREADY;
    sc_in< sc_lv<2> > m_axi_in_V_BRESP;
    sc_in< sc_lv<1> > m_axi_in_V_BID;
    sc_in< sc_lv<1> > m_axi_in_V_BUSER;
    sc_in< sc_lv<31> > in_V_offset;
    sc_out< sc_lv<8> > buff_in_0_V_address0;
    sc_out< sc_logic > buff_in_0_V_ce0;
    sc_out< sc_logic > buff_in_0_V_we0;
    sc_out< sc_lv<16> > buff_in_0_V_d0;
    sc_out< sc_lv<8> > buff_in_1_V_address0;
    sc_out< sc_logic > buff_in_1_V_ce0;
    sc_out< sc_logic > buff_in_1_V_we0;
    sc_out< sc_lv<16> > buff_in_1_V_d0;
    sc_out< sc_lv<8> > buff_in_2_V_address0;
    sc_out< sc_logic > buff_in_2_V_ce0;
    sc_out< sc_logic > buff_in_2_V_we0;
    sc_out< sc_lv<16> > buff_in_2_V_d0;
    sc_out< sc_lv<8> > buff_in_3_V_address0;
    sc_out< sc_logic > buff_in_3_V_ce0;
    sc_out< sc_logic > buff_in_3_V_we0;
    sc_out< sc_lv<16> > buff_in_3_V_d0;
    sc_in< sc_lv<32> > n;
    sc_in< sc_lv<32> > p;
    sc_in< sc_lv<32> > size;


    // Module declarations
    load_input(sc_module_name name);
    SC_HAS_PROCESS(load_input);

    ~load_input();

    sc_trace_file* mVcdFile;

    conv1d_urem_10ns_cud<1,14,10,9,10>* conv1d_urem_10ns_cud_U36;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_V_blk_n_AR;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > empty_11_reg_460;
    sc_signal< sc_logic > in_V_blk_n_R;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_lv<10> > indvar_flatten_reg_176;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter22;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > nn_0_reg_188;
    sc_signal< sc_lv<8> > pp_0_reg_200;
    sc_signal< sc_lv<32> > add_ln14_fu_212_p2;
    sc_signal< sc_lv<32> > add_ln14_reg_391;
    sc_signal< sc_lv<33> > sext_ln13_fu_224_p1;
    sc_signal< sc_lv<33> > sext_ln13_reg_396;
    sc_signal< sc_lv<34> > zext_ln9_1_fu_228_p1;
    sc_signal< sc_lv<34> > zext_ln9_1_reg_401;
    sc_signal< sc_lv<1> > icmp_ln9_fu_232_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_406_pp0_iter12_reg;
    sc_signal< sc_lv<10> > add_ln9_2_fu_238_p2;
    sc_signal< sc_lv<10> > add_ln9_2_reg_410;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > select_ln9_fu_256_p3;
    sc_signal< sc_lv<8> > select_ln9_reg_415;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter12_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter13_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter14_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter15_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter16_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter17_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter18_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter19_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter20_reg;
    sc_signal< sc_lv<8> > select_ln9_reg_415_pp0_iter21_reg;
    sc_signal< sc_lv<3> > select_ln9_1_fu_270_p3;
    sc_signal< sc_lv<3> > select_ln9_1_reg_420;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_lv<32> > add_ln9_fu_282_p2;
    sc_signal< sc_lv<32> > add_ln9_reg_425;
    sc_signal< sc_lv<2> > trunc_ln9_fu_287_p1;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter12_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter13_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter14_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter15_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter16_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter17_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter18_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter19_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter20_reg;
    sc_signal< sc_lv<2> > trunc_ln9_reg_430_pp0_iter21_reg;
    sc_signal< sc_lv<1> > icmp_ln14_fu_300_p2;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter15_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter16_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter17_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter18_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter19_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter20_reg;
    sc_signal< sc_lv<1> > icmp_ln14_reg_434_pp0_iter21_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_fu_306_p2;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter15_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter16_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter17_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter18_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter19_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter20_reg;
    sc_signal< sc_lv<1> > icmp_ln14_1_reg_439_pp0_iter21_reg;
    sc_signal< sc_lv<8> > pp_fu_311_p2;
    sc_signal< sc_lv<8> > pp_reg_444;
    sc_signal< sc_lv<32> > mul_ln9_fu_317_p2;
    sc_signal< sc_lv<32> > mul_ln9_reg_449;
    sc_signal< sc_lv<32> > in_V_addr_reg_454;
    sc_signal< sc_lv<1> > empty_11_fu_348_p2;
    sc_signal< sc_lv<16> > tmp_V_reg_464;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar_flatten_phi_fu_180_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_nn_0_phi_fu_192_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_pp_0_phi_fu_204_p4;
    sc_signal< sc_lv<64> > zext_ln15_fu_358_p1;
    sc_signal< sc_lv<64> > sext_ln13_1_fu_338_p1;
    sc_signal< sc_lv<16> > tmp_V_195_fu_365_p3;
    sc_signal< sc_lv<32> > add_ln14_fu_212_p0;
    sc_signal< sc_lv<32> > add_ln13_fu_218_p2;
    sc_signal< sc_lv<9> > grp_fu_244_p1;
    sc_signal< sc_lv<1> > icmp_ln10_fu_250_p2;
    sc_signal< sc_lv<3> > add_ln9_3_fu_264_p2;
    sc_signal< sc_lv<32> > zext_ln9_fu_278_p1;
    sc_signal< sc_lv<32> > zext_ln10_fu_291_p1;
    sc_signal< sc_lv<32> > add_ln14_1_fu_295_p2;
    sc_signal< sc_lv<32> > mul_ln9_fu_317_p1;
    sc_signal< sc_lv<33> > sext_ln9_fu_321_p1;
    sc_signal< sc_lv<33> > add_ln9_1_fu_324_p2;
    sc_signal< sc_lv<34> > sext_ln10_fu_329_p1;
    sc_signal< sc_lv<34> > add_ln13_1_fu_333_p2;
    sc_signal< sc_lv<10> > grp_fu_244_p2;
    sc_signal< sc_lv<1> > and_ln14_fu_354_p2;
    sc_signal< sc_logic > grp_fu_244_ce;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state25;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_98;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<10> ap_const_lv10_260;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_98;
    static const sc_lv<8> ap_const_lv8_98;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_1_fu_333_p2();
    void thread_add_ln13_fu_218_p2();
    void thread_add_ln14_1_fu_295_p2();
    void thread_add_ln14_fu_212_p0();
    void thread_add_ln14_fu_212_p2();
    void thread_add_ln9_1_fu_324_p2();
    void thread_add_ln9_2_fu_238_p2();
    void thread_add_ln9_3_fu_264_p2();
    void thread_add_ln9_fu_282_p2();
    void thread_and_ln14_fu_354_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state25();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_io();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state19_pp0_stage0_iter17();
    void thread_ap_block_state20_pp0_stage0_iter18();
    void thread_ap_block_state21_pp0_stage0_iter19();
    void thread_ap_block_state22_pp0_stage0_iter20();
    void thread_ap_block_state23_pp0_stage0_iter21();
    void thread_ap_block_state24_pp0_stage0_iter22();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_180_p4();
    void thread_ap_phi_mux_nn_0_phi_fu_192_p4();
    void thread_ap_phi_mux_pp_0_phi_fu_204_p4();
    void thread_ap_ready();
    void thread_buff_in_0_V_address0();
    void thread_buff_in_0_V_ce0();
    void thread_buff_in_0_V_d0();
    void thread_buff_in_0_V_we0();
    void thread_buff_in_1_V_address0();
    void thread_buff_in_1_V_ce0();
    void thread_buff_in_1_V_d0();
    void thread_buff_in_1_V_we0();
    void thread_buff_in_2_V_address0();
    void thread_buff_in_2_V_ce0();
    void thread_buff_in_2_V_d0();
    void thread_buff_in_2_V_we0();
    void thread_buff_in_3_V_address0();
    void thread_buff_in_3_V_ce0();
    void thread_buff_in_3_V_d0();
    void thread_buff_in_3_V_we0();
    void thread_empty_11_fu_348_p2();
    void thread_grp_fu_244_ce();
    void thread_grp_fu_244_p1();
    void thread_icmp_ln10_fu_250_p2();
    void thread_icmp_ln14_1_fu_306_p2();
    void thread_icmp_ln14_fu_300_p2();
    void thread_icmp_ln9_fu_232_p2();
    void thread_in_V_blk_n_AR();
    void thread_in_V_blk_n_R();
    void thread_m_axi_in_V_ARADDR();
    void thread_m_axi_in_V_ARBURST();
    void thread_m_axi_in_V_ARCACHE();
    void thread_m_axi_in_V_ARID();
    void thread_m_axi_in_V_ARLEN();
    void thread_m_axi_in_V_ARLOCK();
    void thread_m_axi_in_V_ARPROT();
    void thread_m_axi_in_V_ARQOS();
    void thread_m_axi_in_V_ARREGION();
    void thread_m_axi_in_V_ARSIZE();
    void thread_m_axi_in_V_ARUSER();
    void thread_m_axi_in_V_ARVALID();
    void thread_m_axi_in_V_AWADDR();
    void thread_m_axi_in_V_AWBURST();
    void thread_m_axi_in_V_AWCACHE();
    void thread_m_axi_in_V_AWID();
    void thread_m_axi_in_V_AWLEN();
    void thread_m_axi_in_V_AWLOCK();
    void thread_m_axi_in_V_AWPROT();
    void thread_m_axi_in_V_AWQOS();
    void thread_m_axi_in_V_AWREGION();
    void thread_m_axi_in_V_AWSIZE();
    void thread_m_axi_in_V_AWUSER();
    void thread_m_axi_in_V_AWVALID();
    void thread_m_axi_in_V_BREADY();
    void thread_m_axi_in_V_RREADY();
    void thread_m_axi_in_V_WDATA();
    void thread_m_axi_in_V_WID();
    void thread_m_axi_in_V_WLAST();
    void thread_m_axi_in_V_WSTRB();
    void thread_m_axi_in_V_WUSER();
    void thread_m_axi_in_V_WVALID();
    void thread_mul_ln9_fu_317_p1();
    void thread_mul_ln9_fu_317_p2();
    void thread_pp_fu_311_p2();
    void thread_select_ln9_1_fu_270_p3();
    void thread_select_ln9_fu_256_p3();
    void thread_sext_ln10_fu_329_p1();
    void thread_sext_ln13_1_fu_338_p1();
    void thread_sext_ln13_fu_224_p1();
    void thread_sext_ln9_fu_321_p1();
    void thread_tmp_V_195_fu_365_p3();
    void thread_trunc_ln9_fu_287_p1();
    void thread_zext_ln10_fu_291_p1();
    void thread_zext_ln15_fu_358_p1();
    void thread_zext_ln9_1_fu_228_p1();
    void thread_zext_ln9_fu_278_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
