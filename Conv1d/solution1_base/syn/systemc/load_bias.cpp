// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "load_bias.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic load_bias::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic load_bias::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> load_bias::ap_ST_fsm_state1 = "1";
const sc_lv<4> load_bias::ap_ST_fsm_state2 = "10";
const sc_lv<4> load_bias::ap_ST_fsm_state3 = "100";
const sc_lv<4> load_bias::ap_ST_fsm_state4 = "1000";
const sc_lv<32> load_bias::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> load_bias::ap_const_lv32_1 = "1";
const sc_lv<1> load_bias::ap_const_lv1_0 = "0";
const sc_lv<32> load_bias::ap_const_lv32_2 = "10";
const sc_lv<8> load_bias::ap_const_lv8_0 = "00000000";
const sc_lv<1> load_bias::ap_const_lv1_1 = "1";
const sc_lv<32> load_bias::ap_const_lv32_3 = "11";
const sc_lv<5> load_bias::ap_const_lv5_0 = "00000";
const sc_lv<4> load_bias::ap_const_lv4_E = "1110";
const sc_lv<4> load_bias::ap_const_lv4_D = "1101";
const sc_lv<4> load_bias::ap_const_lv4_C = "1100";
const sc_lv<4> load_bias::ap_const_lv4_B = "1011";
const sc_lv<4> load_bias::ap_const_lv4_A = "1010";
const sc_lv<4> load_bias::ap_const_lv4_9 = "1001";
const sc_lv<4> load_bias::ap_const_lv4_8 = "1000";
const sc_lv<4> load_bias::ap_const_lv4_7 = "111";
const sc_lv<4> load_bias::ap_const_lv4_6 = "110";
const sc_lv<4> load_bias::ap_const_lv4_5 = "101";
const sc_lv<4> load_bias::ap_const_lv4_4 = "100";
const sc_lv<4> load_bias::ap_const_lv4_3 = "11";
const sc_lv<4> load_bias::ap_const_lv4_2 = "10";
const sc_lv<4> load_bias::ap_const_lv4_1 = "1";
const sc_lv<4> load_bias::ap_const_lv4_0 = "0000";
const sc_lv<4> load_bias::ap_const_lv4_F = "1111";
const sc_lv<8> load_bias::ap_const_lv8_96 = "10010110";
const sc_lv<8> load_bias::ap_const_lv8_1 = "1";
const sc_lv<5> load_bias::ap_const_lv5_10 = "10000";
const sc_lv<5> load_bias::ap_const_lv5_1 = "1";
const bool load_bias::ap_const_boolean_1 = true;

load_bias::load_bias(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv1d_mux_164_16bkb_U1 = new conv1d_mux_164_16bkb<1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,4,16>("conv1d_mux_164_16bkb_U1");
    conv1d_mux_164_16bkb_U1->din0(bias_buff_V_q0);
    conv1d_mux_164_16bkb_U1->din1(bias_buff_V16_q0);
    conv1d_mux_164_16bkb_U1->din2(bias_buff_V17_q0);
    conv1d_mux_164_16bkb_U1->din3(bias_buff_V18_q0);
    conv1d_mux_164_16bkb_U1->din4(bias_buff_V19_q0);
    conv1d_mux_164_16bkb_U1->din5(bias_buff_V20_q0);
    conv1d_mux_164_16bkb_U1->din6(bias_buff_V21_q0);
    conv1d_mux_164_16bkb_U1->din7(bias_buff_V22_q0);
    conv1d_mux_164_16bkb_U1->din8(bias_buff_V23_q0);
    conv1d_mux_164_16bkb_U1->din9(bias_buff_V24_q0);
    conv1d_mux_164_16bkb_U1->din10(bias_buff_V25_q0);
    conv1d_mux_164_16bkb_U1->din11(bias_buff_V26_q0);
    conv1d_mux_164_16bkb_U1->din12(bias_buff_V27_q0);
    conv1d_mux_164_16bkb_U1->din13(bias_buff_V28_q0);
    conv1d_mux_164_16bkb_U1->din14(bias_buff_V29_q0);
    conv1d_mux_164_16bkb_U1->din15(bias_buff_V30_q0);
    conv1d_mux_164_16bkb_U1->din16(trunc_ln203_reg_829);
    conv1d_mux_164_16bkb_U1->dout(tmp_fu_600_p18);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln52_fu_552_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln52_fu_552_p2 );

    SC_METHOD(thread_bias_buff_V16_address0);
    sensitive << ( bias_buff_V16_addr_reg_658 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V16_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V17_address0);
    sensitive << ( bias_buff_V17_addr_reg_663 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V17_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V18_address0);
    sensitive << ( bias_buff_V18_addr_reg_668 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V18_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V19_address0);
    sensitive << ( bias_buff_V19_addr_reg_673 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V19_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V20_address0);
    sensitive << ( bias_buff_V20_addr_reg_678 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V20_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V21_address0);
    sensitive << ( bias_buff_V21_addr_reg_683 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V21_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V22_address0);
    sensitive << ( bias_buff_V22_addr_reg_688 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V22_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V23_address0);
    sensitive << ( bias_buff_V23_addr_reg_693 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V23_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V24_address0);
    sensitive << ( bias_buff_V24_addr_reg_698 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V24_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V25_address0);
    sensitive << ( bias_buff_V25_addr_reg_703 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V25_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V26_address0);
    sensitive << ( bias_buff_V26_addr_reg_708 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V26_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V27_address0);
    sensitive << ( bias_buff_V27_addr_reg_713 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V27_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V28_address0);
    sensitive << ( bias_buff_V28_addr_reg_718 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V28_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V29_address0);
    sensitive << ( bias_buff_V29_addr_reg_723 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V29_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V30_address0);
    sensitive << ( bias_buff_V30_addr_reg_728 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V30_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V_address0);
    sensitive << ( bias_buff_V_addr_reg_653 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_buff_V_offset_c_fu_532_p1);
    sensitive << ( bias_buff_V_offset );

    SC_METHOD(thread_buff_out_0_V_address0);
    sensitive << ( buff_out_0_V_addr_reg_741 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_0_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_0_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_10_V_address0);
    sensitive << ( buff_out_10_V_addr_reg_791 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_10_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_10_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_10_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_11_V_address0);
    sensitive << ( buff_out_11_V_addr_reg_796 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_11_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_11_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_11_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_12_V_address0);
    sensitive << ( buff_out_12_V_addr_reg_801 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_12_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_12_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_12_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_13_V_address0);
    sensitive << ( buff_out_13_V_addr_reg_806 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_13_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_13_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_13_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_14_V_address0);
    sensitive << ( buff_out_14_V_addr_reg_811 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_14_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_14_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_14_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_15_V_address0);
    sensitive << ( buff_out_15_V_addr_reg_816 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_15_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_15_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_15_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_1_V_address0);
    sensitive << ( buff_out_1_V_addr_reg_746 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_1_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_1_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_1_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_2_V_address0);
    sensitive << ( buff_out_2_V_addr_reg_751 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_2_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_2_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_2_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_3_V_address0);
    sensitive << ( buff_out_3_V_addr_reg_756 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_3_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_3_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_3_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_4_V_address0);
    sensitive << ( buff_out_4_V_addr_reg_761 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_4_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_4_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_4_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_5_V_address0);
    sensitive << ( buff_out_5_V_addr_reg_766 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_5_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_5_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_5_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_6_V_address0);
    sensitive << ( buff_out_6_V_addr_reg_771 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_6_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_6_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_6_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_7_V_address0);
    sensitive << ( buff_out_7_V_addr_reg_776 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_7_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_7_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_7_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_8_V_address0);
    sensitive << ( buff_out_8_V_addr_reg_781 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_8_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_8_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_8_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_9_V_address0);
    sensitive << ( buff_out_9_V_addr_reg_786 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_9_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buff_out_9_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_600_p18 );

    SC_METHOD(thread_buff_out_9_V_we0);
    sensitive << ( trunc_ln203_reg_829 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_i_fu_558_p2);
    sensitive << ( i_0_reg_510 );

    SC_METHOD(thread_icmp_ln52_fu_552_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_510 );

    SC_METHOD(thread_icmp_ln53_fu_584_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( m_0_reg_521 );

    SC_METHOD(thread_m_fu_590_p2);
    sensitive << ( m_0_reg_521 );

    SC_METHOD(thread_trunc_ln203_fu_596_p1);
    sensitive << ( m_0_reg_521 );

    SC_METHOD(thread_zext_ln54_fu_564_p1);
    sensitive << ( i_0_reg_510 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln52_fu_552_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln53_fu_584_p2 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "load_bias_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, buff_out_0_V_address0, "(port)buff_out_0_V_address0");
    sc_trace(mVcdFile, buff_out_0_V_ce0, "(port)buff_out_0_V_ce0");
    sc_trace(mVcdFile, buff_out_0_V_we0, "(port)buff_out_0_V_we0");
    sc_trace(mVcdFile, buff_out_0_V_d0, "(port)buff_out_0_V_d0");
    sc_trace(mVcdFile, buff_out_1_V_address0, "(port)buff_out_1_V_address0");
    sc_trace(mVcdFile, buff_out_1_V_ce0, "(port)buff_out_1_V_ce0");
    sc_trace(mVcdFile, buff_out_1_V_we0, "(port)buff_out_1_V_we0");
    sc_trace(mVcdFile, buff_out_1_V_d0, "(port)buff_out_1_V_d0");
    sc_trace(mVcdFile, buff_out_2_V_address0, "(port)buff_out_2_V_address0");
    sc_trace(mVcdFile, buff_out_2_V_ce0, "(port)buff_out_2_V_ce0");
    sc_trace(mVcdFile, buff_out_2_V_we0, "(port)buff_out_2_V_we0");
    sc_trace(mVcdFile, buff_out_2_V_d0, "(port)buff_out_2_V_d0");
    sc_trace(mVcdFile, buff_out_3_V_address0, "(port)buff_out_3_V_address0");
    sc_trace(mVcdFile, buff_out_3_V_ce0, "(port)buff_out_3_V_ce0");
    sc_trace(mVcdFile, buff_out_3_V_we0, "(port)buff_out_3_V_we0");
    sc_trace(mVcdFile, buff_out_3_V_d0, "(port)buff_out_3_V_d0");
    sc_trace(mVcdFile, buff_out_4_V_address0, "(port)buff_out_4_V_address0");
    sc_trace(mVcdFile, buff_out_4_V_ce0, "(port)buff_out_4_V_ce0");
    sc_trace(mVcdFile, buff_out_4_V_we0, "(port)buff_out_4_V_we0");
    sc_trace(mVcdFile, buff_out_4_V_d0, "(port)buff_out_4_V_d0");
    sc_trace(mVcdFile, buff_out_5_V_address0, "(port)buff_out_5_V_address0");
    sc_trace(mVcdFile, buff_out_5_V_ce0, "(port)buff_out_5_V_ce0");
    sc_trace(mVcdFile, buff_out_5_V_we0, "(port)buff_out_5_V_we0");
    sc_trace(mVcdFile, buff_out_5_V_d0, "(port)buff_out_5_V_d0");
    sc_trace(mVcdFile, buff_out_6_V_address0, "(port)buff_out_6_V_address0");
    sc_trace(mVcdFile, buff_out_6_V_ce0, "(port)buff_out_6_V_ce0");
    sc_trace(mVcdFile, buff_out_6_V_we0, "(port)buff_out_6_V_we0");
    sc_trace(mVcdFile, buff_out_6_V_d0, "(port)buff_out_6_V_d0");
    sc_trace(mVcdFile, buff_out_7_V_address0, "(port)buff_out_7_V_address0");
    sc_trace(mVcdFile, buff_out_7_V_ce0, "(port)buff_out_7_V_ce0");
    sc_trace(mVcdFile, buff_out_7_V_we0, "(port)buff_out_7_V_we0");
    sc_trace(mVcdFile, buff_out_7_V_d0, "(port)buff_out_7_V_d0");
    sc_trace(mVcdFile, buff_out_8_V_address0, "(port)buff_out_8_V_address0");
    sc_trace(mVcdFile, buff_out_8_V_ce0, "(port)buff_out_8_V_ce0");
    sc_trace(mVcdFile, buff_out_8_V_we0, "(port)buff_out_8_V_we0");
    sc_trace(mVcdFile, buff_out_8_V_d0, "(port)buff_out_8_V_d0");
    sc_trace(mVcdFile, buff_out_9_V_address0, "(port)buff_out_9_V_address0");
    sc_trace(mVcdFile, buff_out_9_V_ce0, "(port)buff_out_9_V_ce0");
    sc_trace(mVcdFile, buff_out_9_V_we0, "(port)buff_out_9_V_we0");
    sc_trace(mVcdFile, buff_out_9_V_d0, "(port)buff_out_9_V_d0");
    sc_trace(mVcdFile, buff_out_10_V_address0, "(port)buff_out_10_V_address0");
    sc_trace(mVcdFile, buff_out_10_V_ce0, "(port)buff_out_10_V_ce0");
    sc_trace(mVcdFile, buff_out_10_V_we0, "(port)buff_out_10_V_we0");
    sc_trace(mVcdFile, buff_out_10_V_d0, "(port)buff_out_10_V_d0");
    sc_trace(mVcdFile, buff_out_11_V_address0, "(port)buff_out_11_V_address0");
    sc_trace(mVcdFile, buff_out_11_V_ce0, "(port)buff_out_11_V_ce0");
    sc_trace(mVcdFile, buff_out_11_V_we0, "(port)buff_out_11_V_we0");
    sc_trace(mVcdFile, buff_out_11_V_d0, "(port)buff_out_11_V_d0");
    sc_trace(mVcdFile, buff_out_12_V_address0, "(port)buff_out_12_V_address0");
    sc_trace(mVcdFile, buff_out_12_V_ce0, "(port)buff_out_12_V_ce0");
    sc_trace(mVcdFile, buff_out_12_V_we0, "(port)buff_out_12_V_we0");
    sc_trace(mVcdFile, buff_out_12_V_d0, "(port)buff_out_12_V_d0");
    sc_trace(mVcdFile, buff_out_13_V_address0, "(port)buff_out_13_V_address0");
    sc_trace(mVcdFile, buff_out_13_V_ce0, "(port)buff_out_13_V_ce0");
    sc_trace(mVcdFile, buff_out_13_V_we0, "(port)buff_out_13_V_we0");
    sc_trace(mVcdFile, buff_out_13_V_d0, "(port)buff_out_13_V_d0");
    sc_trace(mVcdFile, buff_out_14_V_address0, "(port)buff_out_14_V_address0");
    sc_trace(mVcdFile, buff_out_14_V_ce0, "(port)buff_out_14_V_ce0");
    sc_trace(mVcdFile, buff_out_14_V_we0, "(port)buff_out_14_V_we0");
    sc_trace(mVcdFile, buff_out_14_V_d0, "(port)buff_out_14_V_d0");
    sc_trace(mVcdFile, buff_out_15_V_address0, "(port)buff_out_15_V_address0");
    sc_trace(mVcdFile, buff_out_15_V_ce0, "(port)buff_out_15_V_ce0");
    sc_trace(mVcdFile, buff_out_15_V_we0, "(port)buff_out_15_V_we0");
    sc_trace(mVcdFile, buff_out_15_V_d0, "(port)buff_out_15_V_d0");
    sc_trace(mVcdFile, bias_buff_V_address0, "(port)bias_buff_V_address0");
    sc_trace(mVcdFile, bias_buff_V_ce0, "(port)bias_buff_V_ce0");
    sc_trace(mVcdFile, bias_buff_V_q0, "(port)bias_buff_V_q0");
    sc_trace(mVcdFile, bias_buff_V16_address0, "(port)bias_buff_V16_address0");
    sc_trace(mVcdFile, bias_buff_V16_ce0, "(port)bias_buff_V16_ce0");
    sc_trace(mVcdFile, bias_buff_V16_q0, "(port)bias_buff_V16_q0");
    sc_trace(mVcdFile, bias_buff_V17_address0, "(port)bias_buff_V17_address0");
    sc_trace(mVcdFile, bias_buff_V17_ce0, "(port)bias_buff_V17_ce0");
    sc_trace(mVcdFile, bias_buff_V17_q0, "(port)bias_buff_V17_q0");
    sc_trace(mVcdFile, bias_buff_V18_address0, "(port)bias_buff_V18_address0");
    sc_trace(mVcdFile, bias_buff_V18_ce0, "(port)bias_buff_V18_ce0");
    sc_trace(mVcdFile, bias_buff_V18_q0, "(port)bias_buff_V18_q0");
    sc_trace(mVcdFile, bias_buff_V19_address0, "(port)bias_buff_V19_address0");
    sc_trace(mVcdFile, bias_buff_V19_ce0, "(port)bias_buff_V19_ce0");
    sc_trace(mVcdFile, bias_buff_V19_q0, "(port)bias_buff_V19_q0");
    sc_trace(mVcdFile, bias_buff_V20_address0, "(port)bias_buff_V20_address0");
    sc_trace(mVcdFile, bias_buff_V20_ce0, "(port)bias_buff_V20_ce0");
    sc_trace(mVcdFile, bias_buff_V20_q0, "(port)bias_buff_V20_q0");
    sc_trace(mVcdFile, bias_buff_V21_address0, "(port)bias_buff_V21_address0");
    sc_trace(mVcdFile, bias_buff_V21_ce0, "(port)bias_buff_V21_ce0");
    sc_trace(mVcdFile, bias_buff_V21_q0, "(port)bias_buff_V21_q0");
    sc_trace(mVcdFile, bias_buff_V22_address0, "(port)bias_buff_V22_address0");
    sc_trace(mVcdFile, bias_buff_V22_ce0, "(port)bias_buff_V22_ce0");
    sc_trace(mVcdFile, bias_buff_V22_q0, "(port)bias_buff_V22_q0");
    sc_trace(mVcdFile, bias_buff_V23_address0, "(port)bias_buff_V23_address0");
    sc_trace(mVcdFile, bias_buff_V23_ce0, "(port)bias_buff_V23_ce0");
    sc_trace(mVcdFile, bias_buff_V23_q0, "(port)bias_buff_V23_q0");
    sc_trace(mVcdFile, bias_buff_V24_address0, "(port)bias_buff_V24_address0");
    sc_trace(mVcdFile, bias_buff_V24_ce0, "(port)bias_buff_V24_ce0");
    sc_trace(mVcdFile, bias_buff_V24_q0, "(port)bias_buff_V24_q0");
    sc_trace(mVcdFile, bias_buff_V25_address0, "(port)bias_buff_V25_address0");
    sc_trace(mVcdFile, bias_buff_V25_ce0, "(port)bias_buff_V25_ce0");
    sc_trace(mVcdFile, bias_buff_V25_q0, "(port)bias_buff_V25_q0");
    sc_trace(mVcdFile, bias_buff_V26_address0, "(port)bias_buff_V26_address0");
    sc_trace(mVcdFile, bias_buff_V26_ce0, "(port)bias_buff_V26_ce0");
    sc_trace(mVcdFile, bias_buff_V26_q0, "(port)bias_buff_V26_q0");
    sc_trace(mVcdFile, bias_buff_V27_address0, "(port)bias_buff_V27_address0");
    sc_trace(mVcdFile, bias_buff_V27_ce0, "(port)bias_buff_V27_ce0");
    sc_trace(mVcdFile, bias_buff_V27_q0, "(port)bias_buff_V27_q0");
    sc_trace(mVcdFile, bias_buff_V28_address0, "(port)bias_buff_V28_address0");
    sc_trace(mVcdFile, bias_buff_V28_ce0, "(port)bias_buff_V28_ce0");
    sc_trace(mVcdFile, bias_buff_V28_q0, "(port)bias_buff_V28_q0");
    sc_trace(mVcdFile, bias_buff_V29_address0, "(port)bias_buff_V29_address0");
    sc_trace(mVcdFile, bias_buff_V29_ce0, "(port)bias_buff_V29_ce0");
    sc_trace(mVcdFile, bias_buff_V29_q0, "(port)bias_buff_V29_q0");
    sc_trace(mVcdFile, bias_buff_V30_address0, "(port)bias_buff_V30_address0");
    sc_trace(mVcdFile, bias_buff_V30_ce0, "(port)bias_buff_V30_ce0");
    sc_trace(mVcdFile, bias_buff_V30_q0, "(port)bias_buff_V30_q0");
    sc_trace(mVcdFile, bias_buff_V_offset, "(port)bias_buff_V_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, bias_buff_V_addr_reg_653, "bias_buff_V_addr_reg_653");
    sc_trace(mVcdFile, bias_buff_V16_addr_reg_658, "bias_buff_V16_addr_reg_658");
    sc_trace(mVcdFile, bias_buff_V17_addr_reg_663, "bias_buff_V17_addr_reg_663");
    sc_trace(mVcdFile, bias_buff_V18_addr_reg_668, "bias_buff_V18_addr_reg_668");
    sc_trace(mVcdFile, bias_buff_V19_addr_reg_673, "bias_buff_V19_addr_reg_673");
    sc_trace(mVcdFile, bias_buff_V20_addr_reg_678, "bias_buff_V20_addr_reg_678");
    sc_trace(mVcdFile, bias_buff_V21_addr_reg_683, "bias_buff_V21_addr_reg_683");
    sc_trace(mVcdFile, bias_buff_V22_addr_reg_688, "bias_buff_V22_addr_reg_688");
    sc_trace(mVcdFile, bias_buff_V23_addr_reg_693, "bias_buff_V23_addr_reg_693");
    sc_trace(mVcdFile, bias_buff_V24_addr_reg_698, "bias_buff_V24_addr_reg_698");
    sc_trace(mVcdFile, bias_buff_V25_addr_reg_703, "bias_buff_V25_addr_reg_703");
    sc_trace(mVcdFile, bias_buff_V26_addr_reg_708, "bias_buff_V26_addr_reg_708");
    sc_trace(mVcdFile, bias_buff_V27_addr_reg_713, "bias_buff_V27_addr_reg_713");
    sc_trace(mVcdFile, bias_buff_V28_addr_reg_718, "bias_buff_V28_addr_reg_718");
    sc_trace(mVcdFile, bias_buff_V29_addr_reg_723, "bias_buff_V29_addr_reg_723");
    sc_trace(mVcdFile, bias_buff_V30_addr_reg_728, "bias_buff_V30_addr_reg_728");
    sc_trace(mVcdFile, i_fu_558_p2, "i_fu_558_p2");
    sc_trace(mVcdFile, i_reg_736, "i_reg_736");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, buff_out_0_V_addr_reg_741, "buff_out_0_V_addr_reg_741");
    sc_trace(mVcdFile, icmp_ln52_fu_552_p2, "icmp_ln52_fu_552_p2");
    sc_trace(mVcdFile, buff_out_1_V_addr_reg_746, "buff_out_1_V_addr_reg_746");
    sc_trace(mVcdFile, buff_out_2_V_addr_reg_751, "buff_out_2_V_addr_reg_751");
    sc_trace(mVcdFile, buff_out_3_V_addr_reg_756, "buff_out_3_V_addr_reg_756");
    sc_trace(mVcdFile, buff_out_4_V_addr_reg_761, "buff_out_4_V_addr_reg_761");
    sc_trace(mVcdFile, buff_out_5_V_addr_reg_766, "buff_out_5_V_addr_reg_766");
    sc_trace(mVcdFile, buff_out_6_V_addr_reg_771, "buff_out_6_V_addr_reg_771");
    sc_trace(mVcdFile, buff_out_7_V_addr_reg_776, "buff_out_7_V_addr_reg_776");
    sc_trace(mVcdFile, buff_out_8_V_addr_reg_781, "buff_out_8_V_addr_reg_781");
    sc_trace(mVcdFile, buff_out_9_V_addr_reg_786, "buff_out_9_V_addr_reg_786");
    sc_trace(mVcdFile, buff_out_10_V_addr_reg_791, "buff_out_10_V_addr_reg_791");
    sc_trace(mVcdFile, buff_out_11_V_addr_reg_796, "buff_out_11_V_addr_reg_796");
    sc_trace(mVcdFile, buff_out_12_V_addr_reg_801, "buff_out_12_V_addr_reg_801");
    sc_trace(mVcdFile, buff_out_13_V_addr_reg_806, "buff_out_13_V_addr_reg_806");
    sc_trace(mVcdFile, buff_out_14_V_addr_reg_811, "buff_out_14_V_addr_reg_811");
    sc_trace(mVcdFile, buff_out_15_V_addr_reg_816, "buff_out_15_V_addr_reg_816");
    sc_trace(mVcdFile, m_fu_590_p2, "m_fu_590_p2");
    sc_trace(mVcdFile, m_reg_824, "m_reg_824");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, trunc_ln203_fu_596_p1, "trunc_ln203_fu_596_p1");
    sc_trace(mVcdFile, trunc_ln203_reg_829, "trunc_ln203_reg_829");
    sc_trace(mVcdFile, icmp_ln53_fu_584_p2, "icmp_ln53_fu_584_p2");
    sc_trace(mVcdFile, i_0_reg_510, "i_0_reg_510");
    sc_trace(mVcdFile, m_0_reg_521, "m_0_reg_521");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, bias_buff_V_offset_c_fu_532_p1, "bias_buff_V_offset_c_fu_532_p1");
    sc_trace(mVcdFile, zext_ln54_fu_564_p1, "zext_ln54_fu_564_p1");
    sc_trace(mVcdFile, tmp_fu_600_p18, "tmp_fu_600_p18");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

load_bias::~load_bias() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv1d_mux_164_16bkb_U1;
}

void load_bias::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln53_fu_584_p2.read(), ap_const_lv1_1))) {
        i_0_reg_510 = i_reg_736.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_510 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln52_fu_552_p2.read(), ap_const_lv1_0))) {
        m_0_reg_521 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_0_reg_521 = m_reg_824.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bias_buff_V16_addr_reg_658 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V17_addr_reg_663 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V18_addr_reg_668 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V19_addr_reg_673 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V20_addr_reg_678 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V21_addr_reg_683 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V22_addr_reg_688 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V23_addr_reg_693 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V24_addr_reg_698 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V25_addr_reg_703 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V26_addr_reg_708 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V27_addr_reg_713 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V28_addr_reg_718 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V29_addr_reg_723 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V30_addr_reg_728 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
        bias_buff_V_addr_reg_653 =  (sc_lv<6>) (bias_buff_V_offset_c_fu_532_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln52_fu_552_p2.read(), ap_const_lv1_0))) {
        buff_out_0_V_addr_reg_741 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_10_V_addr_reg_791 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_11_V_addr_reg_796 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_12_V_addr_reg_801 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_13_V_addr_reg_806 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_14_V_addr_reg_811 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_15_V_addr_reg_816 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_1_V_addr_reg_746 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_2_V_addr_reg_751 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_3_V_addr_reg_756 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_4_V_addr_reg_761 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_5_V_addr_reg_766 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_6_V_addr_reg_771 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_7_V_addr_reg_776 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_8_V_addr_reg_781 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
        buff_out_9_V_addr_reg_786 =  (sc_lv<8>) (zext_ln54_fu_564_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_736 = i_fu_558_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_reg_824 = m_fu_590_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln53_fu_584_p2.read()))) {
        trunc_ln203_reg_829 = trunc_ln203_fu_596_p1.read();
    }
}

void load_bias::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void load_bias::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void load_bias::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void load_bias::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void load_bias::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln52_fu_552_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void load_bias::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void load_bias::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln52_fu_552_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V16_address0() {
    bias_buff_V16_address0 = bias_buff_V16_addr_reg_658.read();
}

void load_bias::thread_bias_buff_V16_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V16_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V16_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V17_address0() {
    bias_buff_V17_address0 = bias_buff_V17_addr_reg_663.read();
}

void load_bias::thread_bias_buff_V17_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V17_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V17_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V18_address0() {
    bias_buff_V18_address0 = bias_buff_V18_addr_reg_668.read();
}

void load_bias::thread_bias_buff_V18_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V18_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V18_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V19_address0() {
    bias_buff_V19_address0 = bias_buff_V19_addr_reg_673.read();
}

void load_bias::thread_bias_buff_V19_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V19_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V19_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V20_address0() {
    bias_buff_V20_address0 = bias_buff_V20_addr_reg_678.read();
}

void load_bias::thread_bias_buff_V20_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V20_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V20_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V21_address0() {
    bias_buff_V21_address0 = bias_buff_V21_addr_reg_683.read();
}

void load_bias::thread_bias_buff_V21_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V21_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V21_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V22_address0() {
    bias_buff_V22_address0 = bias_buff_V22_addr_reg_688.read();
}

void load_bias::thread_bias_buff_V22_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V22_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V22_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V23_address0() {
    bias_buff_V23_address0 = bias_buff_V23_addr_reg_693.read();
}

void load_bias::thread_bias_buff_V23_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V23_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V23_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V24_address0() {
    bias_buff_V24_address0 = bias_buff_V24_addr_reg_698.read();
}

void load_bias::thread_bias_buff_V24_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V24_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V24_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V25_address0() {
    bias_buff_V25_address0 = bias_buff_V25_addr_reg_703.read();
}

void load_bias::thread_bias_buff_V25_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V25_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V25_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V26_address0() {
    bias_buff_V26_address0 = bias_buff_V26_addr_reg_708.read();
}

void load_bias::thread_bias_buff_V26_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V26_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V26_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V27_address0() {
    bias_buff_V27_address0 = bias_buff_V27_addr_reg_713.read();
}

void load_bias::thread_bias_buff_V27_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V27_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V27_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V28_address0() {
    bias_buff_V28_address0 = bias_buff_V28_addr_reg_718.read();
}

void load_bias::thread_bias_buff_V28_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V28_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V28_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V29_address0() {
    bias_buff_V29_address0 = bias_buff_V29_addr_reg_723.read();
}

void load_bias::thread_bias_buff_V29_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V29_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V29_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V30_address0() {
    bias_buff_V30_address0 = bias_buff_V30_addr_reg_728.read();
}

void load_bias::thread_bias_buff_V30_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V30_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V30_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V_address0() {
    bias_buff_V_address0 = bias_buff_V_addr_reg_653.read();
}

void load_bias::thread_bias_buff_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_buff_V_ce0 = ap_const_logic_1;
    } else {
        bias_buff_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_bias_buff_V_offset_c_fu_532_p1() {
    bias_buff_V_offset_c_fu_532_p1 = esl_sext<64,29>(bias_buff_V_offset.read());
}

void load_bias::thread_buff_out_0_V_address0() {
    buff_out_0_V_address0 = buff_out_0_V_addr_reg_741.read();
}

void load_bias::thread_buff_out_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_0_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_0_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_0_V_d0() {
    buff_out_0_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_0))) {
        buff_out_0_V_we0 = ap_const_logic_1;
    } else {
        buff_out_0_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_10_V_address0() {
    buff_out_10_V_address0 = buff_out_10_V_addr_reg_791.read();
}

void load_bias::thread_buff_out_10_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_10_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_10_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_10_V_d0() {
    buff_out_10_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_10_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_A))) {
        buff_out_10_V_we0 = ap_const_logic_1;
    } else {
        buff_out_10_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_11_V_address0() {
    buff_out_11_V_address0 = buff_out_11_V_addr_reg_796.read();
}

void load_bias::thread_buff_out_11_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_11_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_11_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_11_V_d0() {
    buff_out_11_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_11_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_B))) {
        buff_out_11_V_we0 = ap_const_logic_1;
    } else {
        buff_out_11_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_12_V_address0() {
    buff_out_12_V_address0 = buff_out_12_V_addr_reg_801.read();
}

void load_bias::thread_buff_out_12_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_12_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_12_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_12_V_d0() {
    buff_out_12_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_12_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_C))) {
        buff_out_12_V_we0 = ap_const_logic_1;
    } else {
        buff_out_12_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_13_V_address0() {
    buff_out_13_V_address0 = buff_out_13_V_addr_reg_806.read();
}

void load_bias::thread_buff_out_13_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_13_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_13_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_13_V_d0() {
    buff_out_13_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_13_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_D))) {
        buff_out_13_V_we0 = ap_const_logic_1;
    } else {
        buff_out_13_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_14_V_address0() {
    buff_out_14_V_address0 = buff_out_14_V_addr_reg_811.read();
}

void load_bias::thread_buff_out_14_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_14_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_14_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_14_V_d0() {
    buff_out_14_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_14_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_E))) {
        buff_out_14_V_we0 = ap_const_logic_1;
    } else {
        buff_out_14_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_15_V_address0() {
    buff_out_15_V_address0 = buff_out_15_V_addr_reg_816.read();
}

void load_bias::thread_buff_out_15_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_15_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_15_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_15_V_d0() {
    buff_out_15_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_15_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_F))) {
        buff_out_15_V_we0 = ap_const_logic_1;
    } else {
        buff_out_15_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_1_V_address0() {
    buff_out_1_V_address0 = buff_out_1_V_addr_reg_746.read();
}

void load_bias::thread_buff_out_1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_1_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_1_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_1_V_d0() {
    buff_out_1_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_1))) {
        buff_out_1_V_we0 = ap_const_logic_1;
    } else {
        buff_out_1_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_2_V_address0() {
    buff_out_2_V_address0 = buff_out_2_V_addr_reg_751.read();
}

void load_bias::thread_buff_out_2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_2_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_2_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_2_V_d0() {
    buff_out_2_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_2))) {
        buff_out_2_V_we0 = ap_const_logic_1;
    } else {
        buff_out_2_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_3_V_address0() {
    buff_out_3_V_address0 = buff_out_3_V_addr_reg_756.read();
}

void load_bias::thread_buff_out_3_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_3_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_3_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_3_V_d0() {
    buff_out_3_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_3))) {
        buff_out_3_V_we0 = ap_const_logic_1;
    } else {
        buff_out_3_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_4_V_address0() {
    buff_out_4_V_address0 = buff_out_4_V_addr_reg_761.read();
}

void load_bias::thread_buff_out_4_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_4_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_4_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_4_V_d0() {
    buff_out_4_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_4))) {
        buff_out_4_V_we0 = ap_const_logic_1;
    } else {
        buff_out_4_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_5_V_address0() {
    buff_out_5_V_address0 = buff_out_5_V_addr_reg_766.read();
}

void load_bias::thread_buff_out_5_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_5_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_5_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_5_V_d0() {
    buff_out_5_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_5))) {
        buff_out_5_V_we0 = ap_const_logic_1;
    } else {
        buff_out_5_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_6_V_address0() {
    buff_out_6_V_address0 = buff_out_6_V_addr_reg_771.read();
}

void load_bias::thread_buff_out_6_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_6_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_6_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_6_V_d0() {
    buff_out_6_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_6))) {
        buff_out_6_V_we0 = ap_const_logic_1;
    } else {
        buff_out_6_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_7_V_address0() {
    buff_out_7_V_address0 = buff_out_7_V_addr_reg_776.read();
}

void load_bias::thread_buff_out_7_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_7_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_7_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_7_V_d0() {
    buff_out_7_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_7_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_7))) {
        buff_out_7_V_we0 = ap_const_logic_1;
    } else {
        buff_out_7_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_8_V_address0() {
    buff_out_8_V_address0 = buff_out_8_V_addr_reg_781.read();
}

void load_bias::thread_buff_out_8_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_8_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_8_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_8_V_d0() {
    buff_out_8_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_8_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_8))) {
        buff_out_8_V_we0 = ap_const_logic_1;
    } else {
        buff_out_8_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_9_V_address0() {
    buff_out_9_V_address0 = buff_out_9_V_addr_reg_786.read();
}

void load_bias::thread_buff_out_9_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buff_out_9_V_ce0 = ap_const_logic_1;
    } else {
        buff_out_9_V_ce0 = ap_const_logic_0;
    }
}

void load_bias::thread_buff_out_9_V_d0() {
    buff_out_9_V_d0 = tmp_fu_600_p18.read();
}

void load_bias::thread_buff_out_9_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_reg_829.read(), ap_const_lv4_9))) {
        buff_out_9_V_we0 = ap_const_logic_1;
    } else {
        buff_out_9_V_we0 = ap_const_logic_0;
    }
}

void load_bias::thread_i_fu_558_p2() {
    i_fu_558_p2 = (!i_0_reg_510.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_0_reg_510.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void load_bias::thread_icmp_ln52_fu_552_p2() {
    icmp_ln52_fu_552_p2 = (!i_0_reg_510.read().is_01() || !ap_const_lv8_96.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_510.read() == ap_const_lv8_96);
}

void load_bias::thread_icmp_ln53_fu_584_p2() {
    icmp_ln53_fu_584_p2 = (!m_0_reg_521.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_521.read() == ap_const_lv5_10);
}

void load_bias::thread_m_fu_590_p2() {
    m_fu_590_p2 = (!m_0_reg_521.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(m_0_reg_521.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void load_bias::thread_trunc_ln203_fu_596_p1() {
    trunc_ln203_fu_596_p1 = m_0_reg_521.read().range(4-1, 0);
}

void load_bias::thread_zext_ln54_fu_564_p1() {
    zext_ln54_fu_564_p1 = esl_zext<64,8>(i_0_reg_510.read());
}

void load_bias::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln52_fu_552_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln53_fu_584_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

