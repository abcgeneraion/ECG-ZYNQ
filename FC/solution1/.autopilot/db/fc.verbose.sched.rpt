

================================================================
== Vivado HLS Report for 'fc'
================================================================
* Date:           Fri Mar 25 16:09:19 2022

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        FC
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    72052|    72052| 0.721 ms | 0.721 ms |  72052|  72052|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |    72040|    72040|     14408|          -|          -|     5|    no    |
        | + Loop 1.1  |    14400|    14400|         3|          -|          -|  4800|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 19 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 9 
17 --> 18 
18 --> 16 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 23 [1/1] (1.00ns)   --->   "%out_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_V)"   --->   Operation 23 'read' 'out_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 24 [1/1] (1.00ns)   --->   "%bias_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %bias_V)"   --->   Operation 24 'read' 'bias_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 25 [1/1] (1.00ns)   --->   "%weight_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %weight_V)"   --->   Operation 25 'read' 'weight_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 26 [1/1] (1.00ns)   --->   "%in_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_V)"   --->   Operation 26 'read' 'in_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%out_V7 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %out_V_read, i32 1, i32 31)"   --->   Operation 27 'partselect' 'out_V7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%empty = zext i31 %out_V7 to i64"   --->   Operation 28 'zext' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr i16* %OUT_r, i64 %empty"   --->   Operation 29 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%bias_V5 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %bias_V_read, i32 1, i32 31)"   --->   Operation 30 'partselect' 'bias_V5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%empty_4 = zext i31 %bias_V5 to i64"   --->   Operation 31 'zext' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i16* %B, i64 %empty_4"   --->   Operation 32 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%weight_V3 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %weight_V_read, i32 1, i32 31)"   --->   Operation 33 'partselect' 'weight_V3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%empty_5 = zext i31 %weight_V3 to i64"   --->   Operation 34 'zext' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%W_addr = getelementptr i16* %W, i64 %empty_5"   --->   Operation 35 'getelementptr' 'W_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%in_V1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %in_V_read, i32 1, i32 31)"   --->   Operation 36 'partselect' 'in_V1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%empty_6 = zext i31 %in_V1 to i64"   --->   Operation 37 'zext' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%IN_addr = getelementptr i16* %IN_r, i64 %empty_6"   --->   Operation 38 'getelementptr' 'IN_addr' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 39 [7/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 39 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 40 [7/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 40 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 41 [6/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 41 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 42 [6/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 42 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 43 [5/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 43 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 44 [5/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 44 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 45 [4/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 45 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 46 [4/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 46 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 47 [3/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 47 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 48 [3/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 48 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 49 [2/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 49 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 50 [2/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 50 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %OUT_r), !map !58"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %B), !map !64"   --->   Operation 52 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %W), !map !68"   --->   Operation 53 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %IN_r), !map !72"   --->   Operation 54 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([3 x i8]* @fc_str) nounwind"   --->   Operation 55 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:4]   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [4 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:5]   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_V, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:5]   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %B, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [2 x i8]* @p_str6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:6]   --->   Operation 59 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %bias_V, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:6]   --->   Operation 60 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %W, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [2 x i8]* @p_str7, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:7]   --->   Operation 61 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %weight_V, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle2, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:7]   --->   Operation 62 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %IN_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [3 x i8]* @p_str8, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:8]   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_V, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:8]   --->   Operation 64 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 65 [1/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 65 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 66 [1/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 66 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 67 [1/1] (8.75ns)   --->   "%OUT_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %OUT_addr, i32 5)" [FC/fc.cpp:18]   --->   Operation 67 'writereq' 'OUT_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 68 [1/1] (0.46ns)   --->   "br label %1" [FC/fc.cpp:10]   --->   Operation 68 'br' <Predicate = true> <Delay = 0.46>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %4 ]"   --->   Operation 69 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 70 [1/1] (0.98ns)   --->   "%icmp_ln10 = icmp eq i3 %i_0, -3" [FC/fc.cpp:10]   --->   Operation 70 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 71 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (0.76ns)   --->   "%i = add i3 %i_0, 1" [FC/fc.cpp:10]   --->   Operation 72 'add' 'i' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %5, label %2" [FC/fc.cpp:10]   --->   Operation 73 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [7/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 74 'readreq' 'IN_addr_rd_req' <Predicate = (!icmp_ln10)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 75 [5/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 75 'writeresp' 'OUT_addr_wr_resp' <Predicate = (icmp_ln10)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 76 [6/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 76 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 77 [5/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 77 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 78 [4/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 78 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 79 [3/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 79 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 80 [1/1] (8.75ns)   --->   "%tmp_V = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %B_addr)" [FC/fc.cpp:11]   --->   Operation 80 'read' 'tmp_V' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 81 [2/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 81 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 82 [1/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 82 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 83 [1/1] (0.46ns)   --->   "br label %3" [FC/fc.cpp:12]   --->   Operation 83 'br' <Predicate = true> <Delay = 0.46>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 84 [1/1] (0.00ns)   --->   "%p_Val2_s = phi i16 [ %tmp_V, %2 ], [ %select_ln340_1, %_ZN13ap_fixed_baseILi33ELi13ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i_ifconv ]"   --->   Operation 84 'phi' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 85 [1/1] (0.00ns)   --->   "%j_0 = phi i13 [ 0, %2 ], [ %j, %_ZN13ap_fixed_baseILi33ELi13ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i_ifconv ]"   --->   Operation 85 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 86 [1/1] (1.90ns)   --->   "%icmp_ln12 = icmp eq i13 %j_0, -3392" [FC/fc.cpp:12]   --->   Operation 86 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.90> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 87 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4800, i64 4800, i64 4800)"   --->   Operation 87 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 88 [1/1] (1.53ns)   --->   "%j = add i13 %j_0, 1" [FC/fc.cpp:12]   --->   Operation 88 'add' 'j' <Predicate = true> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 89 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %4, label %_ZN13ap_fixed_baseILi33ELi13ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i_ifconv" [FC/fc.cpp:12]   --->   Operation 89 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 90 [1/1] (8.75ns)   --->   "%IN_addr_read = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %IN_addr)" [FC/fc.cpp:15]   --->   Operation 90 'read' 'IN_addr_read' <Predicate = (!icmp_ln12)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 91 [1/1] (8.75ns)   --->   "%W_addr_read = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %W_addr)" [FC/fc.cpp:15]   --->   Operation 91 'read' 'W_addr_read' <Predicate = (!icmp_ln12)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 92 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %OUT_addr, i16 %p_Val2_s, i2 -1)" [FC/fc.cpp:18]   --->   Operation 92 'write' <Predicate = (icmp_ln12)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 93 [1/1] (0.00ns)   --->   "br label %1" [FC/fc.cpp:10]   --->   Operation 93 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 17 <SV = 16> <Delay = 5.55>
ST_17 : Operation 94 [1/1] (0.00ns)   --->   "%r_V = sext i16 %IN_addr_read to i32" [FC/fc.cpp:15]   --->   Operation 94 'sext' 'r_V' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 95 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i16 %W_addr_read to i32" [FC/fc.cpp:15]   --->   Operation 95 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 96 [1/1] (5.55ns) (root node of the DSP)   --->   "%r_V_2 = mul nsw i32 %r_V, %sext_ln1118" [FC/fc.cpp:15]   --->   Operation 96 'mul' 'r_V_2' <Predicate = true> <Delay = 5.55> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 97 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %r_V_2, i32 9)" [FC/fc.cpp:15]   --->   Operation 97 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>

State 18 <SV = 17> <Delay = 8.09>
ST_18 : Operation 98 [1/1] (0.00ns)   --->   "%lhs_V = call i26 @_ssdm_op_BitConcatenate.i26.i16.i10(i16 %p_Val2_s, i10 0)" [FC/fc.cpp:15]   --->   Operation 98 'bitconcatenate' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 99 [1/1] (0.00ns)   --->   "%sext_ln728 = sext i26 %lhs_V to i32" [FC/fc.cpp:15]   --->   Operation 99 'sext' 'sext_ln728' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 100 [1/1] (1.89ns)   --->   "%ret_V = add i32 %r_V_2, %sext_ln728" [FC/fc.cpp:15]   --->   Operation 100 'add' 'ret_V' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 101 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %ret_V, i32 31)" [FC/fc.cpp:15]   --->   Operation 101 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_V_3 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %ret_V, i32 10, i32 25)" [FC/fc.cpp:15]   --->   Operation 102 'partselect' 'tmp_V_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %ret_V, i32 25)" [FC/fc.cpp:15]   --->   Operation 103 'bitselect' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln415 = zext i1 %tmp to i16" [FC/fc.cpp:15]   --->   Operation 104 'zext' 'zext_ln415' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 105 [1/1] (1.54ns)   --->   "%tmp_V_4 = add i16 %tmp_V_3, %zext_ln415" [FC/fc.cpp:15]   --->   Operation 105 'add' 'tmp_V_4' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_4, i32 15)" [FC/fc.cpp:15]   --->   Operation 106 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%xor_ln416 = xor i1 %tmp_3, true" [FC/fc.cpp:15]   --->   Operation 107 'xor' 'xor_ln416' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 108 [1/1] (0.80ns) (out node of the LUT)   --->   "%carry_1 = and i1 %p_Result_1, %xor_ln416" [FC/fc.cpp:15]   --->   Operation 108 'and' 'carry_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 109 [1/1] (0.00ns)   --->   "%p_Result_2 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_4, i32 15)" [FC/fc.cpp:15]   --->   Operation 109 'bitselect' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_1 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %ret_V, i32 27, i32 31)" [FC/fc.cpp:15]   --->   Operation 110 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 111 [1/1] (0.97ns)   --->   "%Range2_all_ones = icmp eq i5 %tmp_1, -1" [FC/fc.cpp:15]   --->   Operation 111 'icmp' 'Range2_all_ones' <Predicate = true> <Delay = 0.97> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 112 [1/1] (0.00ns)   --->   "%tmp_2 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %ret_V, i32 26, i32 31)" [FC/fc.cpp:15]   --->   Operation 112 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 113 [1/1] (1.07ns)   --->   "%Range1_all_ones = icmp eq i6 %tmp_2, -1" [FC/fc.cpp:15]   --->   Operation 113 'icmp' 'Range1_all_ones' <Predicate = true> <Delay = 1.07> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 114 [1/1] (1.07ns)   --->   "%Range1_all_zeros = icmp eq i6 %tmp_2, 0" [FC/fc.cpp:15]   --->   Operation 114 'icmp' 'Range1_all_zeros' <Predicate = true> <Delay = 1.07> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%deleted_zeros = select i1 %carry_1, i1 %Range1_all_ones, i1 %Range1_all_zeros" [FC/fc.cpp:15]   --->   Operation 115 'select' 'deleted_zeros' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %ret_V, i32 26)" [FC/fc.cpp:15]   --->   Operation 116 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln779 = xor i1 %tmp_5, true" [FC/fc.cpp:15]   --->   Operation 117 'xor' 'xor_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%and_ln779 = and i1 %Range2_all_ones, %xor_ln779" [FC/fc.cpp:15]   --->   Operation 118 'and' 'and_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%deleted_ones = select i1 %carry_1, i1 %and_ln779, i1 %Range1_all_ones" [FC/fc.cpp:15]   --->   Operation 119 'select' 'deleted_ones' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 120 [1/1] (0.80ns)   --->   "%and_ln781 = and i1 %carry_1, %Range1_all_ones" [FC/fc.cpp:15]   --->   Operation 120 'and' 'and_ln781' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%xor_ln785 = xor i1 %deleted_zeros, true" [FC/fc.cpp:15]   --->   Operation 121 'xor' 'xor_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%or_ln785 = or i1 %p_Result_2, %xor_ln785" [FC/fc.cpp:15]   --->   Operation 122 'or' 'or_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 123 [1/1] (0.80ns)   --->   "%xor_ln785_1 = xor i1 %p_Result_s, true" [FC/fc.cpp:15]   --->   Operation 123 'xor' 'xor_ln785_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%overflow = and i1 %or_ln785, %xor_ln785_1" [FC/fc.cpp:15]   --->   Operation 124 'and' 'overflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 125 [1/1] (0.81ns) (out node of the LUT)   --->   "%and_ln786 = and i1 %p_Result_2, %deleted_ones" [FC/fc.cpp:15]   --->   Operation 125 'and' 'and_ln786' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%or_ln786 = or i1 %and_ln781, %and_ln786" [FC/fc.cpp:15]   --->   Operation 126 'or' 'or_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%xor_ln786 = xor i1 %or_ln786, true" [FC/fc.cpp:15]   --->   Operation 127 'xor' 'xor_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 128 [1/1] (0.80ns) (out node of the LUT)   --->   "%underflow = and i1 %p_Result_s, %xor_ln786" [FC/fc.cpp:15]   --->   Operation 128 'and' 'underflow' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 129 [1/1] (0.81ns) (out node of the LUT)   --->   "%or_ln340 = or i1 %underflow, %overflow" [FC/fc.cpp:15]   --->   Operation 129 'or' 'or_ln340' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_1)   --->   "%or_ln340_2 = or i1 %and_ln786, %xor_ln785_1" [FC/fc.cpp:15]   --->   Operation 130 'or' 'or_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_1)   --->   "%or_ln340_1 = or i1 %or_ln340_2, %and_ln781" [FC/fc.cpp:15]   --->   Operation 131 'or' 'or_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 132 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln340 = select i1 %or_ln340, i16 32767, i16 %tmp_V_4" [FC/fc.cpp:15]   --->   Operation 132 'select' 'select_ln340' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_1)   --->   "%select_ln388 = select i1 %underflow, i16 -32768, i16 %tmp_V_4" [FC/fc.cpp:15]   --->   Operation 133 'select' 'select_ln388' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 134 [1/1] (0.80ns) (out node of the LUT)   --->   "%select_ln340_1 = select i1 %or_ln340_1, i16 %select_ln340, i16 %select_ln388" [FC/fc.cpp:15]   --->   Operation 134 'select' 'select_ln340_1' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 135 [1/1] (0.00ns)   --->   "br label %3" [FC/fc.cpp:12]   --->   Operation 135 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 9> <Delay = 8.75>
ST_19 : Operation 136 [4/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 136 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 10> <Delay = 8.75>
ST_20 : Operation 137 [3/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 137 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 11> <Delay = 8.75>
ST_21 : Operation 138 [2/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 138 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 12> <Delay = 8.75>
ST_22 : Operation 139 [1/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 139 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 140 [1/1] (0.00ns)   --->   "ret void" [FC/fc.cpp:20]   --->   Operation 140 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'out_V' [9]  (1 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus request on port 'B' (FC/fc.cpp:11) [39]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'B' (FC/fc.cpp:11) [39]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'B' (FC/fc.cpp:11) [39]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'B' (FC/fc.cpp:11) [39]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'B' (FC/fc.cpp:11) [39]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'B' (FC/fc.cpp:11) [39]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'B' (FC/fc.cpp:11) [39]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (FC/fc.cpp:15) [51]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (FC/fc.cpp:15) [51]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (FC/fc.cpp:15) [51]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (FC/fc.cpp:15) [51]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (FC/fc.cpp:15) [51]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus read on port 'B' (FC/fc.cpp:11) [50]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'IN_r' (FC/fc.cpp:15) [51]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	'phi' operation ('tmp.V') with incoming values : ('tmp.V', FC/fc.cpp:11) ('select_ln340_1', FC/fc.cpp:15) [54]  (0 ns)
	bus write on port 'OUT_r' (FC/fc.cpp:18) [106]  (8.75 ns)

 <State 17>: 5.55ns
The critical path consists of the following:
	'mul' operation of DSP[65] ('r.V', FC/fc.cpp:15) [65]  (5.55 ns)

 <State 18>: 8.09ns
The critical path consists of the following:
	'add' operation ('ret.V', FC/fc.cpp:15) [68]  (1.9 ns)
	'add' operation ('tmp.V', FC/fc.cpp:15) [74]  (1.54 ns)
	'xor' operation ('xor_ln416', FC/fc.cpp:15) [76]  (0 ns)
	'and' operation ('carry', FC/fc.cpp:15) [77]  (0.8 ns)
	'select' operation ('deleted_ones', FC/fc.cpp:15) [88]  (0 ns)
	'and' operation ('and_ln786', FC/fc.cpp:15) [94]  (0.813 ns)
	'or' operation ('or_ln786', FC/fc.cpp:15) [95]  (0 ns)
	'xor' operation ('xor_ln786', FC/fc.cpp:15) [96]  (0 ns)
	'and' operation ('underflow', FC/fc.cpp:15) [97]  (0.8 ns)
	'or' operation ('or_ln340', FC/fc.cpp:15) [98]  (0.813 ns)
	'select' operation ('select_ln340', FC/fc.cpp:15) [101]  (0.627 ns)
	'select' operation ('select_ln340_1', FC/fc.cpp:15) [103]  (0.8 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (FC/fc.cpp:18) [109]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (FC/fc.cpp:18) [109]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (FC/fc.cpp:18) [109]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUT_r' (FC/fc.cpp:18) [109]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
