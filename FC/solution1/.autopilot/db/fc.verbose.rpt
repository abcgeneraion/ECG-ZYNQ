

================================================================
== Vivado HLS Report for 'fc'
================================================================
* Date:           Fri Mar 25 16:09:20 2022

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        FC
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    72052|    72052| 0.721 ms | 0.721 ms |  72052|  72052|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |    72040|    72040|     14408|          -|          -|     5|    no    |
        | + Loop 1.1  |    14400|    14400|         3|          -|          -|  4800|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+-----+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  | URAM|
+-----------------+---------+-------+--------+-------+-----+
|DSP              |        -|      1|       -|      -|    -|
|Expression       |        -|      -|       0|    159|    -|
|FIFO             |        -|      -|       -|      -|    -|
|Instance         |        8|      -|    2336|   3004|    -|
|Memory           |        -|      -|       -|      -|    -|
|Multiplexer      |        -|      -|       -|     45|    -|
|Register         |        -|      -|     275|      -|    -|
+-----------------+---------+-------+--------+-------+-----+
|Total            |        8|      1|    2611|   3208|    0|
+-----------------+---------+-------+--------+-------+-----+
|Available        |      280|    220|  106400|  53200|    0|
+-----------------+---------+-------+--------+-------+-----+
|Utilization (%)  |        2|   ~0  |       2|      6|    0|
+-----------------+---------+-------+--------+-------+-----+

+ Detail: 
    * Instance: 
    +------------------+----------------+---------+-------+-----+-----+-----+
    |     Instance     |     Module     | BRAM_18K| DSP48E|  FF | LUT | URAM|
    +------------------+----------------+---------+-------+-----+-----+-----+
    |fc_B_m_axi_U      |fc_B_m_axi      |        2|      0|  537|  677|    0|
    |fc_CTRL_s_axi_U   |fc_CTRL_s_axi   |        0|      0|  188|  296|    0|
    |fc_IN_r_m_axi_U   |fc_IN_r_m_axi   |        2|      0|  537|  677|    0|
    |fc_OUT_r_m_axi_U  |fc_OUT_r_m_axi  |        2|      0|  537|  677|    0|
    |fc_W_m_axi_U      |fc_W_m_axi      |        2|      0|  537|  677|    0|
    +------------------+----------------+---------+-------+-----+-----+-----+
    |Total             |                |        8|      0| 2336| 3004|    0|
    +------------------+----------------+---------+-------+-----+-----+-----+

    * DSP48E: 
    +-------------------------+----------------------+-----------+
    |         Instance        |        Module        | Expression|
    +-------------------------+----------------------+-----------+
    |fc_mul_mul_16s_16bkb_U1  |fc_mul_mul_16s_16bkb  |  i0 * i1  |
    +-------------------------+----------------------+-----------+

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------------------+----------+-------+---+----+------------+------------+
    |        Variable Name       | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------------+----------+-------+---+----+------------+------------+
    |i_fu_341_p2                 |     +    |      0|  0|   4|           3|           1|
    |j_fu_353_p2                 |     +    |      0|  0|  13|          13|           1|
    |ret_V_fu_384_p2             |     +    |      0|  0|  32|          32|          32|
    |tmp_V_4_fu_418_p2           |     +    |      0|  0|  16|          16|          16|
    |and_ln779_fu_512_p2         |    and   |      0|  0|   1|           1|           1|
    |and_ln781_fu_526_p2         |    and   |      0|  0|   1|           1|           1|
    |and_ln786_fu_556_p2         |    and   |      0|  0|   1|           1|           1|
    |ap_block_state16_io         |    and   |      0|  0|   1|           1|           1|
    |ap_block_state9_io          |    and   |      0|  0|   1|           1|           1|
    |carry_1_fu_438_p2           |    and   |      0|  0|   1|           1|           1|
    |overflow_fu_550_p2          |    and   |      0|  0|   1|           1|           1|
    |underflow_fu_574_p2         |    and   |      0|  0|   1|           1|           1|
    |Range1_all_ones_fu_478_p2   |   icmp   |      0|  0|   3|           6|           2|
    |Range1_all_zeros_fu_484_p2  |   icmp   |      0|  0|   3|           6|           1|
    |Range2_all_ones_fu_462_p2   |   icmp   |      0|  0|   2|           5|           2|
    |icmp_ln10_fu_335_p2         |   icmp   |      0|  0|   2|           3|           3|
    |icmp_ln12_fu_347_p2         |   icmp   |      0|  0|   6|          13|          13|
    |ap_block_state16            |    or    |      0|  0|   1|           1|           1|
    |ap_block_state2_io          |    or    |      0|  0|   1|           1|           1|
    |or_ln340_1_fu_592_p2        |    or    |      0|  0|   1|           1|           1|
    |or_ln340_2_fu_586_p2        |    or    |      0|  0|   1|           1|           1|
    |or_ln340_fu_580_p2          |    or    |      0|  0|   1|           1|           1|
    |or_ln785_fu_538_p2          |    or    |      0|  0|   1|           1|           1|
    |or_ln786_fu_562_p2          |    or    |      0|  0|   1|           1|           1|
    |deleted_ones_fu_518_p3      |  select  |      0|  0|   2|           1|           1|
    |deleted_zeros_fu_490_p3     |  select  |      0|  0|   2|           1|           1|
    |select_ln340_1_fu_614_p3    |  select  |      0|  0|  16|           1|          16|
    |select_ln340_fu_598_p3      |  select  |      0|  0|  16|           1|          15|
    |select_ln388_fu_606_p3      |  select  |      0|  0|  17|           1|          17|
    |xor_ln416_fu_432_p2         |    xor   |      0|  0|   2|           1|           2|
    |xor_ln779_fu_506_p2         |    xor   |      0|  0|   2|           1|           2|
    |xor_ln785_1_fu_544_p2       |    xor   |      0|  0|   2|           1|           2|
    |xor_ln785_fu_532_p2         |    xor   |      0|  0|   2|           1|           2|
    |xor_ln786_fu_568_p2         |    xor   |      0|  0|   2|           1|           2|
    +----------------------------+----------+-------+---+----+------------+------------+
    |Total                       |          |      0|  0| 159|         122|         146|
    +----------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +------------------+----+-----------+-----+-----------+
    |       Name       | LUT| Input Size| Bits| Total Bits|
    +------------------+----+-----------+-----+-----------+
    |B_blk_n_AR        |   3|          2|    1|          2|
    |B_blk_n_R         |   3|          2|    1|          2|
    |IN_r_blk_n_AR     |   3|          2|    1|          2|
    |IN_r_blk_n_R      |   3|          2|    1|          2|
    |OUT_r_blk_n_AW    |   3|          2|    1|          2|
    |OUT_r_blk_n_B     |   3|          2|    1|          2|
    |OUT_r_blk_n_W     |   3|          2|    1|          2|
    |W_blk_n_AR        |   3|          2|    1|          2|
    |W_blk_n_R         |   3|          2|    1|          2|
    |ap_NS_fsm         |   9|         23|    1|         23|
    |i_0_reg_222       |   3|          2|    3|          6|
    |j_0_reg_244       |   3|          2|   13|         26|
    |p_Val2_s_reg_233  |   3|          2|   16|         32|
    +------------------+----+-----------+-----+-----------+
    |Total             |  45|         47|   42|        105|
    +------------------+----+-----------+-----+-----------+

    * Register: 
    +----------------------+----+----+-----+-----------+
    |         Name         | FF | LUT| Bits| Const Bits|
    +----------------------+----+----+-----+-----------+
    |B_addr_reg_635        |  31|   0|   32|          1|
    |IN_addr_read_reg_674  |  16|   0|   16|          0|
    |IN_addr_reg_647       |  31|   0|   32|          1|
    |OUT_addr_reg_629      |  31|   0|   32|          1|
    |W_addr_read_reg_679   |  16|   0|   16|          0|
    |W_addr_reg_641        |  31|   0|   32|          1|
    |ap_CS_fsm             |  22|   0|   22|          0|
    |i_0_reg_222           |   3|   0|    3|          0|
    |i_reg_656             |   3|   0|    3|          0|
    |j_0_reg_244           |  13|   0|   13|          0|
    |j_reg_669             |  13|   0|   13|          0|
    |p_Val2_s_reg_233      |  16|   0|   16|          0|
    |r_V_2_reg_684         |  32|   0|   32|          0|
    |tmp_V_reg_661         |  16|   0|   16|          0|
    |tmp_reg_689           |   1|   0|    1|          0|
    +----------------------+----+----+-----+-----------+
    |Total                 | 275|   0|  279|          4|
    +----------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------------+-----+-----+------------+--------------+--------------+
|       RTL Ports      | Dir | Bits|  Protocol  | Source Object|    C Type    |
+----------------------+-----+-----+------------+--------------+--------------+
|s_axi_CTRL_AWVALID    |  in |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_AWREADY    | out |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_AWADDR     |  in |    6|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_WVALID     |  in |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_WREADY     | out |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_WDATA      |  in |   32|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_WSTRB      |  in |    4|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_ARVALID    |  in |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_ARREADY    | out |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_ARADDR     |  in |    6|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_RVALID     | out |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_RREADY     |  in |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_RDATA      | out |   32|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_RRESP      | out |    2|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_BVALID     | out |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_BREADY     |  in |    1|    s_axi   |     CTRL     |    scalar    |
|s_axi_CTRL_BRESP      | out |    2|    s_axi   |     CTRL     |    scalar    |
|ap_clk                |  in |    1| ap_ctrl_hs |      fc      | return value |
|ap_rst_n              |  in |    1| ap_ctrl_hs |      fc      | return value |
|interrupt             | out |    1| ap_ctrl_hs |      fc      | return value |
|m_axi_IN_r_AWVALID    | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWREADY    |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWADDR     | out |   32|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWID       | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWLEN      | out |    8|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWSIZE     | out |    3|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWBURST    | out |    2|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWLOCK     | out |    2|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWCACHE    | out |    4|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWPROT     | out |    3|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWQOS      | out |    4|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWREGION   | out |    4|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_AWUSER     | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_WVALID     | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_WREADY     |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_WDATA      | out |   32|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_WSTRB      | out |    4|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_WLAST      | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_WID        | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_WUSER      | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARVALID    | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARREADY    |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARADDR     | out |   32|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARID       | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARLEN      | out |    8|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARSIZE     | out |    3|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARBURST    | out |    2|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARLOCK     | out |    2|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARCACHE    | out |    4|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARPROT     | out |    3|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARQOS      | out |    4|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARREGION   | out |    4|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_ARUSER     | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_RVALID     |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_RREADY     | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_RDATA      |  in |   32|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_RLAST      |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_RID        |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_RUSER      |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_RRESP      |  in |    2|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_BVALID     |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_BREADY     | out |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_BRESP      |  in |    2|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_BID        |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_IN_r_BUSER      |  in |    1|    m_axi   |     IN_r     |    pointer   |
|m_axi_W_AWVALID       | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_AWREADY       |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_AWADDR        | out |   32|    m_axi   |       W      |    pointer   |
|m_axi_W_AWID          | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_AWLEN         | out |    8|    m_axi   |       W      |    pointer   |
|m_axi_W_AWSIZE        | out |    3|    m_axi   |       W      |    pointer   |
|m_axi_W_AWBURST       | out |    2|    m_axi   |       W      |    pointer   |
|m_axi_W_AWLOCK        | out |    2|    m_axi   |       W      |    pointer   |
|m_axi_W_AWCACHE       | out |    4|    m_axi   |       W      |    pointer   |
|m_axi_W_AWPROT        | out |    3|    m_axi   |       W      |    pointer   |
|m_axi_W_AWQOS         | out |    4|    m_axi   |       W      |    pointer   |
|m_axi_W_AWREGION      | out |    4|    m_axi   |       W      |    pointer   |
|m_axi_W_AWUSER        | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_WVALID        | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_WREADY        |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_WDATA         | out |   32|    m_axi   |       W      |    pointer   |
|m_axi_W_WSTRB         | out |    4|    m_axi   |       W      |    pointer   |
|m_axi_W_WLAST         | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_WID           | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_WUSER         | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_ARVALID       | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_ARREADY       |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_ARADDR        | out |   32|    m_axi   |       W      |    pointer   |
|m_axi_W_ARID          | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_ARLEN         | out |    8|    m_axi   |       W      |    pointer   |
|m_axi_W_ARSIZE        | out |    3|    m_axi   |       W      |    pointer   |
|m_axi_W_ARBURST       | out |    2|    m_axi   |       W      |    pointer   |
|m_axi_W_ARLOCK        | out |    2|    m_axi   |       W      |    pointer   |
|m_axi_W_ARCACHE       | out |    4|    m_axi   |       W      |    pointer   |
|m_axi_W_ARPROT        | out |    3|    m_axi   |       W      |    pointer   |
|m_axi_W_ARQOS         | out |    4|    m_axi   |       W      |    pointer   |
|m_axi_W_ARREGION      | out |    4|    m_axi   |       W      |    pointer   |
|m_axi_W_ARUSER        | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_RVALID        |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_RREADY        | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_RDATA         |  in |   32|    m_axi   |       W      |    pointer   |
|m_axi_W_RLAST         |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_RID           |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_RUSER         |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_RRESP         |  in |    2|    m_axi   |       W      |    pointer   |
|m_axi_W_BVALID        |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_BREADY        | out |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_BRESP         |  in |    2|    m_axi   |       W      |    pointer   |
|m_axi_W_BID           |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_W_BUSER         |  in |    1|    m_axi   |       W      |    pointer   |
|m_axi_B_AWVALID       | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_AWREADY       |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_AWADDR        | out |   32|    m_axi   |       B      |    pointer   |
|m_axi_B_AWID          | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_AWLEN         | out |    8|    m_axi   |       B      |    pointer   |
|m_axi_B_AWSIZE        | out |    3|    m_axi   |       B      |    pointer   |
|m_axi_B_AWBURST       | out |    2|    m_axi   |       B      |    pointer   |
|m_axi_B_AWLOCK        | out |    2|    m_axi   |       B      |    pointer   |
|m_axi_B_AWCACHE       | out |    4|    m_axi   |       B      |    pointer   |
|m_axi_B_AWPROT        | out |    3|    m_axi   |       B      |    pointer   |
|m_axi_B_AWQOS         | out |    4|    m_axi   |       B      |    pointer   |
|m_axi_B_AWREGION      | out |    4|    m_axi   |       B      |    pointer   |
|m_axi_B_AWUSER        | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_WVALID        | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_WREADY        |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_WDATA         | out |   32|    m_axi   |       B      |    pointer   |
|m_axi_B_WSTRB         | out |    4|    m_axi   |       B      |    pointer   |
|m_axi_B_WLAST         | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_WID           | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_WUSER         | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_ARVALID       | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_ARREADY       |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_ARADDR        | out |   32|    m_axi   |       B      |    pointer   |
|m_axi_B_ARID          | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_ARLEN         | out |    8|    m_axi   |       B      |    pointer   |
|m_axi_B_ARSIZE        | out |    3|    m_axi   |       B      |    pointer   |
|m_axi_B_ARBURST       | out |    2|    m_axi   |       B      |    pointer   |
|m_axi_B_ARLOCK        | out |    2|    m_axi   |       B      |    pointer   |
|m_axi_B_ARCACHE       | out |    4|    m_axi   |       B      |    pointer   |
|m_axi_B_ARPROT        | out |    3|    m_axi   |       B      |    pointer   |
|m_axi_B_ARQOS         | out |    4|    m_axi   |       B      |    pointer   |
|m_axi_B_ARREGION      | out |    4|    m_axi   |       B      |    pointer   |
|m_axi_B_ARUSER        | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_RVALID        |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_RREADY        | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_RDATA         |  in |   32|    m_axi   |       B      |    pointer   |
|m_axi_B_RLAST         |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_RID           |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_RUSER         |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_RRESP         |  in |    2|    m_axi   |       B      |    pointer   |
|m_axi_B_BVALID        |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_BREADY        | out |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_BRESP         |  in |    2|    m_axi   |       B      |    pointer   |
|m_axi_B_BID           |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_B_BUSER         |  in |    1|    m_axi   |       B      |    pointer   |
|m_axi_OUT_r_AWVALID   | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWREADY   |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWADDR    | out |   32|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWID      | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWLEN     | out |    8|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWSIZE    | out |    3|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWBURST   | out |    2|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWLOCK    | out |    2|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWCACHE   | out |    4|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWPROT    | out |    3|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWQOS     | out |    4|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWREGION  | out |    4|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_AWUSER    | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_WVALID    | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_WREADY    |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_WDATA     | out |   32|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_WSTRB     | out |    4|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_WLAST     | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_WID       | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_WUSER     | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARVALID   | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARREADY   |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARADDR    | out |   32|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARID      | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARLEN     | out |    8|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARSIZE    | out |    3|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARBURST   | out |    2|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARLOCK    | out |    2|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARCACHE   | out |    4|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARPROT    | out |    3|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARQOS     | out |    4|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARREGION  | out |    4|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_ARUSER    | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_RVALID    |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_RREADY    | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_RDATA     |  in |   32|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_RLAST     |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_RID       |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_RUSER     |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_RRESP     |  in |    2|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_BVALID    |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_BREADY    | out |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_BRESP     |  in |    2|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_BID       |  in |    1|    m_axi   |     OUT_r    |    pointer   |
|m_axi_OUT_r_BUSER     |  in |    1|    m_axi   |     OUT_r    |    pointer   |
+----------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 19 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 9 
17 --> 18 
18 --> 16 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 23 [1/1] (1.00ns)   --->   "%out_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_V)"   --->   Operation 23 'read' 'out_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 24 [1/1] (1.00ns)   --->   "%bias_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %bias_V)"   --->   Operation 24 'read' 'bias_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 25 [1/1] (1.00ns)   --->   "%weight_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %weight_V)"   --->   Operation 25 'read' 'weight_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 26 [1/1] (1.00ns)   --->   "%in_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_V)"   --->   Operation 26 'read' 'in_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%out_V7 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %out_V_read, i32 1, i32 31)"   --->   Operation 27 'partselect' 'out_V7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%empty = zext i31 %out_V7 to i64"   --->   Operation 28 'zext' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%OUT_addr = getelementptr i16* %OUT_r, i64 %empty"   --->   Operation 29 'getelementptr' 'OUT_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%bias_V5 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %bias_V_read, i32 1, i32 31)"   --->   Operation 30 'partselect' 'bias_V5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%empty_4 = zext i31 %bias_V5 to i64"   --->   Operation 31 'zext' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i16* %B, i64 %empty_4"   --->   Operation 32 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%weight_V3 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %weight_V_read, i32 1, i32 31)"   --->   Operation 33 'partselect' 'weight_V3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%empty_5 = zext i31 %weight_V3 to i64"   --->   Operation 34 'zext' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%W_addr = getelementptr i16* %W, i64 %empty_5"   --->   Operation 35 'getelementptr' 'W_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%in_V1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %in_V_read, i32 1, i32 31)"   --->   Operation 36 'partselect' 'in_V1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%empty_6 = zext i31 %in_V1 to i64"   --->   Operation 37 'zext' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%IN_addr = getelementptr i16* %IN_r, i64 %empty_6"   --->   Operation 38 'getelementptr' 'IN_addr' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 39 [7/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 39 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 40 [7/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 40 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 41 [6/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 41 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 42 [6/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 42 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 43 [5/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 43 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 44 [5/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 44 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 45 [4/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 45 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 46 [4/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 46 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 47 [3/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 47 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 48 [3/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 48 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 49 [2/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 49 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 50 [2/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 50 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %OUT_r), !map !58"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %B), !map !64"   --->   Operation 52 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %W), !map !68"   --->   Operation 53 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %IN_r), !map !72"   --->   Operation 54 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([3 x i8]* @fc_str) nounwind"   --->   Operation 55 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:4]   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %OUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [4 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:5]   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_V, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:5]   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %B, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [2 x i8]* @p_str6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:6]   --->   Operation 59 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %bias_V, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:6]   --->   Operation 60 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %W, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [2 x i8]* @p_str7, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:7]   --->   Operation 61 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %weight_V, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle2, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:7]   --->   Operation 62 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %IN_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [3 x i8]* @p_str8, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:8]   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_V, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FC/fc.cpp:8]   --->   Operation 64 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 65 [1/7] (8.75ns)   --->   "%B_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %B_addr, i32 5)" [FC/fc.cpp:11]   --->   Operation 65 'readreq' 'B_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 66 [1/7] (8.75ns)   --->   "%W_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %W_addr, i32 24000)" [FC/fc.cpp:15]   --->   Operation 66 'readreq' 'W_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 67 [1/1] (8.75ns)   --->   "%OUT_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %OUT_addr, i32 5)" [FC/fc.cpp:18]   --->   Operation 67 'writereq' 'OUT_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 68 [1/1] (0.46ns)   --->   "br label %1" [FC/fc.cpp:10]   --->   Operation 68 'br' <Predicate = true> <Delay = 0.46>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %4 ]"   --->   Operation 69 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 70 [1/1] (0.98ns)   --->   "%icmp_ln10 = icmp eq i3 %i_0, -3" [FC/fc.cpp:10]   --->   Operation 70 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 71 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (0.76ns)   --->   "%i = add i3 %i_0, 1" [FC/fc.cpp:10]   --->   Operation 72 'add' 'i' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %5, label %2" [FC/fc.cpp:10]   --->   Operation 73 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [7/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 74 'readreq' 'IN_addr_rd_req' <Predicate = (!icmp_ln10)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 75 [5/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 75 'writeresp' 'OUT_addr_wr_resp' <Predicate = (icmp_ln10)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 76 [6/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 76 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 77 [5/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 77 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 78 [4/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 78 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 79 [3/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 79 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 80 [1/1] (8.75ns)   --->   "%tmp_V = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %B_addr)" [FC/fc.cpp:11]   --->   Operation 80 'read' 'tmp_V' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 81 [2/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 81 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 82 [1/7] (8.75ns)   --->   "%IN_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %IN_addr, i32 4800)" [FC/fc.cpp:15]   --->   Operation 82 'readreq' 'IN_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 83 [1/1] (0.46ns)   --->   "br label %3" [FC/fc.cpp:12]   --->   Operation 83 'br' <Predicate = true> <Delay = 0.46>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 84 [1/1] (0.00ns)   --->   "%p_Val2_s = phi i16 [ %tmp_V, %2 ], [ %select_ln340_1, %_ZN13ap_fixed_baseILi33ELi13ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i_ifconv ]"   --->   Operation 84 'phi' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 85 [1/1] (0.00ns)   --->   "%j_0 = phi i13 [ 0, %2 ], [ %j, %_ZN13ap_fixed_baseILi33ELi13ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i_ifconv ]"   --->   Operation 85 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 86 [1/1] (1.90ns)   --->   "%icmp_ln12 = icmp eq i13 %j_0, -3392" [FC/fc.cpp:12]   --->   Operation 86 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.90> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 87 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4800, i64 4800, i64 4800)"   --->   Operation 87 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 88 [1/1] (1.53ns)   --->   "%j = add i13 %j_0, 1" [FC/fc.cpp:12]   --->   Operation 88 'add' 'j' <Predicate = true> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 89 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %4, label %_ZN13ap_fixed_baseILi33ELi13ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_0ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i_ifconv" [FC/fc.cpp:12]   --->   Operation 89 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 90 [1/1] (8.75ns)   --->   "%IN_addr_read = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %IN_addr)" [FC/fc.cpp:15]   --->   Operation 90 'read' 'IN_addr_read' <Predicate = (!icmp_ln12)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 91 [1/1] (8.75ns)   --->   "%W_addr_read = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %W_addr)" [FC/fc.cpp:15]   --->   Operation 91 'read' 'W_addr_read' <Predicate = (!icmp_ln12)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 92 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %OUT_addr, i16 %p_Val2_s, i2 -1)" [FC/fc.cpp:18]   --->   Operation 92 'write' <Predicate = (icmp_ln12)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 93 [1/1] (0.00ns)   --->   "br label %1" [FC/fc.cpp:10]   --->   Operation 93 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 17 <SV = 16> <Delay = 5.55>
ST_17 : Operation 94 [1/1] (0.00ns)   --->   "%r_V = sext i16 %IN_addr_read to i32" [FC/fc.cpp:15]   --->   Operation 94 'sext' 'r_V' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 95 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i16 %W_addr_read to i32" [FC/fc.cpp:15]   --->   Operation 95 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 96 [1/1] (5.55ns) (root node of the DSP)   --->   "%r_V_2 = mul nsw i32 %r_V, %sext_ln1118" [FC/fc.cpp:15]   --->   Operation 96 'mul' 'r_V_2' <Predicate = true> <Delay = 5.55> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 97 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %r_V_2, i32 9)" [FC/fc.cpp:15]   --->   Operation 97 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>

State 18 <SV = 17> <Delay = 8.09>
ST_18 : Operation 98 [1/1] (0.00ns)   --->   "%lhs_V = call i26 @_ssdm_op_BitConcatenate.i26.i16.i10(i16 %p_Val2_s, i10 0)" [FC/fc.cpp:15]   --->   Operation 98 'bitconcatenate' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 99 [1/1] (0.00ns)   --->   "%sext_ln728 = sext i26 %lhs_V to i32" [FC/fc.cpp:15]   --->   Operation 99 'sext' 'sext_ln728' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 100 [1/1] (1.89ns)   --->   "%ret_V = add i32 %r_V_2, %sext_ln728" [FC/fc.cpp:15]   --->   Operation 100 'add' 'ret_V' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 101 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %ret_V, i32 31)" [FC/fc.cpp:15]   --->   Operation 101 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_V_3 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %ret_V, i32 10, i32 25)" [FC/fc.cpp:15]   --->   Operation 102 'partselect' 'tmp_V_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %ret_V, i32 25)" [FC/fc.cpp:15]   --->   Operation 103 'bitselect' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln415 = zext i1 %tmp to i16" [FC/fc.cpp:15]   --->   Operation 104 'zext' 'zext_ln415' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 105 [1/1] (1.54ns)   --->   "%tmp_V_4 = add i16 %tmp_V_3, %zext_ln415" [FC/fc.cpp:15]   --->   Operation 105 'add' 'tmp_V_4' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_4, i32 15)" [FC/fc.cpp:15]   --->   Operation 106 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%xor_ln416 = xor i1 %tmp_3, true" [FC/fc.cpp:15]   --->   Operation 107 'xor' 'xor_ln416' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 108 [1/1] (0.80ns) (out node of the LUT)   --->   "%carry_1 = and i1 %p_Result_1, %xor_ln416" [FC/fc.cpp:15]   --->   Operation 108 'and' 'carry_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 109 [1/1] (0.00ns)   --->   "%p_Result_2 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_4, i32 15)" [FC/fc.cpp:15]   --->   Operation 109 'bitselect' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_1 = call i5 @_ssdm_op_PartSelect.i5.i32.i32.i32(i32 %ret_V, i32 27, i32 31)" [FC/fc.cpp:15]   --->   Operation 110 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 111 [1/1] (0.97ns)   --->   "%Range2_all_ones = icmp eq i5 %tmp_1, -1" [FC/fc.cpp:15]   --->   Operation 111 'icmp' 'Range2_all_ones' <Predicate = true> <Delay = 0.97> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 112 [1/1] (0.00ns)   --->   "%tmp_2 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %ret_V, i32 26, i32 31)" [FC/fc.cpp:15]   --->   Operation 112 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 113 [1/1] (1.07ns)   --->   "%Range1_all_ones = icmp eq i6 %tmp_2, -1" [FC/fc.cpp:15]   --->   Operation 113 'icmp' 'Range1_all_ones' <Predicate = true> <Delay = 1.07> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 114 [1/1] (1.07ns)   --->   "%Range1_all_zeros = icmp eq i6 %tmp_2, 0" [FC/fc.cpp:15]   --->   Operation 114 'icmp' 'Range1_all_zeros' <Predicate = true> <Delay = 1.07> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%deleted_zeros = select i1 %carry_1, i1 %Range1_all_ones, i1 %Range1_all_zeros" [FC/fc.cpp:15]   --->   Operation 115 'select' 'deleted_zeros' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %ret_V, i32 26)" [FC/fc.cpp:15]   --->   Operation 116 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln779 = xor i1 %tmp_5, true" [FC/fc.cpp:15]   --->   Operation 117 'xor' 'xor_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%and_ln779 = and i1 %Range2_all_ones, %xor_ln779" [FC/fc.cpp:15]   --->   Operation 118 'and' 'and_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%deleted_ones = select i1 %carry_1, i1 %and_ln779, i1 %Range1_all_ones" [FC/fc.cpp:15]   --->   Operation 119 'select' 'deleted_ones' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 120 [1/1] (0.80ns)   --->   "%and_ln781 = and i1 %carry_1, %Range1_all_ones" [FC/fc.cpp:15]   --->   Operation 120 'and' 'and_ln781' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%xor_ln785 = xor i1 %deleted_zeros, true" [FC/fc.cpp:15]   --->   Operation 121 'xor' 'xor_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%or_ln785 = or i1 %p_Result_2, %xor_ln785" [FC/fc.cpp:15]   --->   Operation 122 'or' 'or_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 123 [1/1] (0.80ns)   --->   "%xor_ln785_1 = xor i1 %p_Result_s, true" [FC/fc.cpp:15]   --->   Operation 123 'xor' 'xor_ln785_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%overflow = and i1 %or_ln785, %xor_ln785_1" [FC/fc.cpp:15]   --->   Operation 124 'and' 'overflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 125 [1/1] (0.81ns) (out node of the LUT)   --->   "%and_ln786 = and i1 %p_Result_2, %deleted_ones" [FC/fc.cpp:15]   --->   Operation 125 'and' 'and_ln786' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%or_ln786 = or i1 %and_ln781, %and_ln786" [FC/fc.cpp:15]   --->   Operation 126 'or' 'or_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%xor_ln786 = xor i1 %or_ln786, true" [FC/fc.cpp:15]   --->   Operation 127 'xor' 'xor_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 128 [1/1] (0.80ns) (out node of the LUT)   --->   "%underflow = and i1 %p_Result_s, %xor_ln786" [FC/fc.cpp:15]   --->   Operation 128 'and' 'underflow' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 129 [1/1] (0.81ns) (out node of the LUT)   --->   "%or_ln340 = or i1 %underflow, %overflow" [FC/fc.cpp:15]   --->   Operation 129 'or' 'or_ln340' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_1)   --->   "%or_ln340_2 = or i1 %and_ln786, %xor_ln785_1" [FC/fc.cpp:15]   --->   Operation 130 'or' 'or_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_1)   --->   "%or_ln340_1 = or i1 %or_ln340_2, %and_ln781" [FC/fc.cpp:15]   --->   Operation 131 'or' 'or_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 132 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln340 = select i1 %or_ln340, i16 32767, i16 %tmp_V_4" [FC/fc.cpp:15]   --->   Operation 132 'select' 'select_ln340' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_1)   --->   "%select_ln388 = select i1 %underflow, i16 -32768, i16 %tmp_V_4" [FC/fc.cpp:15]   --->   Operation 133 'select' 'select_ln388' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 134 [1/1] (0.80ns) (out node of the LUT)   --->   "%select_ln340_1 = select i1 %or_ln340_1, i16 %select_ln340, i16 %select_ln388" [FC/fc.cpp:15]   --->   Operation 134 'select' 'select_ln340_1' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 135 [1/1] (0.00ns)   --->   "br label %3" [FC/fc.cpp:12]   --->   Operation 135 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 9> <Delay = 8.75>
ST_19 : Operation 136 [4/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 136 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 10> <Delay = 8.75>
ST_20 : Operation 137 [3/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 137 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 11> <Delay = 8.75>
ST_21 : Operation 138 [2/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 138 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 12> <Delay = 8.75>
ST_22 : Operation 139 [1/5] (8.75ns)   --->   "%OUT_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %OUT_addr)" [FC/fc.cpp:18]   --->   Operation 139 'writeresp' 'OUT_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 140 [1/1] (0.00ns)   --->   "ret void" [FC/fc.cpp:20]   --->   Operation 140 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ IN_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ W]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ B]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ OUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ in_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ weight_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ bias_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ out_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
out_V_read        (read             ) [ 00000000000000000000000]
bias_V_read       (read             ) [ 00000000000000000000000]
weight_V_read     (read             ) [ 00000000000000000000000]
in_V_read         (read             ) [ 00000000000000000000000]
out_V7            (partselect       ) [ 00000000000000000000000]
empty             (zext             ) [ 00000000000000000000000]
OUT_addr          (getelementptr    ) [ 00111111111111111111111]
bias_V5           (partselect       ) [ 00000000000000000000000]
empty_4           (zext             ) [ 00000000000000000000000]
B_addr            (getelementptr    ) [ 00111111111111111110000]
weight_V3         (partselect       ) [ 00000000000000000000000]
empty_5           (zext             ) [ 00000000000000000000000]
W_addr            (getelementptr    ) [ 00111111111111111110000]
in_V1             (partselect       ) [ 00000000000000000000000]
empty_6           (zext             ) [ 00000000000000000000000]
IN_addr           (getelementptr    ) [ 00111111111111111110000]
specbitsmap_ln0   (specbitsmap      ) [ 00000000000000000000000]
specbitsmap_ln0   (specbitsmap      ) [ 00000000000000000000000]
specbitsmap_ln0   (specbitsmap      ) [ 00000000000000000000000]
specbitsmap_ln0   (specbitsmap      ) [ 00000000000000000000000]
spectopmodule_ln0 (spectopmodule    ) [ 00000000000000000000000]
specinterface_ln4 (specinterface    ) [ 00000000000000000000000]
specinterface_ln5 (specinterface    ) [ 00000000000000000000000]
specinterface_ln5 (specinterface    ) [ 00000000000000000000000]
specinterface_ln6 (specinterface    ) [ 00000000000000000000000]
specinterface_ln6 (specinterface    ) [ 00000000000000000000000]
specinterface_ln7 (specinterface    ) [ 00000000000000000000000]
specinterface_ln7 (specinterface    ) [ 00000000000000000000000]
specinterface_ln8 (specinterface    ) [ 00000000000000000000000]
specinterface_ln8 (specinterface    ) [ 00000000000000000000000]
B_addr_rd_req     (readreq          ) [ 00000000000000000000000]
W_addr_rd_req     (readreq          ) [ 00000000000000000000000]
OUT_addr_wr_req   (writereq         ) [ 00000000000000000000000]
br_ln10           (br               ) [ 00000000111111111110000]
i_0               (phi              ) [ 00000000010000000000000]
icmp_ln10         (icmp             ) [ 00000000011111111110000]
empty_7           (speclooptripcount) [ 00000000000000000000000]
i                 (add              ) [ 00000000111111111110000]
br_ln10           (br               ) [ 00000000000000000000000]
tmp_V             (read             ) [ 00000000000000011110000]
IN_addr_rd_req    (readreq          ) [ 00000000000000000000000]
br_ln12           (br               ) [ 00000000011111111110000]
p_Val2_s          (phi              ) [ 00000000000000001110000]
j_0               (phi              ) [ 00000000000000001000000]
icmp_ln12         (icmp             ) [ 00000000011111111110000]
empty_8           (speclooptripcount) [ 00000000000000000000000]
j                 (add              ) [ 00000000011111111110000]
br_ln12           (br               ) [ 00000000000000000000000]
IN_addr_read      (read             ) [ 00000000000000000100000]
W_addr_read       (read             ) [ 00000000000000000100000]
write_ln18        (write            ) [ 00000000000000000000000]
br_ln10           (br               ) [ 00000000111111111110000]
r_V               (sext             ) [ 00000000000000000000000]
sext_ln1118       (sext             ) [ 00000000000000000000000]
r_V_2             (mul              ) [ 00000000000000000010000]
tmp               (bitselect        ) [ 00000000000000000010000]
lhs_V             (bitconcatenate   ) [ 00000000000000000000000]
sext_ln728        (sext             ) [ 00000000000000000000000]
ret_V             (add              ) [ 00000000000000000000000]
p_Result_s        (bitselect        ) [ 00000000000000000000000]
tmp_V_3           (partselect       ) [ 00000000000000000000000]
p_Result_1        (bitselect        ) [ 00000000000000000000000]
zext_ln415        (zext             ) [ 00000000000000000000000]
tmp_V_4           (add              ) [ 00000000000000000000000]
tmp_3             (bitselect        ) [ 00000000000000000000000]
xor_ln416         (xor              ) [ 00000000000000000000000]
carry_1           (and              ) [ 00000000000000000000000]
p_Result_2        (bitselect        ) [ 00000000000000000000000]
tmp_1             (partselect       ) [ 00000000000000000000000]
Range2_all_ones   (icmp             ) [ 00000000000000000000000]
tmp_2             (partselect       ) [ 00000000000000000000000]
Range1_all_ones   (icmp             ) [ 00000000000000000000000]
Range1_all_zeros  (icmp             ) [ 00000000000000000000000]
deleted_zeros     (select           ) [ 00000000000000000000000]
tmp_5             (bitselect        ) [ 00000000000000000000000]
xor_ln779         (xor              ) [ 00000000000000000000000]
and_ln779         (and              ) [ 00000000000000000000000]
deleted_ones      (select           ) [ 00000000000000000000000]
and_ln781         (and              ) [ 00000000000000000000000]
xor_ln785         (xor              ) [ 00000000000000000000000]
or_ln785          (or               ) [ 00000000000000000000000]
xor_ln785_1       (xor              ) [ 00000000000000000000000]
overflow          (and              ) [ 00000000000000000000000]
and_ln786         (and              ) [ 00000000000000000000000]
or_ln786          (or               ) [ 00000000000000000000000]
xor_ln786         (xor              ) [ 00000000000000000000000]
underflow         (and              ) [ 00000000000000000000000]
or_ln340          (or               ) [ 00000000000000000000000]
or_ln340_2        (or               ) [ 00000000000000000000000]
or_ln340_1        (or               ) [ 00000000000000000000000]
select_ln340      (select           ) [ 00000000000000000000000]
select_ln388      (select           ) [ 00000000000000000000000]
select_ln340_1    (select           ) [ 00000000011111111110000]
br_ln12           (br               ) [ 00000000011111111110000]
OUT_addr_wr_resp  (writeresp        ) [ 00000000000000000000000]
ret_ln20          (ret              ) [ 00000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="IN_r">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="IN_r"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="W">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="W"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="B">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="OUT_r">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="OUT_r"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="in_V">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="in_V"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="weight_V">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="weight_V"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="bias_V">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="bias_V"/></StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="out_V">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="out_V"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i32"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i31.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i16P"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="fc_str"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mode5"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="bundle6"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str6"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mode3"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="bundle4"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str7"/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mode1"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="bundle2"/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str8"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="mode"/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="bundle"/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i16P"/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i16P"/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.i16P"/></StgValue>
</bind>
</comp>

<comp id="96" class="1001" name="const_96">
<pin_list>
<pin id="97" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="98" class="1001" name="const_98">
<pin_list>
<pin id="99" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="100" class="1001" name="const_100">
<pin_list>
<pin id="101" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="102" class="1001" name="const_102">
<pin_list>
<pin id="103" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="104" class="1001" name="const_104">
<pin_list>
<pin id="105" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i16P"/></StgValue>
</bind>
</comp>

<comp id="106" class="1001" name="const_106">
<pin_list>
<pin id="107" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="108" class="1001" name="const_108">
<pin_list>
<pin id="109" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="110" class="1001" name="const_110">
<pin_list>
<pin id="111" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="112" class="1001" name="const_112">
<pin_list>
<pin id="113" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i26.i16.i10"/></StgValue>
</bind>
</comp>

<comp id="114" class="1001" name="const_114">
<pin_list>
<pin id="115" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="116" class="1001" name="const_116">
<pin_list>
<pin id="117" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i16.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="118" class="1001" name="const_118">
<pin_list>
<pin id="119" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="120" class="1001" name="const_120">
<pin_list>
<pin id="121" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="122" class="1001" name="const_122">
<pin_list>
<pin id="123" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i16.i32"/></StgValue>
</bind>
</comp>

<comp id="124" class="1001" name="const_124">
<pin_list>
<pin id="125" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="126" class="1001" name="const_126">
<pin_list>
<pin id="127" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="128" class="1001" name="const_128">
<pin_list>
<pin id="129" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i5.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="130" class="1001" name="const_130">
<pin_list>
<pin id="131" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="132" class="1001" name="const_132">
<pin_list>
<pin id="133" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="134" class="1001" name="const_134">
<pin_list>
<pin id="135" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i6.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="136" class="1001" name="const_136">
<pin_list>
<pin id="137" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="138" class="1001" name="const_138">
<pin_list>
<pin id="139" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="140" class="1001" name="const_140">
<pin_list>
<pin id="141" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="142" class="1001" name="const_142">
<pin_list>
<pin id="143" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="144" class="1001" name="const_144">
<pin_list>
<pin id="145" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="146" class="1004" name="out_V_read_read_fu_146">
<pin_list>
<pin id="147" dir="0" index="0" bw="32" slack="0"/>
<pin id="148" dir="0" index="1" bw="32" slack="0"/>
<pin id="149" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="out_V_read/1 "/>
</bind>
</comp>

<comp id="152" class="1004" name="bias_V_read_read_fu_152">
<pin_list>
<pin id="153" dir="0" index="0" bw="32" slack="0"/>
<pin id="154" dir="0" index="1" bw="32" slack="0"/>
<pin id="155" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="bias_V_read/1 "/>
</bind>
</comp>

<comp id="158" class="1004" name="weight_V_read_read_fu_158">
<pin_list>
<pin id="159" dir="0" index="0" bw="32" slack="0"/>
<pin id="160" dir="0" index="1" bw="32" slack="0"/>
<pin id="161" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="weight_V_read/1 "/>
</bind>
</comp>

<comp id="164" class="1004" name="in_V_read_read_fu_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="32" slack="0"/>
<pin id="166" dir="0" index="1" bw="32" slack="0"/>
<pin id="167" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="in_V_read/1 "/>
</bind>
</comp>

<comp id="170" class="1004" name="grp_readreq_fu_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="1" slack="0"/>
<pin id="172" dir="0" index="1" bw="16" slack="1"/>
<pin id="173" dir="0" index="2" bw="4" slack="0"/>
<pin id="174" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="B_addr_rd_req/2 "/>
</bind>
</comp>

<comp id="177" class="1004" name="grp_readreq_fu_177">
<pin_list>
<pin id="178" dir="0" index="0" bw="1" slack="0"/>
<pin id="179" dir="0" index="1" bw="16" slack="1"/>
<pin id="180" dir="0" index="2" bw="16" slack="0"/>
<pin id="181" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="W_addr_rd_req/2 "/>
</bind>
</comp>

<comp id="184" class="1004" name="grp_writeresp_fu_184">
<pin_list>
<pin id="185" dir="0" index="0" bw="1" slack="0"/>
<pin id="186" dir="0" index="1" bw="16" slack="7"/>
<pin id="187" dir="0" index="2" bw="4" slack="0"/>
<pin id="188" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="OUT_addr_wr_req/8 OUT_addr_wr_resp/9 "/>
</bind>
</comp>

<comp id="191" class="1004" name="grp_readreq_fu_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="1" slack="0"/>
<pin id="193" dir="0" index="1" bw="16" slack="8"/>
<pin id="194" dir="0" index="2" bw="14" slack="0"/>
<pin id="195" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="IN_addr_rd_req/9 "/>
</bind>
</comp>

<comp id="199" class="1004" name="tmp_V_read_fu_199">
<pin_list>
<pin id="200" dir="0" index="0" bw="16" slack="0"/>
<pin id="201" dir="0" index="1" bw="16" slack="13"/>
<pin id="202" dir="1" index="2" bw="16" slack="2"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="tmp_V/14 "/>
</bind>
</comp>

<comp id="204" class="1004" name="IN_addr_read_read_fu_204">
<pin_list>
<pin id="205" dir="0" index="0" bw="16" slack="0"/>
<pin id="206" dir="0" index="1" bw="16" slack="15"/>
<pin id="207" dir="1" index="2" bw="16" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="IN_addr_read/16 "/>
</bind>
</comp>

<comp id="209" class="1004" name="W_addr_read_read_fu_209">
<pin_list>
<pin id="210" dir="0" index="0" bw="16" slack="0"/>
<pin id="211" dir="0" index="1" bw="16" slack="15"/>
<pin id="212" dir="1" index="2" bw="16" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="W_addr_read/16 "/>
</bind>
</comp>

<comp id="214" class="1004" name="write_ln18_write_fu_214">
<pin_list>
<pin id="215" dir="0" index="0" bw="0" slack="0"/>
<pin id="216" dir="0" index="1" bw="16" slack="15"/>
<pin id="217" dir="0" index="2" bw="16" slack="0"/>
<pin id="218" dir="0" index="3" bw="1" slack="0"/>
<pin id="219" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln18/16 "/>
</bind>
</comp>

<comp id="222" class="1005" name="i_0_reg_222">
<pin_list>
<pin id="223" dir="0" index="0" bw="3" slack="1"/>
<pin id="224" dir="1" index="1" bw="3" slack="1"/>
</pin_list>
<bind>
<opset="i_0 (phireg) "/>
</bind>
</comp>

<comp id="226" class="1004" name="i_0_phi_fu_226">
<pin_list>
<pin id="227" dir="0" index="0" bw="1" slack="1"/>
<pin id="228" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="229" dir="0" index="2" bw="3" slack="0"/>
<pin id="230" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="231" dir="1" index="4" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_0/9 "/>
</bind>
</comp>

<comp id="233" class="1005" name="p_Val2_s_reg_233">
<pin_list>
<pin id="234" dir="0" index="0" bw="16" slack="2"/>
<pin id="235" dir="1" index="1" bw="16" slack="2"/>
</pin_list>
<bind>
<opset="p_Val2_s (phireg) "/>
</bind>
</comp>

<comp id="236" class="1004" name="p_Val2_s_phi_fu_236">
<pin_list>
<pin id="237" dir="0" index="0" bw="16" slack="2"/>
<pin id="238" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="239" dir="0" index="2" bw="16" slack="1"/>
<pin id="240" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="241" dir="1" index="4" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_Val2_s/16 "/>
</bind>
</comp>

<comp id="244" class="1005" name="j_0_reg_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="13" slack="1"/>
<pin id="246" dir="1" index="1" bw="13" slack="1"/>
</pin_list>
<bind>
<opset="j_0 (phireg) "/>
</bind>
</comp>

<comp id="248" class="1004" name="j_0_phi_fu_248">
<pin_list>
<pin id="249" dir="0" index="0" bw="1" slack="1"/>
<pin id="250" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="251" dir="0" index="2" bw="13" slack="0"/>
<pin id="252" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="253" dir="1" index="4" bw="13" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="j_0/16 "/>
</bind>
</comp>

<comp id="255" class="1004" name="out_V7_fu_255">
<pin_list>
<pin id="256" dir="0" index="0" bw="31" slack="0"/>
<pin id="257" dir="0" index="1" bw="32" slack="0"/>
<pin id="258" dir="0" index="2" bw="1" slack="0"/>
<pin id="259" dir="0" index="3" bw="6" slack="0"/>
<pin id="260" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="out_V7/1 "/>
</bind>
</comp>

<comp id="265" class="1004" name="empty_fu_265">
<pin_list>
<pin id="266" dir="0" index="0" bw="31" slack="0"/>
<pin id="267" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="empty/1 "/>
</bind>
</comp>

<comp id="269" class="1004" name="OUT_addr_fu_269">
<pin_list>
<pin id="270" dir="0" index="0" bw="32" slack="0"/>
<pin id="271" dir="0" index="1" bw="32" slack="0"/>
<pin id="272" dir="1" index="2" bw="32" slack="7"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="OUT_addr/1 "/>
</bind>
</comp>

<comp id="275" class="1004" name="bias_V5_fu_275">
<pin_list>
<pin id="276" dir="0" index="0" bw="31" slack="0"/>
<pin id="277" dir="0" index="1" bw="32" slack="0"/>
<pin id="278" dir="0" index="2" bw="1" slack="0"/>
<pin id="279" dir="0" index="3" bw="6" slack="0"/>
<pin id="280" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="bias_V5/1 "/>
</bind>
</comp>

<comp id="285" class="1004" name="empty_4_fu_285">
<pin_list>
<pin id="286" dir="0" index="0" bw="31" slack="0"/>
<pin id="287" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="empty_4/1 "/>
</bind>
</comp>

<comp id="289" class="1004" name="B_addr_fu_289">
<pin_list>
<pin id="290" dir="0" index="0" bw="32" slack="0"/>
<pin id="291" dir="0" index="1" bw="32" slack="0"/>
<pin id="292" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="B_addr/1 "/>
</bind>
</comp>

<comp id="295" class="1004" name="weight_V3_fu_295">
<pin_list>
<pin id="296" dir="0" index="0" bw="31" slack="0"/>
<pin id="297" dir="0" index="1" bw="32" slack="0"/>
<pin id="298" dir="0" index="2" bw="1" slack="0"/>
<pin id="299" dir="0" index="3" bw="6" slack="0"/>
<pin id="300" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="weight_V3/1 "/>
</bind>
</comp>

<comp id="305" class="1004" name="empty_5_fu_305">
<pin_list>
<pin id="306" dir="0" index="0" bw="31" slack="0"/>
<pin id="307" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="empty_5/1 "/>
</bind>
</comp>

<comp id="309" class="1004" name="W_addr_fu_309">
<pin_list>
<pin id="310" dir="0" index="0" bw="32" slack="0"/>
<pin id="311" dir="0" index="1" bw="32" slack="0"/>
<pin id="312" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="W_addr/1 "/>
</bind>
</comp>

<comp id="315" class="1004" name="in_V1_fu_315">
<pin_list>
<pin id="316" dir="0" index="0" bw="31" slack="0"/>
<pin id="317" dir="0" index="1" bw="32" slack="0"/>
<pin id="318" dir="0" index="2" bw="1" slack="0"/>
<pin id="319" dir="0" index="3" bw="6" slack="0"/>
<pin id="320" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="in_V1/1 "/>
</bind>
</comp>

<comp id="325" class="1004" name="empty_6_fu_325">
<pin_list>
<pin id="326" dir="0" index="0" bw="31" slack="0"/>
<pin id="327" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="empty_6/1 "/>
</bind>
</comp>

<comp id="329" class="1004" name="IN_addr_fu_329">
<pin_list>
<pin id="330" dir="0" index="0" bw="32" slack="0"/>
<pin id="331" dir="0" index="1" bw="32" slack="0"/>
<pin id="332" dir="1" index="2" bw="32" slack="8"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="IN_addr/1 "/>
</bind>
</comp>

<comp id="335" class="1004" name="icmp_ln10_fu_335">
<pin_list>
<pin id="336" dir="0" index="0" bw="3" slack="0"/>
<pin id="337" dir="0" index="1" bw="3" slack="0"/>
<pin id="338" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln10/9 "/>
</bind>
</comp>

<comp id="341" class="1004" name="i_fu_341">
<pin_list>
<pin id="342" dir="0" index="0" bw="3" slack="0"/>
<pin id="343" dir="0" index="1" bw="1" slack="0"/>
<pin id="344" dir="1" index="2" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i/9 "/>
</bind>
</comp>

<comp id="347" class="1004" name="icmp_ln12_fu_347">
<pin_list>
<pin id="348" dir="0" index="0" bw="13" slack="0"/>
<pin id="349" dir="0" index="1" bw="13" slack="0"/>
<pin id="350" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln12/16 "/>
</bind>
</comp>

<comp id="353" class="1004" name="j_fu_353">
<pin_list>
<pin id="354" dir="0" index="0" bw="13" slack="0"/>
<pin id="355" dir="0" index="1" bw="1" slack="0"/>
<pin id="356" dir="1" index="2" bw="13" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="j/16 "/>
</bind>
</comp>

<comp id="359" class="1004" name="r_V_fu_359">
<pin_list>
<pin id="360" dir="0" index="0" bw="16" slack="1"/>
<pin id="361" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="r_V/17 "/>
</bind>
</comp>

<comp id="362" class="1004" name="sext_ln1118_fu_362">
<pin_list>
<pin id="363" dir="0" index="0" bw="16" slack="1"/>
<pin id="364" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln1118/17 "/>
</bind>
</comp>

<comp id="365" class="1004" name="tmp_fu_365">
<pin_list>
<pin id="366" dir="0" index="0" bw="1" slack="0"/>
<pin id="367" dir="0" index="1" bw="32" slack="0"/>
<pin id="368" dir="0" index="2" bw="5" slack="0"/>
<pin id="369" dir="1" index="3" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp/17 "/>
</bind>
</comp>

<comp id="372" class="1004" name="lhs_V_fu_372">
<pin_list>
<pin id="373" dir="0" index="0" bw="26" slack="0"/>
<pin id="374" dir="0" index="1" bw="16" slack="2"/>
<pin id="375" dir="0" index="2" bw="1" slack="0"/>
<pin id="376" dir="1" index="3" bw="26" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="lhs_V/18 "/>
</bind>
</comp>

<comp id="380" class="1004" name="sext_ln728_fu_380">
<pin_list>
<pin id="381" dir="0" index="0" bw="26" slack="0"/>
<pin id="382" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln728/18 "/>
</bind>
</comp>

<comp id="384" class="1004" name="ret_V_fu_384">
<pin_list>
<pin id="385" dir="0" index="0" bw="32" slack="1"/>
<pin id="386" dir="0" index="1" bw="26" slack="0"/>
<pin id="387" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="ret_V/18 "/>
</bind>
</comp>

<comp id="389" class="1004" name="p_Result_s_fu_389">
<pin_list>
<pin id="390" dir="0" index="0" bw="1" slack="0"/>
<pin id="391" dir="0" index="1" bw="32" slack="0"/>
<pin id="392" dir="0" index="2" bw="6" slack="0"/>
<pin id="393" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="p_Result_s/18 "/>
</bind>
</comp>

<comp id="397" class="1004" name="tmp_V_3_fu_397">
<pin_list>
<pin id="398" dir="0" index="0" bw="16" slack="0"/>
<pin id="399" dir="0" index="1" bw="32" slack="0"/>
<pin id="400" dir="0" index="2" bw="5" slack="0"/>
<pin id="401" dir="0" index="3" bw="6" slack="0"/>
<pin id="402" dir="1" index="4" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_V_3/18 "/>
</bind>
</comp>

<comp id="407" class="1004" name="p_Result_1_fu_407">
<pin_list>
<pin id="408" dir="0" index="0" bw="1" slack="0"/>
<pin id="409" dir="0" index="1" bw="32" slack="0"/>
<pin id="410" dir="0" index="2" bw="6" slack="0"/>
<pin id="411" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="p_Result_1/18 "/>
</bind>
</comp>

<comp id="415" class="1004" name="zext_ln415_fu_415">
<pin_list>
<pin id="416" dir="0" index="0" bw="1" slack="1"/>
<pin id="417" dir="1" index="1" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln415/18 "/>
</bind>
</comp>

<comp id="418" class="1004" name="tmp_V_4_fu_418">
<pin_list>
<pin id="419" dir="0" index="0" bw="16" slack="0"/>
<pin id="420" dir="0" index="1" bw="1" slack="0"/>
<pin id="421" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_V_4/18 "/>
</bind>
</comp>

<comp id="424" class="1004" name="tmp_3_fu_424">
<pin_list>
<pin id="425" dir="0" index="0" bw="1" slack="0"/>
<pin id="426" dir="0" index="1" bw="16" slack="0"/>
<pin id="427" dir="0" index="2" bw="5" slack="0"/>
<pin id="428" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_3/18 "/>
</bind>
</comp>

<comp id="432" class="1004" name="xor_ln416_fu_432">
<pin_list>
<pin id="433" dir="0" index="0" bw="1" slack="0"/>
<pin id="434" dir="0" index="1" bw="1" slack="0"/>
<pin id="435" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln416/18 "/>
</bind>
</comp>

<comp id="438" class="1004" name="carry_1_fu_438">
<pin_list>
<pin id="439" dir="0" index="0" bw="1" slack="0"/>
<pin id="440" dir="0" index="1" bw="1" slack="0"/>
<pin id="441" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="carry_1/18 "/>
</bind>
</comp>

<comp id="444" class="1004" name="p_Result_2_fu_444">
<pin_list>
<pin id="445" dir="0" index="0" bw="1" slack="0"/>
<pin id="446" dir="0" index="1" bw="16" slack="0"/>
<pin id="447" dir="0" index="2" bw="5" slack="0"/>
<pin id="448" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="p_Result_2/18 "/>
</bind>
</comp>

<comp id="452" class="1004" name="tmp_1_fu_452">
<pin_list>
<pin id="453" dir="0" index="0" bw="5" slack="0"/>
<pin id="454" dir="0" index="1" bw="32" slack="0"/>
<pin id="455" dir="0" index="2" bw="6" slack="0"/>
<pin id="456" dir="0" index="3" bw="6" slack="0"/>
<pin id="457" dir="1" index="4" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_1/18 "/>
</bind>
</comp>

<comp id="462" class="1004" name="Range2_all_ones_fu_462">
<pin_list>
<pin id="463" dir="0" index="0" bw="5" slack="0"/>
<pin id="464" dir="0" index="1" bw="5" slack="0"/>
<pin id="465" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="Range2_all_ones/18 "/>
</bind>
</comp>

<comp id="468" class="1004" name="tmp_2_fu_468">
<pin_list>
<pin id="469" dir="0" index="0" bw="6" slack="0"/>
<pin id="470" dir="0" index="1" bw="32" slack="0"/>
<pin id="471" dir="0" index="2" bw="6" slack="0"/>
<pin id="472" dir="0" index="3" bw="6" slack="0"/>
<pin id="473" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_2/18 "/>
</bind>
</comp>

<comp id="478" class="1004" name="Range1_all_ones_fu_478">
<pin_list>
<pin id="479" dir="0" index="0" bw="6" slack="0"/>
<pin id="480" dir="0" index="1" bw="6" slack="0"/>
<pin id="481" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="Range1_all_ones/18 "/>
</bind>
</comp>

<comp id="484" class="1004" name="Range1_all_zeros_fu_484">
<pin_list>
<pin id="485" dir="0" index="0" bw="6" slack="0"/>
<pin id="486" dir="0" index="1" bw="6" slack="0"/>
<pin id="487" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="Range1_all_zeros/18 "/>
</bind>
</comp>

<comp id="490" class="1004" name="deleted_zeros_fu_490">
<pin_list>
<pin id="491" dir="0" index="0" bw="1" slack="0"/>
<pin id="492" dir="0" index="1" bw="1" slack="0"/>
<pin id="493" dir="0" index="2" bw="1" slack="0"/>
<pin id="494" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="deleted_zeros/18 "/>
</bind>
</comp>

<comp id="498" class="1004" name="tmp_5_fu_498">
<pin_list>
<pin id="499" dir="0" index="0" bw="1" slack="0"/>
<pin id="500" dir="0" index="1" bw="32" slack="0"/>
<pin id="501" dir="0" index="2" bw="6" slack="0"/>
<pin id="502" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_5/18 "/>
</bind>
</comp>

<comp id="506" class="1004" name="xor_ln779_fu_506">
<pin_list>
<pin id="507" dir="0" index="0" bw="1" slack="0"/>
<pin id="508" dir="0" index="1" bw="1" slack="0"/>
<pin id="509" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln779/18 "/>
</bind>
</comp>

<comp id="512" class="1004" name="and_ln779_fu_512">
<pin_list>
<pin id="513" dir="0" index="0" bw="1" slack="0"/>
<pin id="514" dir="0" index="1" bw="1" slack="0"/>
<pin id="515" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln779/18 "/>
</bind>
</comp>

<comp id="518" class="1004" name="deleted_ones_fu_518">
<pin_list>
<pin id="519" dir="0" index="0" bw="1" slack="0"/>
<pin id="520" dir="0" index="1" bw="1" slack="0"/>
<pin id="521" dir="0" index="2" bw="1" slack="0"/>
<pin id="522" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="deleted_ones/18 "/>
</bind>
</comp>

<comp id="526" class="1004" name="and_ln781_fu_526">
<pin_list>
<pin id="527" dir="0" index="0" bw="1" slack="0"/>
<pin id="528" dir="0" index="1" bw="1" slack="0"/>
<pin id="529" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln781/18 "/>
</bind>
</comp>

<comp id="532" class="1004" name="xor_ln785_fu_532">
<pin_list>
<pin id="533" dir="0" index="0" bw="1" slack="0"/>
<pin id="534" dir="0" index="1" bw="1" slack="0"/>
<pin id="535" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln785/18 "/>
</bind>
</comp>

<comp id="538" class="1004" name="or_ln785_fu_538">
<pin_list>
<pin id="539" dir="0" index="0" bw="1" slack="0"/>
<pin id="540" dir="0" index="1" bw="1" slack="0"/>
<pin id="541" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln785/18 "/>
</bind>
</comp>

<comp id="544" class="1004" name="xor_ln785_1_fu_544">
<pin_list>
<pin id="545" dir="0" index="0" bw="1" slack="0"/>
<pin id="546" dir="0" index="1" bw="1" slack="0"/>
<pin id="547" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln785_1/18 "/>
</bind>
</comp>

<comp id="550" class="1004" name="overflow_fu_550">
<pin_list>
<pin id="551" dir="0" index="0" bw="1" slack="0"/>
<pin id="552" dir="0" index="1" bw="1" slack="0"/>
<pin id="553" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="overflow/18 "/>
</bind>
</comp>

<comp id="556" class="1004" name="and_ln786_fu_556">
<pin_list>
<pin id="557" dir="0" index="0" bw="1" slack="0"/>
<pin id="558" dir="0" index="1" bw="1" slack="0"/>
<pin id="559" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln786/18 "/>
</bind>
</comp>

<comp id="562" class="1004" name="or_ln786_fu_562">
<pin_list>
<pin id="563" dir="0" index="0" bw="1" slack="0"/>
<pin id="564" dir="0" index="1" bw="1" slack="0"/>
<pin id="565" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln786/18 "/>
</bind>
</comp>

<comp id="568" class="1004" name="xor_ln786_fu_568">
<pin_list>
<pin id="569" dir="0" index="0" bw="1" slack="0"/>
<pin id="570" dir="0" index="1" bw="1" slack="0"/>
<pin id="571" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln786/18 "/>
</bind>
</comp>

<comp id="574" class="1004" name="underflow_fu_574">
<pin_list>
<pin id="575" dir="0" index="0" bw="1" slack="0"/>
<pin id="576" dir="0" index="1" bw="1" slack="0"/>
<pin id="577" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="underflow/18 "/>
</bind>
</comp>

<comp id="580" class="1004" name="or_ln340_fu_580">
<pin_list>
<pin id="581" dir="0" index="0" bw="1" slack="0"/>
<pin id="582" dir="0" index="1" bw="1" slack="0"/>
<pin id="583" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln340/18 "/>
</bind>
</comp>

<comp id="586" class="1004" name="or_ln340_2_fu_586">
<pin_list>
<pin id="587" dir="0" index="0" bw="1" slack="0"/>
<pin id="588" dir="0" index="1" bw="1" slack="0"/>
<pin id="589" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln340_2/18 "/>
</bind>
</comp>

<comp id="592" class="1004" name="or_ln340_1_fu_592">
<pin_list>
<pin id="593" dir="0" index="0" bw="1" slack="0"/>
<pin id="594" dir="0" index="1" bw="1" slack="0"/>
<pin id="595" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln340_1/18 "/>
</bind>
</comp>

<comp id="598" class="1004" name="select_ln340_fu_598">
<pin_list>
<pin id="599" dir="0" index="0" bw="1" slack="0"/>
<pin id="600" dir="0" index="1" bw="16" slack="0"/>
<pin id="601" dir="0" index="2" bw="16" slack="0"/>
<pin id="602" dir="1" index="3" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln340/18 "/>
</bind>
</comp>

<comp id="606" class="1004" name="select_ln388_fu_606">
<pin_list>
<pin id="607" dir="0" index="0" bw="1" slack="0"/>
<pin id="608" dir="0" index="1" bw="16" slack="0"/>
<pin id="609" dir="0" index="2" bw="16" slack="0"/>
<pin id="610" dir="1" index="3" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln388/18 "/>
</bind>
</comp>

<comp id="614" class="1004" name="select_ln340_1_fu_614">
<pin_list>
<pin id="615" dir="0" index="0" bw="1" slack="0"/>
<pin id="616" dir="0" index="1" bw="16" slack="0"/>
<pin id="617" dir="0" index="2" bw="16" slack="0"/>
<pin id="618" dir="1" index="3" bw="16" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln340_1/18 "/>
</bind>
</comp>

<comp id="622" class="1007" name="r_V_2_fu_622">
<pin_list>
<pin id="623" dir="0" index="0" bw="16" slack="0"/>
<pin id="624" dir="0" index="1" bw="16" slack="0"/>
<pin id="625" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="r_V_2/17 "/>
</bind>
</comp>

<comp id="629" class="1005" name="OUT_addr_reg_629">
<pin_list>
<pin id="630" dir="0" index="0" bw="16" slack="7"/>
<pin id="631" dir="1" index="1" bw="16" slack="7"/>
</pin_list>
<bind>
<opset="OUT_addr "/>
</bind>
</comp>

<comp id="635" class="1005" name="B_addr_reg_635">
<pin_list>
<pin id="636" dir="0" index="0" bw="16" slack="1"/>
<pin id="637" dir="1" index="1" bw="16" slack="1"/>
</pin_list>
<bind>
<opset="B_addr "/>
</bind>
</comp>

<comp id="641" class="1005" name="W_addr_reg_641">
<pin_list>
<pin id="642" dir="0" index="0" bw="16" slack="1"/>
<pin id="643" dir="1" index="1" bw="16" slack="1"/>
</pin_list>
<bind>
<opset="W_addr "/>
</bind>
</comp>

<comp id="647" class="1005" name="IN_addr_reg_647">
<pin_list>
<pin id="648" dir="0" index="0" bw="16" slack="8"/>
<pin id="649" dir="1" index="1" bw="16" slack="8"/>
</pin_list>
<bind>
<opset="IN_addr "/>
</bind>
</comp>

<comp id="656" class="1005" name="i_reg_656">
<pin_list>
<pin id="657" dir="0" index="0" bw="3" slack="0"/>
<pin id="658" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

<comp id="661" class="1005" name="tmp_V_reg_661">
<pin_list>
<pin id="662" dir="0" index="0" bw="16" slack="2"/>
<pin id="663" dir="1" index="1" bw="16" slack="2"/>
</pin_list>
<bind>
<opset="tmp_V "/>
</bind>
</comp>

<comp id="669" class="1005" name="j_reg_669">
<pin_list>
<pin id="670" dir="0" index="0" bw="13" slack="0"/>
<pin id="671" dir="1" index="1" bw="13" slack="0"/>
</pin_list>
<bind>
<opset="j "/>
</bind>
</comp>

<comp id="674" class="1005" name="IN_addr_read_reg_674">
<pin_list>
<pin id="675" dir="0" index="0" bw="16" slack="1"/>
<pin id="676" dir="1" index="1" bw="16" slack="1"/>
</pin_list>
<bind>
<opset="IN_addr_read "/>
</bind>
</comp>

<comp id="679" class="1005" name="W_addr_read_reg_679">
<pin_list>
<pin id="680" dir="0" index="0" bw="16" slack="1"/>
<pin id="681" dir="1" index="1" bw="16" slack="1"/>
</pin_list>
<bind>
<opset="W_addr_read "/>
</bind>
</comp>

<comp id="684" class="1005" name="r_V_2_reg_684">
<pin_list>
<pin id="685" dir="0" index="0" bw="32" slack="1"/>
<pin id="686" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="r_V_2 "/>
</bind>
</comp>

<comp id="689" class="1005" name="tmp_reg_689">
<pin_list>
<pin id="690" dir="0" index="0" bw="1" slack="1"/>
<pin id="691" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="694" class="1005" name="select_ln340_1_reg_694">
<pin_list>
<pin id="695" dir="0" index="0" bw="16" slack="1"/>
<pin id="696" dir="1" index="1" bw="16" slack="1"/>
</pin_list>
<bind>
<opset="select_ln340_1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="150"><net_src comp="16" pin="0"/><net_sink comp="146" pin=0"/></net>

<net id="151"><net_src comp="14" pin="0"/><net_sink comp="146" pin=1"/></net>

<net id="156"><net_src comp="16" pin="0"/><net_sink comp="152" pin=0"/></net>

<net id="157"><net_src comp="12" pin="0"/><net_sink comp="152" pin=1"/></net>

<net id="162"><net_src comp="16" pin="0"/><net_sink comp="158" pin=0"/></net>

<net id="163"><net_src comp="10" pin="0"/><net_sink comp="158" pin=1"/></net>

<net id="168"><net_src comp="16" pin="0"/><net_sink comp="164" pin=0"/></net>

<net id="169"><net_src comp="8" pin="0"/><net_sink comp="164" pin=1"/></net>

<net id="175"><net_src comp="24" pin="0"/><net_sink comp="170" pin=0"/></net>

<net id="176"><net_src comp="26" pin="0"/><net_sink comp="170" pin=2"/></net>

<net id="182"><net_src comp="24" pin="0"/><net_sink comp="177" pin=0"/></net>

<net id="183"><net_src comp="28" pin="0"/><net_sink comp="177" pin=2"/></net>

<net id="189"><net_src comp="78" pin="0"/><net_sink comp="184" pin=0"/></net>

<net id="190"><net_src comp="26" pin="0"/><net_sink comp="184" pin=2"/></net>

<net id="196"><net_src comp="24" pin="0"/><net_sink comp="191" pin=0"/></net>

<net id="197"><net_src comp="90" pin="0"/><net_sink comp="191" pin=2"/></net>

<net id="198"><net_src comp="92" pin="0"/><net_sink comp="184" pin=0"/></net>

<net id="203"><net_src comp="94" pin="0"/><net_sink comp="199" pin=0"/></net>

<net id="208"><net_src comp="94" pin="0"/><net_sink comp="204" pin=0"/></net>

<net id="213"><net_src comp="94" pin="0"/><net_sink comp="209" pin=0"/></net>

<net id="220"><net_src comp="104" pin="0"/><net_sink comp="214" pin=0"/></net>

<net id="221"><net_src comp="106" pin="0"/><net_sink comp="214" pin=3"/></net>

<net id="225"><net_src comp="80" pin="0"/><net_sink comp="222" pin=0"/></net>

<net id="232"><net_src comp="222" pin="1"/><net_sink comp="226" pin=0"/></net>

<net id="242"><net_src comp="236" pin="4"/><net_sink comp="214" pin=2"/></net>

<net id="243"><net_src comp="236" pin="4"/><net_sink comp="233" pin=0"/></net>

<net id="247"><net_src comp="96" pin="0"/><net_sink comp="244" pin=0"/></net>

<net id="254"><net_src comp="244" pin="1"/><net_sink comp="248" pin=0"/></net>

<net id="261"><net_src comp="18" pin="0"/><net_sink comp="255" pin=0"/></net>

<net id="262"><net_src comp="146" pin="2"/><net_sink comp="255" pin=1"/></net>

<net id="263"><net_src comp="20" pin="0"/><net_sink comp="255" pin=2"/></net>

<net id="264"><net_src comp="22" pin="0"/><net_sink comp="255" pin=3"/></net>

<net id="268"><net_src comp="255" pin="4"/><net_sink comp="265" pin=0"/></net>

<net id="273"><net_src comp="6" pin="0"/><net_sink comp="269" pin=0"/></net>

<net id="274"><net_src comp="265" pin="1"/><net_sink comp="269" pin=1"/></net>

<net id="281"><net_src comp="18" pin="0"/><net_sink comp="275" pin=0"/></net>

<net id="282"><net_src comp="152" pin="2"/><net_sink comp="275" pin=1"/></net>

<net id="283"><net_src comp="20" pin="0"/><net_sink comp="275" pin=2"/></net>

<net id="284"><net_src comp="22" pin="0"/><net_sink comp="275" pin=3"/></net>

<net id="288"><net_src comp="275" pin="4"/><net_sink comp="285" pin=0"/></net>

<net id="293"><net_src comp="4" pin="0"/><net_sink comp="289" pin=0"/></net>

<net id="294"><net_src comp="285" pin="1"/><net_sink comp="289" pin=1"/></net>

<net id="301"><net_src comp="18" pin="0"/><net_sink comp="295" pin=0"/></net>

<net id="302"><net_src comp="158" pin="2"/><net_sink comp="295" pin=1"/></net>

<net id="303"><net_src comp="20" pin="0"/><net_sink comp="295" pin=2"/></net>

<net id="304"><net_src comp="22" pin="0"/><net_sink comp="295" pin=3"/></net>

<net id="308"><net_src comp="295" pin="4"/><net_sink comp="305" pin=0"/></net>

<net id="313"><net_src comp="2" pin="0"/><net_sink comp="309" pin=0"/></net>

<net id="314"><net_src comp="305" pin="1"/><net_sink comp="309" pin=1"/></net>

<net id="321"><net_src comp="18" pin="0"/><net_sink comp="315" pin=0"/></net>

<net id="322"><net_src comp="164" pin="2"/><net_sink comp="315" pin=1"/></net>

<net id="323"><net_src comp="20" pin="0"/><net_sink comp="315" pin=2"/></net>

<net id="324"><net_src comp="22" pin="0"/><net_sink comp="315" pin=3"/></net>

<net id="328"><net_src comp="315" pin="4"/><net_sink comp="325" pin=0"/></net>

<net id="333"><net_src comp="0" pin="0"/><net_sink comp="329" pin=0"/></net>

<net id="334"><net_src comp="325" pin="1"/><net_sink comp="329" pin=1"/></net>

<net id="339"><net_src comp="226" pin="4"/><net_sink comp="335" pin=0"/></net>

<net id="340"><net_src comp="82" pin="0"/><net_sink comp="335" pin=1"/></net>

<net id="345"><net_src comp="226" pin="4"/><net_sink comp="341" pin=0"/></net>

<net id="346"><net_src comp="88" pin="0"/><net_sink comp="341" pin=1"/></net>

<net id="351"><net_src comp="248" pin="4"/><net_sink comp="347" pin=0"/></net>

<net id="352"><net_src comp="98" pin="0"/><net_sink comp="347" pin=1"/></net>

<net id="357"><net_src comp="248" pin="4"/><net_sink comp="353" pin=0"/></net>

<net id="358"><net_src comp="102" pin="0"/><net_sink comp="353" pin=1"/></net>

<net id="370"><net_src comp="108" pin="0"/><net_sink comp="365" pin=0"/></net>

<net id="371"><net_src comp="110" pin="0"/><net_sink comp="365" pin=2"/></net>

<net id="377"><net_src comp="112" pin="0"/><net_sink comp="372" pin=0"/></net>

<net id="378"><net_src comp="233" pin="1"/><net_sink comp="372" pin=1"/></net>

<net id="379"><net_src comp="114" pin="0"/><net_sink comp="372" pin=2"/></net>

<net id="383"><net_src comp="372" pin="3"/><net_sink comp="380" pin=0"/></net>

<net id="388"><net_src comp="380" pin="1"/><net_sink comp="384" pin=1"/></net>

<net id="394"><net_src comp="108" pin="0"/><net_sink comp="389" pin=0"/></net>

<net id="395"><net_src comp="384" pin="2"/><net_sink comp="389" pin=1"/></net>

<net id="396"><net_src comp="22" pin="0"/><net_sink comp="389" pin=2"/></net>

<net id="403"><net_src comp="116" pin="0"/><net_sink comp="397" pin=0"/></net>

<net id="404"><net_src comp="384" pin="2"/><net_sink comp="397" pin=1"/></net>

<net id="405"><net_src comp="118" pin="0"/><net_sink comp="397" pin=2"/></net>

<net id="406"><net_src comp="120" pin="0"/><net_sink comp="397" pin=3"/></net>

<net id="412"><net_src comp="108" pin="0"/><net_sink comp="407" pin=0"/></net>

<net id="413"><net_src comp="384" pin="2"/><net_sink comp="407" pin=1"/></net>

<net id="414"><net_src comp="120" pin="0"/><net_sink comp="407" pin=2"/></net>

<net id="422"><net_src comp="397" pin="4"/><net_sink comp="418" pin=0"/></net>

<net id="423"><net_src comp="415" pin="1"/><net_sink comp="418" pin=1"/></net>

<net id="429"><net_src comp="122" pin="0"/><net_sink comp="424" pin=0"/></net>

<net id="430"><net_src comp="418" pin="2"/><net_sink comp="424" pin=1"/></net>

<net id="431"><net_src comp="124" pin="0"/><net_sink comp="424" pin=2"/></net>

<net id="436"><net_src comp="424" pin="3"/><net_sink comp="432" pin=0"/></net>

<net id="437"><net_src comp="126" pin="0"/><net_sink comp="432" pin=1"/></net>

<net id="442"><net_src comp="407" pin="3"/><net_sink comp="438" pin=0"/></net>

<net id="443"><net_src comp="432" pin="2"/><net_sink comp="438" pin=1"/></net>

<net id="449"><net_src comp="122" pin="0"/><net_sink comp="444" pin=0"/></net>

<net id="450"><net_src comp="418" pin="2"/><net_sink comp="444" pin=1"/></net>

<net id="451"><net_src comp="124" pin="0"/><net_sink comp="444" pin=2"/></net>

<net id="458"><net_src comp="128" pin="0"/><net_sink comp="452" pin=0"/></net>

<net id="459"><net_src comp="384" pin="2"/><net_sink comp="452" pin=1"/></net>

<net id="460"><net_src comp="130" pin="0"/><net_sink comp="452" pin=2"/></net>

<net id="461"><net_src comp="22" pin="0"/><net_sink comp="452" pin=3"/></net>

<net id="466"><net_src comp="452" pin="4"/><net_sink comp="462" pin=0"/></net>

<net id="467"><net_src comp="132" pin="0"/><net_sink comp="462" pin=1"/></net>

<net id="474"><net_src comp="134" pin="0"/><net_sink comp="468" pin=0"/></net>

<net id="475"><net_src comp="384" pin="2"/><net_sink comp="468" pin=1"/></net>

<net id="476"><net_src comp="136" pin="0"/><net_sink comp="468" pin=2"/></net>

<net id="477"><net_src comp="22" pin="0"/><net_sink comp="468" pin=3"/></net>

<net id="482"><net_src comp="468" pin="4"/><net_sink comp="478" pin=0"/></net>

<net id="483"><net_src comp="138" pin="0"/><net_sink comp="478" pin=1"/></net>

<net id="488"><net_src comp="468" pin="4"/><net_sink comp="484" pin=0"/></net>

<net id="489"><net_src comp="140" pin="0"/><net_sink comp="484" pin=1"/></net>

<net id="495"><net_src comp="438" pin="2"/><net_sink comp="490" pin=0"/></net>

<net id="496"><net_src comp="478" pin="2"/><net_sink comp="490" pin=1"/></net>

<net id="497"><net_src comp="484" pin="2"/><net_sink comp="490" pin=2"/></net>

<net id="503"><net_src comp="108" pin="0"/><net_sink comp="498" pin=0"/></net>

<net id="504"><net_src comp="384" pin="2"/><net_sink comp="498" pin=1"/></net>

<net id="505"><net_src comp="136" pin="0"/><net_sink comp="498" pin=2"/></net>

<net id="510"><net_src comp="498" pin="3"/><net_sink comp="506" pin=0"/></net>

<net id="511"><net_src comp="126" pin="0"/><net_sink comp="506" pin=1"/></net>

<net id="516"><net_src comp="462" pin="2"/><net_sink comp="512" pin=0"/></net>

<net id="517"><net_src comp="506" pin="2"/><net_sink comp="512" pin=1"/></net>

<net id="523"><net_src comp="438" pin="2"/><net_sink comp="518" pin=0"/></net>

<net id="524"><net_src comp="512" pin="2"/><net_sink comp="518" pin=1"/></net>

<net id="525"><net_src comp="478" pin="2"/><net_sink comp="518" pin=2"/></net>

<net id="530"><net_src comp="438" pin="2"/><net_sink comp="526" pin=0"/></net>

<net id="531"><net_src comp="478" pin="2"/><net_sink comp="526" pin=1"/></net>

<net id="536"><net_src comp="490" pin="3"/><net_sink comp="532" pin=0"/></net>

<net id="537"><net_src comp="126" pin="0"/><net_sink comp="532" pin=1"/></net>

<net id="542"><net_src comp="444" pin="3"/><net_sink comp="538" pin=0"/></net>

<net id="543"><net_src comp="532" pin="2"/><net_sink comp="538" pin=1"/></net>

<net id="548"><net_src comp="389" pin="3"/><net_sink comp="544" pin=0"/></net>

<net id="549"><net_src comp="126" pin="0"/><net_sink comp="544" pin=1"/></net>

<net id="554"><net_src comp="538" pin="2"/><net_sink comp="550" pin=0"/></net>

<net id="555"><net_src comp="544" pin="2"/><net_sink comp="550" pin=1"/></net>

<net id="560"><net_src comp="444" pin="3"/><net_sink comp="556" pin=0"/></net>

<net id="561"><net_src comp="518" pin="3"/><net_sink comp="556" pin=1"/></net>

<net id="566"><net_src comp="526" pin="2"/><net_sink comp="562" pin=0"/></net>

<net id="567"><net_src comp="556" pin="2"/><net_sink comp="562" pin=1"/></net>

<net id="572"><net_src comp="562" pin="2"/><net_sink comp="568" pin=0"/></net>

<net id="573"><net_src comp="126" pin="0"/><net_sink comp="568" pin=1"/></net>

<net id="578"><net_src comp="389" pin="3"/><net_sink comp="574" pin=0"/></net>

<net id="579"><net_src comp="568" pin="2"/><net_sink comp="574" pin=1"/></net>

<net id="584"><net_src comp="574" pin="2"/><net_sink comp="580" pin=0"/></net>

<net id="585"><net_src comp="550" pin="2"/><net_sink comp="580" pin=1"/></net>

<net id="590"><net_src comp="556" pin="2"/><net_sink comp="586" pin=0"/></net>

<net id="591"><net_src comp="544" pin="2"/><net_sink comp="586" pin=1"/></net>

<net id="596"><net_src comp="586" pin="2"/><net_sink comp="592" pin=0"/></net>

<net id="597"><net_src comp="526" pin="2"/><net_sink comp="592" pin=1"/></net>

<net id="603"><net_src comp="580" pin="2"/><net_sink comp="598" pin=0"/></net>

<net id="604"><net_src comp="142" pin="0"/><net_sink comp="598" pin=1"/></net>

<net id="605"><net_src comp="418" pin="2"/><net_sink comp="598" pin=2"/></net>

<net id="611"><net_src comp="574" pin="2"/><net_sink comp="606" pin=0"/></net>

<net id="612"><net_src comp="144" pin="0"/><net_sink comp="606" pin=1"/></net>

<net id="613"><net_src comp="418" pin="2"/><net_sink comp="606" pin=2"/></net>

<net id="619"><net_src comp="592" pin="2"/><net_sink comp="614" pin=0"/></net>

<net id="620"><net_src comp="598" pin="3"/><net_sink comp="614" pin=1"/></net>

<net id="621"><net_src comp="606" pin="3"/><net_sink comp="614" pin=2"/></net>

<net id="626"><net_src comp="359" pin="1"/><net_sink comp="622" pin=0"/></net>

<net id="627"><net_src comp="362" pin="1"/><net_sink comp="622" pin=1"/></net>

<net id="628"><net_src comp="622" pin="2"/><net_sink comp="365" pin=1"/></net>

<net id="632"><net_src comp="269" pin="2"/><net_sink comp="629" pin=0"/></net>

<net id="633"><net_src comp="629" pin="1"/><net_sink comp="184" pin=1"/></net>

<net id="634"><net_src comp="629" pin="1"/><net_sink comp="214" pin=1"/></net>

<net id="638"><net_src comp="289" pin="2"/><net_sink comp="635" pin=0"/></net>

<net id="639"><net_src comp="635" pin="1"/><net_sink comp="170" pin=1"/></net>

<net id="640"><net_src comp="635" pin="1"/><net_sink comp="199" pin=1"/></net>

<net id="644"><net_src comp="309" pin="2"/><net_sink comp="641" pin=0"/></net>

<net id="645"><net_src comp="641" pin="1"/><net_sink comp="177" pin=1"/></net>

<net id="646"><net_src comp="641" pin="1"/><net_sink comp="209" pin=1"/></net>

<net id="650"><net_src comp="329" pin="2"/><net_sink comp="647" pin=0"/></net>

<net id="651"><net_src comp="647" pin="1"/><net_sink comp="191" pin=1"/></net>

<net id="652"><net_src comp="647" pin="1"/><net_sink comp="204" pin=1"/></net>

<net id="659"><net_src comp="341" pin="2"/><net_sink comp="656" pin=0"/></net>

<net id="660"><net_src comp="656" pin="1"/><net_sink comp="226" pin=2"/></net>

<net id="664"><net_src comp="199" pin="2"/><net_sink comp="661" pin=0"/></net>

<net id="665"><net_src comp="661" pin="1"/><net_sink comp="236" pin=0"/></net>

<net id="672"><net_src comp="353" pin="2"/><net_sink comp="669" pin=0"/></net>

<net id="673"><net_src comp="669" pin="1"/><net_sink comp="248" pin=2"/></net>

<net id="677"><net_src comp="204" pin="2"/><net_sink comp="674" pin=0"/></net>

<net id="678"><net_src comp="674" pin="1"/><net_sink comp="359" pin=0"/></net>

<net id="682"><net_src comp="209" pin="2"/><net_sink comp="679" pin=0"/></net>

<net id="683"><net_src comp="679" pin="1"/><net_sink comp="362" pin=0"/></net>

<net id="687"><net_src comp="622" pin="2"/><net_sink comp="684" pin=0"/></net>

<net id="688"><net_src comp="684" pin="1"/><net_sink comp="384" pin=0"/></net>

<net id="692"><net_src comp="365" pin="3"/><net_sink comp="689" pin=0"/></net>

<net id="693"><net_src comp="689" pin="1"/><net_sink comp="415" pin=0"/></net>

<net id="697"><net_src comp="614" pin="3"/><net_sink comp="694" pin=0"/></net>

<net id="698"><net_src comp="694" pin="1"/><net_sink comp="236" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: OUT_r | {8 9 16 19 20 21 22 }
 - Input state : 
	Port: fc : IN_r | {9 10 11 12 13 14 15 16 }
	Port: fc : W | {2 3 4 5 6 7 8 16 }
	Port: fc : B | {2 3 4 5 6 7 8 14 }
	Port: fc : in_V | {1 }
	Port: fc : weight_V | {1 }
	Port: fc : bias_V | {1 }
	Port: fc : out_V | {1 }
  - Chain level:
	State 1
		empty : 1
		OUT_addr : 2
		empty_4 : 1
		B_addr : 2
		empty_5 : 1
		W_addr : 2
		empty_6 : 1
		IN_addr : 2
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
		icmp_ln10 : 1
		i : 1
		br_ln10 : 2
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
		icmp_ln12 : 1
		j : 1
		br_ln12 : 2
		write_ln18 : 1
	State 17
		r_V_2 : 1
		tmp : 2
	State 18
		sext_ln728 : 1
		ret_V : 2
		p_Result_s : 3
		tmp_V_3 : 3
		p_Result_1 : 3
		tmp_V_4 : 4
		tmp_3 : 5
		xor_ln416 : 6
		carry_1 : 6
		p_Result_2 : 5
		tmp_1 : 3
		Range2_all_ones : 4
		tmp_2 : 3
		Range1_all_ones : 4
		Range1_all_zeros : 4
		deleted_zeros : 6
		tmp_5 : 3
		xor_ln779 : 4
		and_ln779 : 4
		deleted_ones : 6
		and_ln781 : 6
		xor_ln785 : 7
		or_ln785 : 7
		xor_ln785_1 : 4
		overflow : 7
		and_ln786 : 7
		or_ln786 : 7
		xor_ln786 : 7
		underflow : 7
		or_ln340 : 7
		or_ln340_2 : 7
		or_ln340_1 : 7
		select_ln340 : 7
		select_ln388 : 7
		select_ln340_1 : 8
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------|---------|---------|---------|
| Operation|      Functional Unit      |  DSP48E |    FF   |   LUT   |
|----------|---------------------------|---------|---------|---------|
|          |          i_fu_341         |    0    |    0    |    4    |
|    add   |          j_fu_353         |    0    |    0    |    13   |
|          |        ret_V_fu_384       |    0    |    0    |    32   |
|          |       tmp_V_4_fu_418      |    0    |    0    |    16   |
|----------|---------------------------|---------|---------|---------|
|          |    deleted_zeros_fu_490   |    0    |    0    |    2    |
|          |    deleted_ones_fu_518    |    0    |    0    |    2    |
|  select  |    select_ln340_fu_598    |    0    |    0    |    16   |
|          |    select_ln388_fu_606    |    0    |    0    |    16   |
|          |   select_ln340_1_fu_614   |    0    |    0    |    16   |
|----------|---------------------------|---------|---------|---------|
|          |      icmp_ln10_fu_335     |    0    |    0    |    2    |
|          |      icmp_ln12_fu_347     |    0    |    0    |    6    |
|   icmp   |   Range2_all_ones_fu_462  |    0    |    0    |    2    |
|          |   Range1_all_ones_fu_478  |    0    |    0    |    3    |
|          |  Range1_all_zeros_fu_484  |    0    |    0    |    3    |
|----------|---------------------------|---------|---------|---------|
|          |       carry_1_fu_438      |    0    |    0    |    1    |
|          |      and_ln779_fu_512     |    0    |    0    |    1    |
|    and   |      and_ln781_fu_526     |    0    |    0    |    1    |
|          |      overflow_fu_550      |    0    |    0    |    1    |
|          |      and_ln786_fu_556     |    0    |    0    |    1    |
|          |      underflow_fu_574     |    0    |    0    |    1    |
|----------|---------------------------|---------|---------|---------|
|          |      xor_ln416_fu_432     |    0    |    0    |    1    |
|          |      xor_ln779_fu_506     |    0    |    0    |    1    |
|    xor   |      xor_ln785_fu_532     |    0    |    0    |    1    |
|          |     xor_ln785_1_fu_544    |    0    |    0    |    1    |
|          |      xor_ln786_fu_568     |    0    |    0    |    1    |
|----------|---------------------------|---------|---------|---------|
|          |      or_ln785_fu_538      |    0    |    0    |    1    |
|          |      or_ln786_fu_562      |    0    |    0    |    1    |
|    or    |      or_ln340_fu_580      |    0    |    0    |    1    |
|          |     or_ln340_2_fu_586     |    0    |    0    |    1    |
|          |     or_ln340_1_fu_592     |    0    |    0    |    1    |
|----------|---------------------------|---------|---------|---------|
|    mul   |        r_V_2_fu_622       |    1    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|          |   out_V_read_read_fu_146  |    0    |    0    |    0    |
|          |  bias_V_read_read_fu_152  |    0    |    0    |    0    |
|          | weight_V_read_read_fu_158 |    0    |    0    |    0    |
|   read   |   in_V_read_read_fu_164   |    0    |    0    |    0    |
|          |     tmp_V_read_fu_199     |    0    |    0    |    0    |
|          |  IN_addr_read_read_fu_204 |    0    |    0    |    0    |
|          |  W_addr_read_read_fu_209  |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|          |     grp_readreq_fu_170    |    0    |    0    |    0    |
|  readreq |     grp_readreq_fu_177    |    0    |    0    |    0    |
|          |     grp_readreq_fu_191    |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
| writeresp|    grp_writeresp_fu_184   |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|   write  |  write_ln18_write_fu_214  |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|          |       out_V7_fu_255       |    0    |    0    |    0    |
|          |       bias_V5_fu_275      |    0    |    0    |    0    |
|          |      weight_V3_fu_295     |    0    |    0    |    0    |
|partselect|        in_V1_fu_315       |    0    |    0    |    0    |
|          |       tmp_V_3_fu_397      |    0    |    0    |    0    |
|          |        tmp_1_fu_452       |    0    |    0    |    0    |
|          |        tmp_2_fu_468       |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|          |        empty_fu_265       |    0    |    0    |    0    |
|          |       empty_4_fu_285      |    0    |    0    |    0    |
|   zext   |       empty_5_fu_305      |    0    |    0    |    0    |
|          |       empty_6_fu_325      |    0    |    0    |    0    |
|          |     zext_ln415_fu_415     |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|          |         r_V_fu_359        |    0    |    0    |    0    |
|   sext   |     sext_ln1118_fu_362    |    0    |    0    |    0    |
|          |     sext_ln728_fu_380     |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|          |         tmp_fu_365        |    0    |    0    |    0    |
|          |     p_Result_s_fu_389     |    0    |    0    |    0    |
| bitselect|     p_Result_1_fu_407     |    0    |    0    |    0    |
|          |        tmp_3_fu_424       |    0    |    0    |    0    |
|          |     p_Result_2_fu_444     |    0    |    0    |    0    |
|          |        tmp_5_fu_498       |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|bitconcatenate|        lhs_V_fu_372       |    0    |    0    |    0    |
|----------|---------------------------|---------|---------|---------|
|   Total  |                           |    1    |    0    |   149   |
|----------|---------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+----------------------+--------+
|                      |   FF   |
+----------------------+--------+
|    B_addr_reg_635    |   16   |
| IN_addr_read_reg_674 |   16   |
|    IN_addr_reg_647   |   16   |
|   OUT_addr_reg_629   |   16   |
|  W_addr_read_reg_679 |   16   |
|    W_addr_reg_641    |   16   |
|      i_0_reg_222     |    3   |
|       i_reg_656      |    3   |
|      j_0_reg_244     |   13   |
|       j_reg_669      |   13   |
|   p_Val2_s_reg_233   |   16   |
|     r_V_2_reg_684    |   32   |
|select_ln340_1_reg_694|   16   |
|     tmp_V_reg_661    |   16   |
|      tmp_reg_689     |    1   |
+----------------------+--------+
|         Total        |   209  |
+----------------------+--------+

* Multiplexer (MUX) list: 
|----------------------|------|------|------|--------||---------|
|         Comp         |  Pin | Size |  BW  | S x BW ||  Delay  |
|----------------------|------|------|------|--------||---------|
| grp_writeresp_fu_184 |  p0  |   2  |   1  |    2   |
|----------------------|------|------|------|--------||---------|
|         Total        |      |      |      |    2   ||  0.466  |
|----------------------|------|------|------|--------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    1   |    -   |    0   |   149  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    0   |    -   |    -   |
|  Register |    -   |    -   |   209  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    1   |    0   |   209  |   149  |
+-----------+--------+--------+--------+--------+
