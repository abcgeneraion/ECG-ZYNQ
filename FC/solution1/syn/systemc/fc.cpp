// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<22> fc::ap_ST_fsm_state1 = "1";
const sc_lv<22> fc::ap_ST_fsm_state2 = "10";
const sc_lv<22> fc::ap_ST_fsm_state3 = "100";
const sc_lv<22> fc::ap_ST_fsm_state4 = "1000";
const sc_lv<22> fc::ap_ST_fsm_state5 = "10000";
const sc_lv<22> fc::ap_ST_fsm_state6 = "100000";
const sc_lv<22> fc::ap_ST_fsm_state7 = "1000000";
const sc_lv<22> fc::ap_ST_fsm_state8 = "10000000";
const sc_lv<22> fc::ap_ST_fsm_state9 = "100000000";
const sc_lv<22> fc::ap_ST_fsm_state10 = "1000000000";
const sc_lv<22> fc::ap_ST_fsm_state11 = "10000000000";
const sc_lv<22> fc::ap_ST_fsm_state12 = "100000000000";
const sc_lv<22> fc::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<22> fc::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<22> fc::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<22> fc::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<22> fc::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<22> fc::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<22> fc::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<22> fc::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<22> fc::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<22> fc::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<32> fc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool fc::ap_const_boolean_1 = true;
const sc_lv<32> fc::ap_const_lv32_8 = "1000";
const sc_lv<1> fc::ap_const_lv1_0 = "0";
const sc_lv<32> fc::ap_const_lv32_F = "1111";
const sc_lv<32> fc::ap_const_lv32_1 = "1";
const sc_lv<32> fc::ap_const_lv32_D = "1101";
const sc_lv<32> fc::ap_const_lv32_7 = "111";
const sc_lv<1> fc::ap_const_lv1_1 = "1";
const sc_lv<32> fc::ap_const_lv32_15 = "10101";
const int fc::C_S_AXI_DATA_WIDTH = "100000";
const int fc::C_M_AXI_IN_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_IN_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_IN_R_CACHE_VALUE = "11";
const int fc::C_M_AXI_DATA_WIDTH = "100000";
const int fc::C_M_AXI_W_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_W_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_W_CACHE_VALUE = "11";
const int fc::C_M_AXI_B_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_B_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_B_CACHE_VALUE = "11";
const int fc::C_M_AXI_OUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_OUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int fc::C_M_AXI_OUT_R_CACHE_VALUE = "11";
const bool fc::ap_const_boolean_0 = false;
const sc_lv<32> fc::ap_const_lv32_10 = "10000";
const sc_lv<32> fc::ap_const_lv32_11 = "10001";
const sc_lv<3> fc::ap_const_lv3_0 = "000";
const sc_lv<32> fc::ap_const_lv32_E = "1110";
const sc_lv<13> fc::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> fc::ap_const_lv32_5 = "101";
const sc_lv<2> fc::ap_const_lv2_0 = "00";
const sc_lv<4> fc::ap_const_lv4_0 = "0000";
const sc_lv<32> fc::ap_const_lv32_5DC0 = "101110111000000";
const sc_lv<32> fc::ap_const_lv32_12C0 = "1001011000000";
const sc_lv<2> fc::ap_const_lv2_3 = "11";
const sc_lv<32> fc::ap_const_lv32_1F = "11111";
const sc_lv<3> fc::ap_const_lv3_5 = "101";
const sc_lv<3> fc::ap_const_lv3_1 = "1";
const sc_lv<13> fc::ap_const_lv13_12C0 = "1001011000000";
const sc_lv<13> fc::ap_const_lv13_1 = "1";
const sc_lv<32> fc::ap_const_lv32_9 = "1001";
const sc_lv<10> fc::ap_const_lv10_0 = "0000000000";
const sc_lv<32> fc::ap_const_lv32_A = "1010";
const sc_lv<32> fc::ap_const_lv32_19 = "11001";
const sc_lv<32> fc::ap_const_lv32_1B = "11011";
const sc_lv<5> fc::ap_const_lv5_1F = "11111";
const sc_lv<32> fc::ap_const_lv32_1A = "11010";
const sc_lv<6> fc::ap_const_lv6_3F = "111111";
const sc_lv<6> fc::ap_const_lv6_0 = "000000";
const sc_lv<16> fc::ap_const_lv16_7FFF = "111111111111111";
const sc_lv<16> fc::ap_const_lv16_8000 = "1000000000000000";
const sc_lv<16> fc::ap_const_lv16_0 = "0000000000000000";

fc::fc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fc_CTRL_s_axi_U = new fc_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("fc_CTRL_s_axi_U");
    fc_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    fc_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    fc_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    fc_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    fc_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    fc_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    fc_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    fc_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    fc_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    fc_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    fc_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    fc_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    fc_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    fc_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    fc_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    fc_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    fc_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    fc_CTRL_s_axi_U->ACLK(ap_clk);
    fc_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    fc_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    fc_CTRL_s_axi_U->ap_start(ap_start);
    fc_CTRL_s_axi_U->interrupt(interrupt);
    fc_CTRL_s_axi_U->ap_ready(ap_ready);
    fc_CTRL_s_axi_U->ap_done(ap_done);
    fc_CTRL_s_axi_U->ap_idle(ap_idle);
    fc_CTRL_s_axi_U->in_V(in_V);
    fc_CTRL_s_axi_U->weight_V(weight_V);
    fc_CTRL_s_axi_U->bias_V(bias_V);
    fc_CTRL_s_axi_U->out_V(out_V);
    fc_IN_r_m_axi_U = new fc_IN_r_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_IN_R_ID_WIDTH,C_M_AXI_IN_R_ADDR_WIDTH,C_M_AXI_IN_R_DATA_WIDTH,C_M_AXI_IN_R_AWUSER_WIDTH,C_M_AXI_IN_R_ARUSER_WIDTH,C_M_AXI_IN_R_WUSER_WIDTH,C_M_AXI_IN_R_RUSER_WIDTH,C_M_AXI_IN_R_BUSER_WIDTH,C_M_AXI_IN_R_USER_VALUE,C_M_AXI_IN_R_PROT_VALUE,C_M_AXI_IN_R_CACHE_VALUE>("fc_IN_r_m_axi_U");
    fc_IN_r_m_axi_U->AWVALID(m_axi_IN_r_AWVALID);
    fc_IN_r_m_axi_U->AWREADY(m_axi_IN_r_AWREADY);
    fc_IN_r_m_axi_U->AWADDR(m_axi_IN_r_AWADDR);
    fc_IN_r_m_axi_U->AWID(m_axi_IN_r_AWID);
    fc_IN_r_m_axi_U->AWLEN(m_axi_IN_r_AWLEN);
    fc_IN_r_m_axi_U->AWSIZE(m_axi_IN_r_AWSIZE);
    fc_IN_r_m_axi_U->AWBURST(m_axi_IN_r_AWBURST);
    fc_IN_r_m_axi_U->AWLOCK(m_axi_IN_r_AWLOCK);
    fc_IN_r_m_axi_U->AWCACHE(m_axi_IN_r_AWCACHE);
    fc_IN_r_m_axi_U->AWPROT(m_axi_IN_r_AWPROT);
    fc_IN_r_m_axi_U->AWQOS(m_axi_IN_r_AWQOS);
    fc_IN_r_m_axi_U->AWREGION(m_axi_IN_r_AWREGION);
    fc_IN_r_m_axi_U->AWUSER(m_axi_IN_r_AWUSER);
    fc_IN_r_m_axi_U->WVALID(m_axi_IN_r_WVALID);
    fc_IN_r_m_axi_U->WREADY(m_axi_IN_r_WREADY);
    fc_IN_r_m_axi_U->WDATA(m_axi_IN_r_WDATA);
    fc_IN_r_m_axi_U->WSTRB(m_axi_IN_r_WSTRB);
    fc_IN_r_m_axi_U->WLAST(m_axi_IN_r_WLAST);
    fc_IN_r_m_axi_U->WID(m_axi_IN_r_WID);
    fc_IN_r_m_axi_U->WUSER(m_axi_IN_r_WUSER);
    fc_IN_r_m_axi_U->ARVALID(m_axi_IN_r_ARVALID);
    fc_IN_r_m_axi_U->ARREADY(m_axi_IN_r_ARREADY);
    fc_IN_r_m_axi_U->ARADDR(m_axi_IN_r_ARADDR);
    fc_IN_r_m_axi_U->ARID(m_axi_IN_r_ARID);
    fc_IN_r_m_axi_U->ARLEN(m_axi_IN_r_ARLEN);
    fc_IN_r_m_axi_U->ARSIZE(m_axi_IN_r_ARSIZE);
    fc_IN_r_m_axi_U->ARBURST(m_axi_IN_r_ARBURST);
    fc_IN_r_m_axi_U->ARLOCK(m_axi_IN_r_ARLOCK);
    fc_IN_r_m_axi_U->ARCACHE(m_axi_IN_r_ARCACHE);
    fc_IN_r_m_axi_U->ARPROT(m_axi_IN_r_ARPROT);
    fc_IN_r_m_axi_U->ARQOS(m_axi_IN_r_ARQOS);
    fc_IN_r_m_axi_U->ARREGION(m_axi_IN_r_ARREGION);
    fc_IN_r_m_axi_U->ARUSER(m_axi_IN_r_ARUSER);
    fc_IN_r_m_axi_U->RVALID(m_axi_IN_r_RVALID);
    fc_IN_r_m_axi_U->RREADY(m_axi_IN_r_RREADY);
    fc_IN_r_m_axi_U->RDATA(m_axi_IN_r_RDATA);
    fc_IN_r_m_axi_U->RLAST(m_axi_IN_r_RLAST);
    fc_IN_r_m_axi_U->RID(m_axi_IN_r_RID);
    fc_IN_r_m_axi_U->RUSER(m_axi_IN_r_RUSER);
    fc_IN_r_m_axi_U->RRESP(m_axi_IN_r_RRESP);
    fc_IN_r_m_axi_U->BVALID(m_axi_IN_r_BVALID);
    fc_IN_r_m_axi_U->BREADY(m_axi_IN_r_BREADY);
    fc_IN_r_m_axi_U->BRESP(m_axi_IN_r_BRESP);
    fc_IN_r_m_axi_U->BID(m_axi_IN_r_BID);
    fc_IN_r_m_axi_U->BUSER(m_axi_IN_r_BUSER);
    fc_IN_r_m_axi_U->ACLK(ap_clk);
    fc_IN_r_m_axi_U->ARESET(ap_rst_n_inv);
    fc_IN_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    fc_IN_r_m_axi_U->I_ARVALID(IN_r_ARVALID);
    fc_IN_r_m_axi_U->I_ARREADY(IN_r_ARREADY);
    fc_IN_r_m_axi_U->I_ARADDR(IN_addr_reg_647);
    fc_IN_r_m_axi_U->I_ARID(ap_var_for_const1);
    fc_IN_r_m_axi_U->I_ARLEN(ap_var_for_const2);
    fc_IN_r_m_axi_U->I_ARSIZE(ap_var_for_const3);
    fc_IN_r_m_axi_U->I_ARLOCK(ap_var_for_const4);
    fc_IN_r_m_axi_U->I_ARCACHE(ap_var_for_const5);
    fc_IN_r_m_axi_U->I_ARQOS(ap_var_for_const5);
    fc_IN_r_m_axi_U->I_ARPROT(ap_var_for_const3);
    fc_IN_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    fc_IN_r_m_axi_U->I_ARBURST(ap_var_for_const4);
    fc_IN_r_m_axi_U->I_ARREGION(ap_var_for_const5);
    fc_IN_r_m_axi_U->I_RVALID(IN_r_RVALID);
    fc_IN_r_m_axi_U->I_RREADY(IN_r_RREADY);
    fc_IN_r_m_axi_U->I_RDATA(IN_r_RDATA);
    fc_IN_r_m_axi_U->I_RID(IN_r_RID);
    fc_IN_r_m_axi_U->I_RUSER(IN_r_RUSER);
    fc_IN_r_m_axi_U->I_RRESP(IN_r_RRESP);
    fc_IN_r_m_axi_U->I_RLAST(IN_r_RLAST);
    fc_IN_r_m_axi_U->I_AWVALID(ap_var_for_const6);
    fc_IN_r_m_axi_U->I_AWREADY(IN_r_AWREADY);
    fc_IN_r_m_axi_U->I_AWADDR(ap_var_for_const7);
    fc_IN_r_m_axi_U->I_AWID(ap_var_for_const1);
    fc_IN_r_m_axi_U->I_AWLEN(ap_var_for_const7);
    fc_IN_r_m_axi_U->I_AWSIZE(ap_var_for_const3);
    fc_IN_r_m_axi_U->I_AWLOCK(ap_var_for_const4);
    fc_IN_r_m_axi_U->I_AWCACHE(ap_var_for_const5);
    fc_IN_r_m_axi_U->I_AWQOS(ap_var_for_const5);
    fc_IN_r_m_axi_U->I_AWPROT(ap_var_for_const3);
    fc_IN_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    fc_IN_r_m_axi_U->I_AWBURST(ap_var_for_const4);
    fc_IN_r_m_axi_U->I_AWREGION(ap_var_for_const5);
    fc_IN_r_m_axi_U->I_WVALID(ap_var_for_const6);
    fc_IN_r_m_axi_U->I_WREADY(IN_r_WREADY);
    fc_IN_r_m_axi_U->I_WDATA(ap_var_for_const8);
    fc_IN_r_m_axi_U->I_WID(ap_var_for_const1);
    fc_IN_r_m_axi_U->I_WUSER(ap_var_for_const1);
    fc_IN_r_m_axi_U->I_WLAST(ap_var_for_const6);
    fc_IN_r_m_axi_U->I_WSTRB(ap_var_for_const4);
    fc_IN_r_m_axi_U->I_BVALID(IN_r_BVALID);
    fc_IN_r_m_axi_U->I_BREADY(ap_var_for_const6);
    fc_IN_r_m_axi_U->I_BRESP(IN_r_BRESP);
    fc_IN_r_m_axi_U->I_BID(IN_r_BID);
    fc_IN_r_m_axi_U->I_BUSER(IN_r_BUSER);
    fc_W_m_axi_U = new fc_W_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_W_ID_WIDTH,C_M_AXI_W_ADDR_WIDTH,C_M_AXI_W_DATA_WIDTH,C_M_AXI_W_AWUSER_WIDTH,C_M_AXI_W_ARUSER_WIDTH,C_M_AXI_W_WUSER_WIDTH,C_M_AXI_W_RUSER_WIDTH,C_M_AXI_W_BUSER_WIDTH,C_M_AXI_W_USER_VALUE,C_M_AXI_W_PROT_VALUE,C_M_AXI_W_CACHE_VALUE>("fc_W_m_axi_U");
    fc_W_m_axi_U->AWVALID(m_axi_W_AWVALID);
    fc_W_m_axi_U->AWREADY(m_axi_W_AWREADY);
    fc_W_m_axi_U->AWADDR(m_axi_W_AWADDR);
    fc_W_m_axi_U->AWID(m_axi_W_AWID);
    fc_W_m_axi_U->AWLEN(m_axi_W_AWLEN);
    fc_W_m_axi_U->AWSIZE(m_axi_W_AWSIZE);
    fc_W_m_axi_U->AWBURST(m_axi_W_AWBURST);
    fc_W_m_axi_U->AWLOCK(m_axi_W_AWLOCK);
    fc_W_m_axi_U->AWCACHE(m_axi_W_AWCACHE);
    fc_W_m_axi_U->AWPROT(m_axi_W_AWPROT);
    fc_W_m_axi_U->AWQOS(m_axi_W_AWQOS);
    fc_W_m_axi_U->AWREGION(m_axi_W_AWREGION);
    fc_W_m_axi_U->AWUSER(m_axi_W_AWUSER);
    fc_W_m_axi_U->WVALID(m_axi_W_WVALID);
    fc_W_m_axi_U->WREADY(m_axi_W_WREADY);
    fc_W_m_axi_U->WDATA(m_axi_W_WDATA);
    fc_W_m_axi_U->WSTRB(m_axi_W_WSTRB);
    fc_W_m_axi_U->WLAST(m_axi_W_WLAST);
    fc_W_m_axi_U->WID(m_axi_W_WID);
    fc_W_m_axi_U->WUSER(m_axi_W_WUSER);
    fc_W_m_axi_U->ARVALID(m_axi_W_ARVALID);
    fc_W_m_axi_U->ARREADY(m_axi_W_ARREADY);
    fc_W_m_axi_U->ARADDR(m_axi_W_ARADDR);
    fc_W_m_axi_U->ARID(m_axi_W_ARID);
    fc_W_m_axi_U->ARLEN(m_axi_W_ARLEN);
    fc_W_m_axi_U->ARSIZE(m_axi_W_ARSIZE);
    fc_W_m_axi_U->ARBURST(m_axi_W_ARBURST);
    fc_W_m_axi_U->ARLOCK(m_axi_W_ARLOCK);
    fc_W_m_axi_U->ARCACHE(m_axi_W_ARCACHE);
    fc_W_m_axi_U->ARPROT(m_axi_W_ARPROT);
    fc_W_m_axi_U->ARQOS(m_axi_W_ARQOS);
    fc_W_m_axi_U->ARREGION(m_axi_W_ARREGION);
    fc_W_m_axi_U->ARUSER(m_axi_W_ARUSER);
    fc_W_m_axi_U->RVALID(m_axi_W_RVALID);
    fc_W_m_axi_U->RREADY(m_axi_W_RREADY);
    fc_W_m_axi_U->RDATA(m_axi_W_RDATA);
    fc_W_m_axi_U->RLAST(m_axi_W_RLAST);
    fc_W_m_axi_U->RID(m_axi_W_RID);
    fc_W_m_axi_U->RUSER(m_axi_W_RUSER);
    fc_W_m_axi_U->RRESP(m_axi_W_RRESP);
    fc_W_m_axi_U->BVALID(m_axi_W_BVALID);
    fc_W_m_axi_U->BREADY(m_axi_W_BREADY);
    fc_W_m_axi_U->BRESP(m_axi_W_BRESP);
    fc_W_m_axi_U->BID(m_axi_W_BID);
    fc_W_m_axi_U->BUSER(m_axi_W_BUSER);
    fc_W_m_axi_U->ACLK(ap_clk);
    fc_W_m_axi_U->ARESET(ap_rst_n_inv);
    fc_W_m_axi_U->ACLK_EN(ap_var_for_const0);
    fc_W_m_axi_U->I_ARVALID(W_ARVALID);
    fc_W_m_axi_U->I_ARREADY(W_ARREADY);
    fc_W_m_axi_U->I_ARADDR(W_addr_reg_641);
    fc_W_m_axi_U->I_ARID(ap_var_for_const1);
    fc_W_m_axi_U->I_ARLEN(ap_var_for_const9);
    fc_W_m_axi_U->I_ARSIZE(ap_var_for_const3);
    fc_W_m_axi_U->I_ARLOCK(ap_var_for_const4);
    fc_W_m_axi_U->I_ARCACHE(ap_var_for_const5);
    fc_W_m_axi_U->I_ARQOS(ap_var_for_const5);
    fc_W_m_axi_U->I_ARPROT(ap_var_for_const3);
    fc_W_m_axi_U->I_ARUSER(ap_var_for_const1);
    fc_W_m_axi_U->I_ARBURST(ap_var_for_const4);
    fc_W_m_axi_U->I_ARREGION(ap_var_for_const5);
    fc_W_m_axi_U->I_RVALID(W_RVALID);
    fc_W_m_axi_U->I_RREADY(W_RREADY);
    fc_W_m_axi_U->I_RDATA(W_RDATA);
    fc_W_m_axi_U->I_RID(W_RID);
    fc_W_m_axi_U->I_RUSER(W_RUSER);
    fc_W_m_axi_U->I_RRESP(W_RRESP);
    fc_W_m_axi_U->I_RLAST(W_RLAST);
    fc_W_m_axi_U->I_AWVALID(ap_var_for_const6);
    fc_W_m_axi_U->I_AWREADY(W_AWREADY);
    fc_W_m_axi_U->I_AWADDR(ap_var_for_const7);
    fc_W_m_axi_U->I_AWID(ap_var_for_const1);
    fc_W_m_axi_U->I_AWLEN(ap_var_for_const7);
    fc_W_m_axi_U->I_AWSIZE(ap_var_for_const3);
    fc_W_m_axi_U->I_AWLOCK(ap_var_for_const4);
    fc_W_m_axi_U->I_AWCACHE(ap_var_for_const5);
    fc_W_m_axi_U->I_AWQOS(ap_var_for_const5);
    fc_W_m_axi_U->I_AWPROT(ap_var_for_const3);
    fc_W_m_axi_U->I_AWUSER(ap_var_for_const1);
    fc_W_m_axi_U->I_AWBURST(ap_var_for_const4);
    fc_W_m_axi_U->I_AWREGION(ap_var_for_const5);
    fc_W_m_axi_U->I_WVALID(ap_var_for_const6);
    fc_W_m_axi_U->I_WREADY(W_WREADY);
    fc_W_m_axi_U->I_WDATA(ap_var_for_const8);
    fc_W_m_axi_U->I_WID(ap_var_for_const1);
    fc_W_m_axi_U->I_WUSER(ap_var_for_const1);
    fc_W_m_axi_U->I_WLAST(ap_var_for_const6);
    fc_W_m_axi_U->I_WSTRB(ap_var_for_const4);
    fc_W_m_axi_U->I_BVALID(W_BVALID);
    fc_W_m_axi_U->I_BREADY(ap_var_for_const6);
    fc_W_m_axi_U->I_BRESP(W_BRESP);
    fc_W_m_axi_U->I_BID(W_BID);
    fc_W_m_axi_U->I_BUSER(W_BUSER);
    fc_B_m_axi_U = new fc_B_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_B_ID_WIDTH,C_M_AXI_B_ADDR_WIDTH,C_M_AXI_B_DATA_WIDTH,C_M_AXI_B_AWUSER_WIDTH,C_M_AXI_B_ARUSER_WIDTH,C_M_AXI_B_WUSER_WIDTH,C_M_AXI_B_RUSER_WIDTH,C_M_AXI_B_BUSER_WIDTH,C_M_AXI_B_USER_VALUE,C_M_AXI_B_PROT_VALUE,C_M_AXI_B_CACHE_VALUE>("fc_B_m_axi_U");
    fc_B_m_axi_U->AWVALID(m_axi_B_AWVALID);
    fc_B_m_axi_U->AWREADY(m_axi_B_AWREADY);
    fc_B_m_axi_U->AWADDR(m_axi_B_AWADDR);
    fc_B_m_axi_U->AWID(m_axi_B_AWID);
    fc_B_m_axi_U->AWLEN(m_axi_B_AWLEN);
    fc_B_m_axi_U->AWSIZE(m_axi_B_AWSIZE);
    fc_B_m_axi_U->AWBURST(m_axi_B_AWBURST);
    fc_B_m_axi_U->AWLOCK(m_axi_B_AWLOCK);
    fc_B_m_axi_U->AWCACHE(m_axi_B_AWCACHE);
    fc_B_m_axi_U->AWPROT(m_axi_B_AWPROT);
    fc_B_m_axi_U->AWQOS(m_axi_B_AWQOS);
    fc_B_m_axi_U->AWREGION(m_axi_B_AWREGION);
    fc_B_m_axi_U->AWUSER(m_axi_B_AWUSER);
    fc_B_m_axi_U->WVALID(m_axi_B_WVALID);
    fc_B_m_axi_U->WREADY(m_axi_B_WREADY);
    fc_B_m_axi_U->WDATA(m_axi_B_WDATA);
    fc_B_m_axi_U->WSTRB(m_axi_B_WSTRB);
    fc_B_m_axi_U->WLAST(m_axi_B_WLAST);
    fc_B_m_axi_U->WID(m_axi_B_WID);
    fc_B_m_axi_U->WUSER(m_axi_B_WUSER);
    fc_B_m_axi_U->ARVALID(m_axi_B_ARVALID);
    fc_B_m_axi_U->ARREADY(m_axi_B_ARREADY);
    fc_B_m_axi_U->ARADDR(m_axi_B_ARADDR);
    fc_B_m_axi_U->ARID(m_axi_B_ARID);
    fc_B_m_axi_U->ARLEN(m_axi_B_ARLEN);
    fc_B_m_axi_U->ARSIZE(m_axi_B_ARSIZE);
    fc_B_m_axi_U->ARBURST(m_axi_B_ARBURST);
    fc_B_m_axi_U->ARLOCK(m_axi_B_ARLOCK);
    fc_B_m_axi_U->ARCACHE(m_axi_B_ARCACHE);
    fc_B_m_axi_U->ARPROT(m_axi_B_ARPROT);
    fc_B_m_axi_U->ARQOS(m_axi_B_ARQOS);
    fc_B_m_axi_U->ARREGION(m_axi_B_ARREGION);
    fc_B_m_axi_U->ARUSER(m_axi_B_ARUSER);
    fc_B_m_axi_U->RVALID(m_axi_B_RVALID);
    fc_B_m_axi_U->RREADY(m_axi_B_RREADY);
    fc_B_m_axi_U->RDATA(m_axi_B_RDATA);
    fc_B_m_axi_U->RLAST(m_axi_B_RLAST);
    fc_B_m_axi_U->RID(m_axi_B_RID);
    fc_B_m_axi_U->RUSER(m_axi_B_RUSER);
    fc_B_m_axi_U->RRESP(m_axi_B_RRESP);
    fc_B_m_axi_U->BVALID(m_axi_B_BVALID);
    fc_B_m_axi_U->BREADY(m_axi_B_BREADY);
    fc_B_m_axi_U->BRESP(m_axi_B_BRESP);
    fc_B_m_axi_U->BID(m_axi_B_BID);
    fc_B_m_axi_U->BUSER(m_axi_B_BUSER);
    fc_B_m_axi_U->ACLK(ap_clk);
    fc_B_m_axi_U->ARESET(ap_rst_n_inv);
    fc_B_m_axi_U->ACLK_EN(ap_var_for_const0);
    fc_B_m_axi_U->I_ARVALID(B_ARVALID);
    fc_B_m_axi_U->I_ARREADY(B_ARREADY);
    fc_B_m_axi_U->I_ARADDR(B_addr_reg_635);
    fc_B_m_axi_U->I_ARID(ap_var_for_const1);
    fc_B_m_axi_U->I_ARLEN(ap_var_for_const10);
    fc_B_m_axi_U->I_ARSIZE(ap_var_for_const3);
    fc_B_m_axi_U->I_ARLOCK(ap_var_for_const4);
    fc_B_m_axi_U->I_ARCACHE(ap_var_for_const5);
    fc_B_m_axi_U->I_ARQOS(ap_var_for_const5);
    fc_B_m_axi_U->I_ARPROT(ap_var_for_const3);
    fc_B_m_axi_U->I_ARUSER(ap_var_for_const1);
    fc_B_m_axi_U->I_ARBURST(ap_var_for_const4);
    fc_B_m_axi_U->I_ARREGION(ap_var_for_const5);
    fc_B_m_axi_U->I_RVALID(B_RVALID);
    fc_B_m_axi_U->I_RREADY(B_RREADY);
    fc_B_m_axi_U->I_RDATA(B_RDATA);
    fc_B_m_axi_U->I_RID(B_RID);
    fc_B_m_axi_U->I_RUSER(B_RUSER);
    fc_B_m_axi_U->I_RRESP(B_RRESP);
    fc_B_m_axi_U->I_RLAST(B_RLAST);
    fc_B_m_axi_U->I_AWVALID(ap_var_for_const6);
    fc_B_m_axi_U->I_AWREADY(B_AWREADY);
    fc_B_m_axi_U->I_AWADDR(ap_var_for_const7);
    fc_B_m_axi_U->I_AWID(ap_var_for_const1);
    fc_B_m_axi_U->I_AWLEN(ap_var_for_const7);
    fc_B_m_axi_U->I_AWSIZE(ap_var_for_const3);
    fc_B_m_axi_U->I_AWLOCK(ap_var_for_const4);
    fc_B_m_axi_U->I_AWCACHE(ap_var_for_const5);
    fc_B_m_axi_U->I_AWQOS(ap_var_for_const5);
    fc_B_m_axi_U->I_AWPROT(ap_var_for_const3);
    fc_B_m_axi_U->I_AWUSER(ap_var_for_const1);
    fc_B_m_axi_U->I_AWBURST(ap_var_for_const4);
    fc_B_m_axi_U->I_AWREGION(ap_var_for_const5);
    fc_B_m_axi_U->I_WVALID(ap_var_for_const6);
    fc_B_m_axi_U->I_WREADY(B_WREADY);
    fc_B_m_axi_U->I_WDATA(ap_var_for_const8);
    fc_B_m_axi_U->I_WID(ap_var_for_const1);
    fc_B_m_axi_U->I_WUSER(ap_var_for_const1);
    fc_B_m_axi_U->I_WLAST(ap_var_for_const6);
    fc_B_m_axi_U->I_WSTRB(ap_var_for_const4);
    fc_B_m_axi_U->I_BVALID(B_BVALID);
    fc_B_m_axi_U->I_BREADY(ap_var_for_const6);
    fc_B_m_axi_U->I_BRESP(B_BRESP);
    fc_B_m_axi_U->I_BID(B_BID);
    fc_B_m_axi_U->I_BUSER(B_BUSER);
    fc_OUT_r_m_axi_U = new fc_OUT_r_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>("fc_OUT_r_m_axi_U");
    fc_OUT_r_m_axi_U->AWVALID(m_axi_OUT_r_AWVALID);
    fc_OUT_r_m_axi_U->AWREADY(m_axi_OUT_r_AWREADY);
    fc_OUT_r_m_axi_U->AWADDR(m_axi_OUT_r_AWADDR);
    fc_OUT_r_m_axi_U->AWID(m_axi_OUT_r_AWID);
    fc_OUT_r_m_axi_U->AWLEN(m_axi_OUT_r_AWLEN);
    fc_OUT_r_m_axi_U->AWSIZE(m_axi_OUT_r_AWSIZE);
    fc_OUT_r_m_axi_U->AWBURST(m_axi_OUT_r_AWBURST);
    fc_OUT_r_m_axi_U->AWLOCK(m_axi_OUT_r_AWLOCK);
    fc_OUT_r_m_axi_U->AWCACHE(m_axi_OUT_r_AWCACHE);
    fc_OUT_r_m_axi_U->AWPROT(m_axi_OUT_r_AWPROT);
    fc_OUT_r_m_axi_U->AWQOS(m_axi_OUT_r_AWQOS);
    fc_OUT_r_m_axi_U->AWREGION(m_axi_OUT_r_AWREGION);
    fc_OUT_r_m_axi_U->AWUSER(m_axi_OUT_r_AWUSER);
    fc_OUT_r_m_axi_U->WVALID(m_axi_OUT_r_WVALID);
    fc_OUT_r_m_axi_U->WREADY(m_axi_OUT_r_WREADY);
    fc_OUT_r_m_axi_U->WDATA(m_axi_OUT_r_WDATA);
    fc_OUT_r_m_axi_U->WSTRB(m_axi_OUT_r_WSTRB);
    fc_OUT_r_m_axi_U->WLAST(m_axi_OUT_r_WLAST);
    fc_OUT_r_m_axi_U->WID(m_axi_OUT_r_WID);
    fc_OUT_r_m_axi_U->WUSER(m_axi_OUT_r_WUSER);
    fc_OUT_r_m_axi_U->ARVALID(m_axi_OUT_r_ARVALID);
    fc_OUT_r_m_axi_U->ARREADY(m_axi_OUT_r_ARREADY);
    fc_OUT_r_m_axi_U->ARADDR(m_axi_OUT_r_ARADDR);
    fc_OUT_r_m_axi_U->ARID(m_axi_OUT_r_ARID);
    fc_OUT_r_m_axi_U->ARLEN(m_axi_OUT_r_ARLEN);
    fc_OUT_r_m_axi_U->ARSIZE(m_axi_OUT_r_ARSIZE);
    fc_OUT_r_m_axi_U->ARBURST(m_axi_OUT_r_ARBURST);
    fc_OUT_r_m_axi_U->ARLOCK(m_axi_OUT_r_ARLOCK);
    fc_OUT_r_m_axi_U->ARCACHE(m_axi_OUT_r_ARCACHE);
    fc_OUT_r_m_axi_U->ARPROT(m_axi_OUT_r_ARPROT);
    fc_OUT_r_m_axi_U->ARQOS(m_axi_OUT_r_ARQOS);
    fc_OUT_r_m_axi_U->ARREGION(m_axi_OUT_r_ARREGION);
    fc_OUT_r_m_axi_U->ARUSER(m_axi_OUT_r_ARUSER);
    fc_OUT_r_m_axi_U->RVALID(m_axi_OUT_r_RVALID);
    fc_OUT_r_m_axi_U->RREADY(m_axi_OUT_r_RREADY);
    fc_OUT_r_m_axi_U->RDATA(m_axi_OUT_r_RDATA);
    fc_OUT_r_m_axi_U->RLAST(m_axi_OUT_r_RLAST);
    fc_OUT_r_m_axi_U->RID(m_axi_OUT_r_RID);
    fc_OUT_r_m_axi_U->RUSER(m_axi_OUT_r_RUSER);
    fc_OUT_r_m_axi_U->RRESP(m_axi_OUT_r_RRESP);
    fc_OUT_r_m_axi_U->BVALID(m_axi_OUT_r_BVALID);
    fc_OUT_r_m_axi_U->BREADY(m_axi_OUT_r_BREADY);
    fc_OUT_r_m_axi_U->BRESP(m_axi_OUT_r_BRESP);
    fc_OUT_r_m_axi_U->BID(m_axi_OUT_r_BID);
    fc_OUT_r_m_axi_U->BUSER(m_axi_OUT_r_BUSER);
    fc_OUT_r_m_axi_U->ACLK(ap_clk);
    fc_OUT_r_m_axi_U->ARESET(ap_rst_n_inv);
    fc_OUT_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    fc_OUT_r_m_axi_U->I_ARVALID(ap_var_for_const6);
    fc_OUT_r_m_axi_U->I_ARREADY(OUT_r_ARREADY);
    fc_OUT_r_m_axi_U->I_ARADDR(ap_var_for_const7);
    fc_OUT_r_m_axi_U->I_ARID(ap_var_for_const1);
    fc_OUT_r_m_axi_U->I_ARLEN(ap_var_for_const7);
    fc_OUT_r_m_axi_U->I_ARSIZE(ap_var_for_const3);
    fc_OUT_r_m_axi_U->I_ARLOCK(ap_var_for_const4);
    fc_OUT_r_m_axi_U->I_ARCACHE(ap_var_for_const5);
    fc_OUT_r_m_axi_U->I_ARQOS(ap_var_for_const5);
    fc_OUT_r_m_axi_U->I_ARPROT(ap_var_for_const3);
    fc_OUT_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    fc_OUT_r_m_axi_U->I_ARBURST(ap_var_for_const4);
    fc_OUT_r_m_axi_U->I_ARREGION(ap_var_for_const5);
    fc_OUT_r_m_axi_U->I_RVALID(OUT_r_RVALID);
    fc_OUT_r_m_axi_U->I_RREADY(ap_var_for_const6);
    fc_OUT_r_m_axi_U->I_RDATA(OUT_r_RDATA);
    fc_OUT_r_m_axi_U->I_RID(OUT_r_RID);
    fc_OUT_r_m_axi_U->I_RUSER(OUT_r_RUSER);
    fc_OUT_r_m_axi_U->I_RRESP(OUT_r_RRESP);
    fc_OUT_r_m_axi_U->I_RLAST(OUT_r_RLAST);
    fc_OUT_r_m_axi_U->I_AWVALID(OUT_r_AWVALID);
    fc_OUT_r_m_axi_U->I_AWREADY(OUT_r_AWREADY);
    fc_OUT_r_m_axi_U->I_AWADDR(OUT_addr_reg_629);
    fc_OUT_r_m_axi_U->I_AWID(ap_var_for_const1);
    fc_OUT_r_m_axi_U->I_AWLEN(ap_var_for_const10);
    fc_OUT_r_m_axi_U->I_AWSIZE(ap_var_for_const3);
    fc_OUT_r_m_axi_U->I_AWLOCK(ap_var_for_const4);
    fc_OUT_r_m_axi_U->I_AWCACHE(ap_var_for_const5);
    fc_OUT_r_m_axi_U->I_AWQOS(ap_var_for_const5);
    fc_OUT_r_m_axi_U->I_AWPROT(ap_var_for_const3);
    fc_OUT_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    fc_OUT_r_m_axi_U->I_AWBURST(ap_var_for_const4);
    fc_OUT_r_m_axi_U->I_AWREGION(ap_var_for_const5);
    fc_OUT_r_m_axi_U->I_WVALID(OUT_r_WVALID);
    fc_OUT_r_m_axi_U->I_WREADY(OUT_r_WREADY);
    fc_OUT_r_m_axi_U->I_WDATA(p_Val2_s_reg_233);
    fc_OUT_r_m_axi_U->I_WID(ap_var_for_const1);
    fc_OUT_r_m_axi_U->I_WUSER(ap_var_for_const1);
    fc_OUT_r_m_axi_U->I_WLAST(ap_var_for_const6);
    fc_OUT_r_m_axi_U->I_WSTRB(ap_var_for_const11);
    fc_OUT_r_m_axi_U->I_BVALID(OUT_r_BVALID);
    fc_OUT_r_m_axi_U->I_BREADY(OUT_r_BREADY);
    fc_OUT_r_m_axi_U->I_BRESP(OUT_r_BRESP);
    fc_OUT_r_m_axi_U->I_BID(OUT_r_BID);
    fc_OUT_r_m_axi_U->I_BUSER(OUT_r_BUSER);
    fc_mul_mul_16s_16bkb_U1 = new fc_mul_mul_16s_16bkb<1,1,16,16,32>("fc_mul_mul_16s_16bkb_U1");
    fc_mul_mul_16s_16bkb_U1->din0(IN_addr_read_reg_674);
    fc_mul_mul_16s_16bkb_U1->din1(W_addr_read_reg_679);
    fc_mul_mul_16s_16bkb_U1->dout(r_V_2_fu_622_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_B_RREADY);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( B_RVALID );

    SC_METHOD(thread_B_blk_n_AR);
    sensitive << ( m_axi_B_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_B_blk_n_R);
    sensitive << ( m_axi_B_RVALID );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_IN_r_ARVALID);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln10_fu_335_p2 );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_IN_r_RREADY);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( W_RVALID );
    sensitive << ( ap_block_state16_io );

    SC_METHOD(thread_IN_r_blk_n_AR);
    sensitive << ( m_axi_IN_r_ARREADY );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln10_fu_335_p2 );

    SC_METHOD(thread_IN_r_blk_n_R);
    sensitive << ( m_axi_IN_r_RVALID );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );

    SC_METHOD(thread_OUT_r_AWVALID);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( OUT_r_AWREADY );

    SC_METHOD(thread_OUT_r_BREADY);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_OUT_r_WVALID);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( W_RVALID );
    sensitive << ( ap_block_state16_io );

    SC_METHOD(thread_OUT_r_blk_n_AW);
    sensitive << ( m_axi_OUT_r_AWREADY );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_OUT_r_blk_n_B);
    sensitive << ( m_axi_OUT_r_BVALID );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_OUT_r_blk_n_W);
    sensitive << ( m_axi_OUT_r_WREADY );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );

    SC_METHOD(thread_Range1_all_ones_fu_478_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_2_fu_468_p4 );

    SC_METHOD(thread_Range1_all_zeros_fu_484_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_2_fu_468_p4 );

    SC_METHOD(thread_Range2_all_ones_fu_462_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_1_fu_452_p4 );

    SC_METHOD(thread_W_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_W_RREADY);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( W_RVALID );
    sensitive << ( ap_block_state16_io );

    SC_METHOD(thread_W_blk_n_AR);
    sensitive << ( m_axi_W_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_W_blk_n_R);
    sensitive << ( m_axi_W_RVALID );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );

    SC_METHOD(thread_and_ln779_fu_512_p2);
    sensitive << ( Range2_all_ones_fu_462_p2 );
    sensitive << ( xor_ln779_fu_506_p2 );

    SC_METHOD(thread_and_ln781_fu_526_p2);
    sensitive << ( carry_1_fu_438_p2 );
    sensitive << ( Range1_all_ones_fu_478_p2 );

    SC_METHOD(thread_and_ln786_fu_556_p2);
    sensitive << ( p_Result_2_fu_444_p3 );
    sensitive << ( deleted_ones_fu_518_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state16);
    sensitive << ( icmp_ln12_fu_347_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( W_RVALID );

    SC_METHOD(thread_ap_block_state16_io);
    sensitive << ( icmp_ln12_fu_347_p2 );
    sensitive << ( OUT_r_WREADY );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( W_ARREADY );
    sensitive << ( B_ARREADY );

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( icmp_ln10_fu_335_p2 );
    sensitive << ( IN_r_ARREADY );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( OUT_r_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bias_V5_fu_275_p4);
    sensitive << ( bias_V );

    SC_METHOD(thread_carry_1_fu_438_p2);
    sensitive << ( p_Result_1_fu_407_p3 );
    sensitive << ( xor_ln416_fu_432_p2 );

    SC_METHOD(thread_deleted_ones_fu_518_p3);
    sensitive << ( carry_1_fu_438_p2 );
    sensitive << ( Range1_all_ones_fu_478_p2 );
    sensitive << ( and_ln779_fu_512_p2 );

    SC_METHOD(thread_deleted_zeros_fu_490_p3);
    sensitive << ( carry_1_fu_438_p2 );
    sensitive << ( Range1_all_ones_fu_478_p2 );
    sensitive << ( Range1_all_zeros_fu_484_p2 );

    SC_METHOD(thread_empty_4_fu_285_p1);
    sensitive << ( bias_V5_fu_275_p4 );

    SC_METHOD(thread_empty_5_fu_305_p1);
    sensitive << ( weight_V3_fu_295_p4 );

    SC_METHOD(thread_empty_6_fu_325_p1);
    sensitive << ( in_V1_fu_315_p4 );

    SC_METHOD(thread_empty_fu_265_p1);
    sensitive << ( out_V7_fu_255_p4 );

    SC_METHOD(thread_i_fu_341_p2);
    sensitive << ( i_0_reg_222 );

    SC_METHOD(thread_icmp_ln10_fu_335_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_io );
    sensitive << ( i_0_reg_222 );

    SC_METHOD(thread_icmp_ln12_fu_347_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( W_RVALID );
    sensitive << ( ap_block_state16_io );
    sensitive << ( j_0_reg_244 );

    SC_METHOD(thread_in_V1_fu_315_p4);
    sensitive << ( in_V );

    SC_METHOD(thread_j_fu_353_p2);
    sensitive << ( j_0_reg_244 );

    SC_METHOD(thread_lhs_V_fu_372_p3);
    sensitive << ( p_Val2_s_reg_233 );

    SC_METHOD(thread_or_ln340_1_fu_592_p2);
    sensitive << ( and_ln781_fu_526_p2 );
    sensitive << ( or_ln340_2_fu_586_p2 );

    SC_METHOD(thread_or_ln340_2_fu_586_p2);
    sensitive << ( xor_ln785_1_fu_544_p2 );
    sensitive << ( and_ln786_fu_556_p2 );

    SC_METHOD(thread_or_ln340_fu_580_p2);
    sensitive << ( underflow_fu_574_p2 );
    sensitive << ( overflow_fu_550_p2 );

    SC_METHOD(thread_or_ln785_fu_538_p2);
    sensitive << ( p_Result_2_fu_444_p3 );
    sensitive << ( xor_ln785_fu_532_p2 );

    SC_METHOD(thread_or_ln786_fu_562_p2);
    sensitive << ( and_ln781_fu_526_p2 );
    sensitive << ( and_ln786_fu_556_p2 );

    SC_METHOD(thread_out_V7_fu_255_p4);
    sensitive << ( out_V );

    SC_METHOD(thread_overflow_fu_550_p2);
    sensitive << ( or_ln785_fu_538_p2 );
    sensitive << ( xor_ln785_1_fu_544_p2 );

    SC_METHOD(thread_p_Result_1_fu_407_p3);
    sensitive << ( ret_V_fu_384_p2 );

    SC_METHOD(thread_p_Result_2_fu_444_p3);
    sensitive << ( tmp_V_4_fu_418_p2 );

    SC_METHOD(thread_p_Result_s_fu_389_p3);
    sensitive << ( ret_V_fu_384_p2 );

    SC_METHOD(thread_ret_V_fu_384_p2);
    sensitive << ( r_V_2_reg_684 );
    sensitive << ( sext_ln728_fu_380_p1 );

    SC_METHOD(thread_select_ln340_1_fu_614_p3);
    sensitive << ( or_ln340_1_fu_592_p2 );
    sensitive << ( select_ln340_fu_598_p3 );
    sensitive << ( select_ln388_fu_606_p3 );

    SC_METHOD(thread_select_ln340_fu_598_p3);
    sensitive << ( tmp_V_4_fu_418_p2 );
    sensitive << ( or_ln340_fu_580_p2 );

    SC_METHOD(thread_select_ln388_fu_606_p3);
    sensitive << ( tmp_V_4_fu_418_p2 );
    sensitive << ( underflow_fu_574_p2 );

    SC_METHOD(thread_sext_ln728_fu_380_p1);
    sensitive << ( lhs_V_fu_372_p3 );

    SC_METHOD(thread_tmp_1_fu_452_p4);
    sensitive << ( ret_V_fu_384_p2 );

    SC_METHOD(thread_tmp_2_fu_468_p4);
    sensitive << ( ret_V_fu_384_p2 );

    SC_METHOD(thread_tmp_3_fu_424_p3);
    sensitive << ( tmp_V_4_fu_418_p2 );

    SC_METHOD(thread_tmp_5_fu_498_p3);
    sensitive << ( ret_V_fu_384_p2 );

    SC_METHOD(thread_tmp_V_3_fu_397_p4);
    sensitive << ( ret_V_fu_384_p2 );

    SC_METHOD(thread_tmp_V_4_fu_418_p2);
    sensitive << ( tmp_V_3_fu_397_p4 );
    sensitive << ( zext_ln415_fu_415_p1 );

    SC_METHOD(thread_underflow_fu_574_p2);
    sensitive << ( p_Result_s_fu_389_p3 );
    sensitive << ( xor_ln786_fu_568_p2 );

    SC_METHOD(thread_weight_V3_fu_295_p4);
    sensitive << ( weight_V );

    SC_METHOD(thread_xor_ln416_fu_432_p2);
    sensitive << ( tmp_3_fu_424_p3 );

    SC_METHOD(thread_xor_ln779_fu_506_p2);
    sensitive << ( tmp_5_fu_498_p3 );

    SC_METHOD(thread_xor_ln785_1_fu_544_p2);
    sensitive << ( p_Result_s_fu_389_p3 );

    SC_METHOD(thread_xor_ln785_fu_532_p2);
    sensitive << ( deleted_zeros_fu_490_p3 );

    SC_METHOD(thread_xor_ln786_fu_568_p2);
    sensitive << ( or_ln786_fu_562_p2 );

    SC_METHOD(thread_zext_ln415_fu_415_p1);
    sensitive << ( tmp_reg_689 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln10_fu_335_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln12_fu_347_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( IN_r_RVALID );
    sensitive << ( W_RVALID );
    sensitive << ( B_RVALID );
    sensitive << ( OUT_r_AWREADY );
    sensitive << ( OUT_r_BVALID );
    sensitive << ( ap_block_state9_io );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_block_state2_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const11);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "0000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_IN_r_AWVALID, "(port)m_axi_IN_r_AWVALID");
    sc_trace(mVcdFile, m_axi_IN_r_AWREADY, "(port)m_axi_IN_r_AWREADY");
    sc_trace(mVcdFile, m_axi_IN_r_AWADDR, "(port)m_axi_IN_r_AWADDR");
    sc_trace(mVcdFile, m_axi_IN_r_AWID, "(port)m_axi_IN_r_AWID");
    sc_trace(mVcdFile, m_axi_IN_r_AWLEN, "(port)m_axi_IN_r_AWLEN");
    sc_trace(mVcdFile, m_axi_IN_r_AWSIZE, "(port)m_axi_IN_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_IN_r_AWBURST, "(port)m_axi_IN_r_AWBURST");
    sc_trace(mVcdFile, m_axi_IN_r_AWLOCK, "(port)m_axi_IN_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_IN_r_AWCACHE, "(port)m_axi_IN_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_IN_r_AWPROT, "(port)m_axi_IN_r_AWPROT");
    sc_trace(mVcdFile, m_axi_IN_r_AWQOS, "(port)m_axi_IN_r_AWQOS");
    sc_trace(mVcdFile, m_axi_IN_r_AWREGION, "(port)m_axi_IN_r_AWREGION");
    sc_trace(mVcdFile, m_axi_IN_r_AWUSER, "(port)m_axi_IN_r_AWUSER");
    sc_trace(mVcdFile, m_axi_IN_r_WVALID, "(port)m_axi_IN_r_WVALID");
    sc_trace(mVcdFile, m_axi_IN_r_WREADY, "(port)m_axi_IN_r_WREADY");
    sc_trace(mVcdFile, m_axi_IN_r_WDATA, "(port)m_axi_IN_r_WDATA");
    sc_trace(mVcdFile, m_axi_IN_r_WSTRB, "(port)m_axi_IN_r_WSTRB");
    sc_trace(mVcdFile, m_axi_IN_r_WLAST, "(port)m_axi_IN_r_WLAST");
    sc_trace(mVcdFile, m_axi_IN_r_WID, "(port)m_axi_IN_r_WID");
    sc_trace(mVcdFile, m_axi_IN_r_WUSER, "(port)m_axi_IN_r_WUSER");
    sc_trace(mVcdFile, m_axi_IN_r_ARVALID, "(port)m_axi_IN_r_ARVALID");
    sc_trace(mVcdFile, m_axi_IN_r_ARREADY, "(port)m_axi_IN_r_ARREADY");
    sc_trace(mVcdFile, m_axi_IN_r_ARADDR, "(port)m_axi_IN_r_ARADDR");
    sc_trace(mVcdFile, m_axi_IN_r_ARID, "(port)m_axi_IN_r_ARID");
    sc_trace(mVcdFile, m_axi_IN_r_ARLEN, "(port)m_axi_IN_r_ARLEN");
    sc_trace(mVcdFile, m_axi_IN_r_ARSIZE, "(port)m_axi_IN_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_IN_r_ARBURST, "(port)m_axi_IN_r_ARBURST");
    sc_trace(mVcdFile, m_axi_IN_r_ARLOCK, "(port)m_axi_IN_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_IN_r_ARCACHE, "(port)m_axi_IN_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_IN_r_ARPROT, "(port)m_axi_IN_r_ARPROT");
    sc_trace(mVcdFile, m_axi_IN_r_ARQOS, "(port)m_axi_IN_r_ARQOS");
    sc_trace(mVcdFile, m_axi_IN_r_ARREGION, "(port)m_axi_IN_r_ARREGION");
    sc_trace(mVcdFile, m_axi_IN_r_ARUSER, "(port)m_axi_IN_r_ARUSER");
    sc_trace(mVcdFile, m_axi_IN_r_RVALID, "(port)m_axi_IN_r_RVALID");
    sc_trace(mVcdFile, m_axi_IN_r_RREADY, "(port)m_axi_IN_r_RREADY");
    sc_trace(mVcdFile, m_axi_IN_r_RDATA, "(port)m_axi_IN_r_RDATA");
    sc_trace(mVcdFile, m_axi_IN_r_RLAST, "(port)m_axi_IN_r_RLAST");
    sc_trace(mVcdFile, m_axi_IN_r_RID, "(port)m_axi_IN_r_RID");
    sc_trace(mVcdFile, m_axi_IN_r_RUSER, "(port)m_axi_IN_r_RUSER");
    sc_trace(mVcdFile, m_axi_IN_r_RRESP, "(port)m_axi_IN_r_RRESP");
    sc_trace(mVcdFile, m_axi_IN_r_BVALID, "(port)m_axi_IN_r_BVALID");
    sc_trace(mVcdFile, m_axi_IN_r_BREADY, "(port)m_axi_IN_r_BREADY");
    sc_trace(mVcdFile, m_axi_IN_r_BRESP, "(port)m_axi_IN_r_BRESP");
    sc_trace(mVcdFile, m_axi_IN_r_BID, "(port)m_axi_IN_r_BID");
    sc_trace(mVcdFile, m_axi_IN_r_BUSER, "(port)m_axi_IN_r_BUSER");
    sc_trace(mVcdFile, m_axi_W_AWVALID, "(port)m_axi_W_AWVALID");
    sc_trace(mVcdFile, m_axi_W_AWREADY, "(port)m_axi_W_AWREADY");
    sc_trace(mVcdFile, m_axi_W_AWADDR, "(port)m_axi_W_AWADDR");
    sc_trace(mVcdFile, m_axi_W_AWID, "(port)m_axi_W_AWID");
    sc_trace(mVcdFile, m_axi_W_AWLEN, "(port)m_axi_W_AWLEN");
    sc_trace(mVcdFile, m_axi_W_AWSIZE, "(port)m_axi_W_AWSIZE");
    sc_trace(mVcdFile, m_axi_W_AWBURST, "(port)m_axi_W_AWBURST");
    sc_trace(mVcdFile, m_axi_W_AWLOCK, "(port)m_axi_W_AWLOCK");
    sc_trace(mVcdFile, m_axi_W_AWCACHE, "(port)m_axi_W_AWCACHE");
    sc_trace(mVcdFile, m_axi_W_AWPROT, "(port)m_axi_W_AWPROT");
    sc_trace(mVcdFile, m_axi_W_AWQOS, "(port)m_axi_W_AWQOS");
    sc_trace(mVcdFile, m_axi_W_AWREGION, "(port)m_axi_W_AWREGION");
    sc_trace(mVcdFile, m_axi_W_AWUSER, "(port)m_axi_W_AWUSER");
    sc_trace(mVcdFile, m_axi_W_WVALID, "(port)m_axi_W_WVALID");
    sc_trace(mVcdFile, m_axi_W_WREADY, "(port)m_axi_W_WREADY");
    sc_trace(mVcdFile, m_axi_W_WDATA, "(port)m_axi_W_WDATA");
    sc_trace(mVcdFile, m_axi_W_WSTRB, "(port)m_axi_W_WSTRB");
    sc_trace(mVcdFile, m_axi_W_WLAST, "(port)m_axi_W_WLAST");
    sc_trace(mVcdFile, m_axi_W_WID, "(port)m_axi_W_WID");
    sc_trace(mVcdFile, m_axi_W_WUSER, "(port)m_axi_W_WUSER");
    sc_trace(mVcdFile, m_axi_W_ARVALID, "(port)m_axi_W_ARVALID");
    sc_trace(mVcdFile, m_axi_W_ARREADY, "(port)m_axi_W_ARREADY");
    sc_trace(mVcdFile, m_axi_W_ARADDR, "(port)m_axi_W_ARADDR");
    sc_trace(mVcdFile, m_axi_W_ARID, "(port)m_axi_W_ARID");
    sc_trace(mVcdFile, m_axi_W_ARLEN, "(port)m_axi_W_ARLEN");
    sc_trace(mVcdFile, m_axi_W_ARSIZE, "(port)m_axi_W_ARSIZE");
    sc_trace(mVcdFile, m_axi_W_ARBURST, "(port)m_axi_W_ARBURST");
    sc_trace(mVcdFile, m_axi_W_ARLOCK, "(port)m_axi_W_ARLOCK");
    sc_trace(mVcdFile, m_axi_W_ARCACHE, "(port)m_axi_W_ARCACHE");
    sc_trace(mVcdFile, m_axi_W_ARPROT, "(port)m_axi_W_ARPROT");
    sc_trace(mVcdFile, m_axi_W_ARQOS, "(port)m_axi_W_ARQOS");
    sc_trace(mVcdFile, m_axi_W_ARREGION, "(port)m_axi_W_ARREGION");
    sc_trace(mVcdFile, m_axi_W_ARUSER, "(port)m_axi_W_ARUSER");
    sc_trace(mVcdFile, m_axi_W_RVALID, "(port)m_axi_W_RVALID");
    sc_trace(mVcdFile, m_axi_W_RREADY, "(port)m_axi_W_RREADY");
    sc_trace(mVcdFile, m_axi_W_RDATA, "(port)m_axi_W_RDATA");
    sc_trace(mVcdFile, m_axi_W_RLAST, "(port)m_axi_W_RLAST");
    sc_trace(mVcdFile, m_axi_W_RID, "(port)m_axi_W_RID");
    sc_trace(mVcdFile, m_axi_W_RUSER, "(port)m_axi_W_RUSER");
    sc_trace(mVcdFile, m_axi_W_RRESP, "(port)m_axi_W_RRESP");
    sc_trace(mVcdFile, m_axi_W_BVALID, "(port)m_axi_W_BVALID");
    sc_trace(mVcdFile, m_axi_W_BREADY, "(port)m_axi_W_BREADY");
    sc_trace(mVcdFile, m_axi_W_BRESP, "(port)m_axi_W_BRESP");
    sc_trace(mVcdFile, m_axi_W_BID, "(port)m_axi_W_BID");
    sc_trace(mVcdFile, m_axi_W_BUSER, "(port)m_axi_W_BUSER");
    sc_trace(mVcdFile, m_axi_B_AWVALID, "(port)m_axi_B_AWVALID");
    sc_trace(mVcdFile, m_axi_B_AWREADY, "(port)m_axi_B_AWREADY");
    sc_trace(mVcdFile, m_axi_B_AWADDR, "(port)m_axi_B_AWADDR");
    sc_trace(mVcdFile, m_axi_B_AWID, "(port)m_axi_B_AWID");
    sc_trace(mVcdFile, m_axi_B_AWLEN, "(port)m_axi_B_AWLEN");
    sc_trace(mVcdFile, m_axi_B_AWSIZE, "(port)m_axi_B_AWSIZE");
    sc_trace(mVcdFile, m_axi_B_AWBURST, "(port)m_axi_B_AWBURST");
    sc_trace(mVcdFile, m_axi_B_AWLOCK, "(port)m_axi_B_AWLOCK");
    sc_trace(mVcdFile, m_axi_B_AWCACHE, "(port)m_axi_B_AWCACHE");
    sc_trace(mVcdFile, m_axi_B_AWPROT, "(port)m_axi_B_AWPROT");
    sc_trace(mVcdFile, m_axi_B_AWQOS, "(port)m_axi_B_AWQOS");
    sc_trace(mVcdFile, m_axi_B_AWREGION, "(port)m_axi_B_AWREGION");
    sc_trace(mVcdFile, m_axi_B_AWUSER, "(port)m_axi_B_AWUSER");
    sc_trace(mVcdFile, m_axi_B_WVALID, "(port)m_axi_B_WVALID");
    sc_trace(mVcdFile, m_axi_B_WREADY, "(port)m_axi_B_WREADY");
    sc_trace(mVcdFile, m_axi_B_WDATA, "(port)m_axi_B_WDATA");
    sc_trace(mVcdFile, m_axi_B_WSTRB, "(port)m_axi_B_WSTRB");
    sc_trace(mVcdFile, m_axi_B_WLAST, "(port)m_axi_B_WLAST");
    sc_trace(mVcdFile, m_axi_B_WID, "(port)m_axi_B_WID");
    sc_trace(mVcdFile, m_axi_B_WUSER, "(port)m_axi_B_WUSER");
    sc_trace(mVcdFile, m_axi_B_ARVALID, "(port)m_axi_B_ARVALID");
    sc_trace(mVcdFile, m_axi_B_ARREADY, "(port)m_axi_B_ARREADY");
    sc_trace(mVcdFile, m_axi_B_ARADDR, "(port)m_axi_B_ARADDR");
    sc_trace(mVcdFile, m_axi_B_ARID, "(port)m_axi_B_ARID");
    sc_trace(mVcdFile, m_axi_B_ARLEN, "(port)m_axi_B_ARLEN");
    sc_trace(mVcdFile, m_axi_B_ARSIZE, "(port)m_axi_B_ARSIZE");
    sc_trace(mVcdFile, m_axi_B_ARBURST, "(port)m_axi_B_ARBURST");
    sc_trace(mVcdFile, m_axi_B_ARLOCK, "(port)m_axi_B_ARLOCK");
    sc_trace(mVcdFile, m_axi_B_ARCACHE, "(port)m_axi_B_ARCACHE");
    sc_trace(mVcdFile, m_axi_B_ARPROT, "(port)m_axi_B_ARPROT");
    sc_trace(mVcdFile, m_axi_B_ARQOS, "(port)m_axi_B_ARQOS");
    sc_trace(mVcdFile, m_axi_B_ARREGION, "(port)m_axi_B_ARREGION");
    sc_trace(mVcdFile, m_axi_B_ARUSER, "(port)m_axi_B_ARUSER");
    sc_trace(mVcdFile, m_axi_B_RVALID, "(port)m_axi_B_RVALID");
    sc_trace(mVcdFile, m_axi_B_RREADY, "(port)m_axi_B_RREADY");
    sc_trace(mVcdFile, m_axi_B_RDATA, "(port)m_axi_B_RDATA");
    sc_trace(mVcdFile, m_axi_B_RLAST, "(port)m_axi_B_RLAST");
    sc_trace(mVcdFile, m_axi_B_RID, "(port)m_axi_B_RID");
    sc_trace(mVcdFile, m_axi_B_RUSER, "(port)m_axi_B_RUSER");
    sc_trace(mVcdFile, m_axi_B_RRESP, "(port)m_axi_B_RRESP");
    sc_trace(mVcdFile, m_axi_B_BVALID, "(port)m_axi_B_BVALID");
    sc_trace(mVcdFile, m_axi_B_BREADY, "(port)m_axi_B_BREADY");
    sc_trace(mVcdFile, m_axi_B_BRESP, "(port)m_axi_B_BRESP");
    sc_trace(mVcdFile, m_axi_B_BID, "(port)m_axi_B_BID");
    sc_trace(mVcdFile, m_axi_B_BUSER, "(port)m_axi_B_BUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_AWVALID, "(port)m_axi_OUT_r_AWVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_AWREADY, "(port)m_axi_OUT_r_AWREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_AWADDR, "(port)m_axi_OUT_r_AWADDR");
    sc_trace(mVcdFile, m_axi_OUT_r_AWID, "(port)m_axi_OUT_r_AWID");
    sc_trace(mVcdFile, m_axi_OUT_r_AWLEN, "(port)m_axi_OUT_r_AWLEN");
    sc_trace(mVcdFile, m_axi_OUT_r_AWSIZE, "(port)m_axi_OUT_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_OUT_r_AWBURST, "(port)m_axi_OUT_r_AWBURST");
    sc_trace(mVcdFile, m_axi_OUT_r_AWLOCK, "(port)m_axi_OUT_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_OUT_r_AWCACHE, "(port)m_axi_OUT_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_OUT_r_AWPROT, "(port)m_axi_OUT_r_AWPROT");
    sc_trace(mVcdFile, m_axi_OUT_r_AWQOS, "(port)m_axi_OUT_r_AWQOS");
    sc_trace(mVcdFile, m_axi_OUT_r_AWREGION, "(port)m_axi_OUT_r_AWREGION");
    sc_trace(mVcdFile, m_axi_OUT_r_AWUSER, "(port)m_axi_OUT_r_AWUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_WVALID, "(port)m_axi_OUT_r_WVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_WREADY, "(port)m_axi_OUT_r_WREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_WDATA, "(port)m_axi_OUT_r_WDATA");
    sc_trace(mVcdFile, m_axi_OUT_r_WSTRB, "(port)m_axi_OUT_r_WSTRB");
    sc_trace(mVcdFile, m_axi_OUT_r_WLAST, "(port)m_axi_OUT_r_WLAST");
    sc_trace(mVcdFile, m_axi_OUT_r_WID, "(port)m_axi_OUT_r_WID");
    sc_trace(mVcdFile, m_axi_OUT_r_WUSER, "(port)m_axi_OUT_r_WUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_ARVALID, "(port)m_axi_OUT_r_ARVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_ARREADY, "(port)m_axi_OUT_r_ARREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_ARADDR, "(port)m_axi_OUT_r_ARADDR");
    sc_trace(mVcdFile, m_axi_OUT_r_ARID, "(port)m_axi_OUT_r_ARID");
    sc_trace(mVcdFile, m_axi_OUT_r_ARLEN, "(port)m_axi_OUT_r_ARLEN");
    sc_trace(mVcdFile, m_axi_OUT_r_ARSIZE, "(port)m_axi_OUT_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_OUT_r_ARBURST, "(port)m_axi_OUT_r_ARBURST");
    sc_trace(mVcdFile, m_axi_OUT_r_ARLOCK, "(port)m_axi_OUT_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_OUT_r_ARCACHE, "(port)m_axi_OUT_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_OUT_r_ARPROT, "(port)m_axi_OUT_r_ARPROT");
    sc_trace(mVcdFile, m_axi_OUT_r_ARQOS, "(port)m_axi_OUT_r_ARQOS");
    sc_trace(mVcdFile, m_axi_OUT_r_ARREGION, "(port)m_axi_OUT_r_ARREGION");
    sc_trace(mVcdFile, m_axi_OUT_r_ARUSER, "(port)m_axi_OUT_r_ARUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_RVALID, "(port)m_axi_OUT_r_RVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_RREADY, "(port)m_axi_OUT_r_RREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_RDATA, "(port)m_axi_OUT_r_RDATA");
    sc_trace(mVcdFile, m_axi_OUT_r_RLAST, "(port)m_axi_OUT_r_RLAST");
    sc_trace(mVcdFile, m_axi_OUT_r_RID, "(port)m_axi_OUT_r_RID");
    sc_trace(mVcdFile, m_axi_OUT_r_RUSER, "(port)m_axi_OUT_r_RUSER");
    sc_trace(mVcdFile, m_axi_OUT_r_RRESP, "(port)m_axi_OUT_r_RRESP");
    sc_trace(mVcdFile, m_axi_OUT_r_BVALID, "(port)m_axi_OUT_r_BVALID");
    sc_trace(mVcdFile, m_axi_OUT_r_BREADY, "(port)m_axi_OUT_r_BREADY");
    sc_trace(mVcdFile, m_axi_OUT_r_BRESP, "(port)m_axi_OUT_r_BRESP");
    sc_trace(mVcdFile, m_axi_OUT_r_BID, "(port)m_axi_OUT_r_BID");
    sc_trace(mVcdFile, m_axi_OUT_r_BUSER, "(port)m_axi_OUT_r_BUSER");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_V, "in_V");
    sc_trace(mVcdFile, weight_V, "weight_V");
    sc_trace(mVcdFile, bias_V, "bias_V");
    sc_trace(mVcdFile, out_V, "out_V");
    sc_trace(mVcdFile, IN_r_blk_n_AR, "IN_r_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln10_fu_335_p2, "icmp_ln10_fu_335_p2");
    sc_trace(mVcdFile, IN_r_blk_n_R, "IN_r_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln12_fu_347_p2, "icmp_ln12_fu_347_p2");
    sc_trace(mVcdFile, W_blk_n_AR, "W_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, W_blk_n_R, "W_blk_n_R");
    sc_trace(mVcdFile, B_blk_n_AR, "B_blk_n_AR");
    sc_trace(mVcdFile, B_blk_n_R, "B_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, OUT_r_blk_n_AW, "OUT_r_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, OUT_r_blk_n_W, "OUT_r_blk_n_W");
    sc_trace(mVcdFile, OUT_r_blk_n_B, "OUT_r_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, IN_r_AWREADY, "IN_r_AWREADY");
    sc_trace(mVcdFile, IN_r_WREADY, "IN_r_WREADY");
    sc_trace(mVcdFile, IN_r_ARVALID, "IN_r_ARVALID");
    sc_trace(mVcdFile, IN_r_ARREADY, "IN_r_ARREADY");
    sc_trace(mVcdFile, IN_r_RVALID, "IN_r_RVALID");
    sc_trace(mVcdFile, IN_r_RREADY, "IN_r_RREADY");
    sc_trace(mVcdFile, IN_r_RDATA, "IN_r_RDATA");
    sc_trace(mVcdFile, IN_r_RLAST, "IN_r_RLAST");
    sc_trace(mVcdFile, IN_r_RID, "IN_r_RID");
    sc_trace(mVcdFile, IN_r_RUSER, "IN_r_RUSER");
    sc_trace(mVcdFile, IN_r_RRESP, "IN_r_RRESP");
    sc_trace(mVcdFile, IN_r_BVALID, "IN_r_BVALID");
    sc_trace(mVcdFile, IN_r_BRESP, "IN_r_BRESP");
    sc_trace(mVcdFile, IN_r_BID, "IN_r_BID");
    sc_trace(mVcdFile, IN_r_BUSER, "IN_r_BUSER");
    sc_trace(mVcdFile, W_AWREADY, "W_AWREADY");
    sc_trace(mVcdFile, W_WREADY, "W_WREADY");
    sc_trace(mVcdFile, W_ARVALID, "W_ARVALID");
    sc_trace(mVcdFile, W_ARREADY, "W_ARREADY");
    sc_trace(mVcdFile, W_RVALID, "W_RVALID");
    sc_trace(mVcdFile, W_RREADY, "W_RREADY");
    sc_trace(mVcdFile, W_RDATA, "W_RDATA");
    sc_trace(mVcdFile, W_RLAST, "W_RLAST");
    sc_trace(mVcdFile, W_RID, "W_RID");
    sc_trace(mVcdFile, W_RUSER, "W_RUSER");
    sc_trace(mVcdFile, W_RRESP, "W_RRESP");
    sc_trace(mVcdFile, W_BVALID, "W_BVALID");
    sc_trace(mVcdFile, W_BRESP, "W_BRESP");
    sc_trace(mVcdFile, W_BID, "W_BID");
    sc_trace(mVcdFile, W_BUSER, "W_BUSER");
    sc_trace(mVcdFile, B_AWREADY, "B_AWREADY");
    sc_trace(mVcdFile, B_WREADY, "B_WREADY");
    sc_trace(mVcdFile, B_ARVALID, "B_ARVALID");
    sc_trace(mVcdFile, B_ARREADY, "B_ARREADY");
    sc_trace(mVcdFile, B_RVALID, "B_RVALID");
    sc_trace(mVcdFile, B_RREADY, "B_RREADY");
    sc_trace(mVcdFile, B_RDATA, "B_RDATA");
    sc_trace(mVcdFile, B_RLAST, "B_RLAST");
    sc_trace(mVcdFile, B_RID, "B_RID");
    sc_trace(mVcdFile, B_RUSER, "B_RUSER");
    sc_trace(mVcdFile, B_RRESP, "B_RRESP");
    sc_trace(mVcdFile, B_BVALID, "B_BVALID");
    sc_trace(mVcdFile, B_BRESP, "B_BRESP");
    sc_trace(mVcdFile, B_BID, "B_BID");
    sc_trace(mVcdFile, B_BUSER, "B_BUSER");
    sc_trace(mVcdFile, OUT_r_AWVALID, "OUT_r_AWVALID");
    sc_trace(mVcdFile, OUT_r_AWREADY, "OUT_r_AWREADY");
    sc_trace(mVcdFile, OUT_r_WVALID, "OUT_r_WVALID");
    sc_trace(mVcdFile, OUT_r_WREADY, "OUT_r_WREADY");
    sc_trace(mVcdFile, OUT_r_ARREADY, "OUT_r_ARREADY");
    sc_trace(mVcdFile, OUT_r_RVALID, "OUT_r_RVALID");
    sc_trace(mVcdFile, OUT_r_RDATA, "OUT_r_RDATA");
    sc_trace(mVcdFile, OUT_r_RLAST, "OUT_r_RLAST");
    sc_trace(mVcdFile, OUT_r_RID, "OUT_r_RID");
    sc_trace(mVcdFile, OUT_r_RUSER, "OUT_r_RUSER");
    sc_trace(mVcdFile, OUT_r_RRESP, "OUT_r_RRESP");
    sc_trace(mVcdFile, OUT_r_BVALID, "OUT_r_BVALID");
    sc_trace(mVcdFile, OUT_r_BREADY, "OUT_r_BREADY");
    sc_trace(mVcdFile, OUT_r_BRESP, "OUT_r_BRESP");
    sc_trace(mVcdFile, OUT_r_BID, "OUT_r_BID");
    sc_trace(mVcdFile, OUT_r_BUSER, "OUT_r_BUSER");
    sc_trace(mVcdFile, OUT_addr_reg_629, "OUT_addr_reg_629");
    sc_trace(mVcdFile, B_addr_reg_635, "B_addr_reg_635");
    sc_trace(mVcdFile, W_addr_reg_641, "W_addr_reg_641");
    sc_trace(mVcdFile, IN_addr_reg_647, "IN_addr_reg_647");
    sc_trace(mVcdFile, i_fu_341_p2, "i_fu_341_p2");
    sc_trace(mVcdFile, i_reg_656, "i_reg_656");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, tmp_V_reg_661, "tmp_V_reg_661");
    sc_trace(mVcdFile, j_fu_353_p2, "j_fu_353_p2");
    sc_trace(mVcdFile, j_reg_669, "j_reg_669");
    sc_trace(mVcdFile, ap_block_state16, "ap_block_state16");
    sc_trace(mVcdFile, ap_block_state16_io, "ap_block_state16_io");
    sc_trace(mVcdFile, IN_addr_read_reg_674, "IN_addr_read_reg_674");
    sc_trace(mVcdFile, W_addr_read_reg_679, "W_addr_read_reg_679");
    sc_trace(mVcdFile, r_V_2_fu_622_p2, "r_V_2_fu_622_p2");
    sc_trace(mVcdFile, r_V_2_reg_684, "r_V_2_reg_684");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_reg_689, "tmp_reg_689");
    sc_trace(mVcdFile, select_ln340_1_fu_614_p3, "select_ln340_1_fu_614_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_0_reg_222, "i_0_reg_222");
    sc_trace(mVcdFile, p_Val2_s_reg_233, "p_Val2_s_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, j_0_reg_244, "j_0_reg_244");
    sc_trace(mVcdFile, empty_fu_265_p1, "empty_fu_265_p1");
    sc_trace(mVcdFile, empty_4_fu_285_p1, "empty_4_fu_285_p1");
    sc_trace(mVcdFile, empty_5_fu_305_p1, "empty_5_fu_305_p1");
    sc_trace(mVcdFile, empty_6_fu_325_p1, "empty_6_fu_325_p1");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, out_V7_fu_255_p4, "out_V7_fu_255_p4");
    sc_trace(mVcdFile, bias_V5_fu_275_p4, "bias_V5_fu_275_p4");
    sc_trace(mVcdFile, weight_V3_fu_295_p4, "weight_V3_fu_295_p4");
    sc_trace(mVcdFile, in_V1_fu_315_p4, "in_V1_fu_315_p4");
    sc_trace(mVcdFile, lhs_V_fu_372_p3, "lhs_V_fu_372_p3");
    sc_trace(mVcdFile, sext_ln728_fu_380_p1, "sext_ln728_fu_380_p1");
    sc_trace(mVcdFile, ret_V_fu_384_p2, "ret_V_fu_384_p2");
    sc_trace(mVcdFile, tmp_V_3_fu_397_p4, "tmp_V_3_fu_397_p4");
    sc_trace(mVcdFile, zext_ln415_fu_415_p1, "zext_ln415_fu_415_p1");
    sc_trace(mVcdFile, tmp_V_4_fu_418_p2, "tmp_V_4_fu_418_p2");
    sc_trace(mVcdFile, tmp_3_fu_424_p3, "tmp_3_fu_424_p3");
    sc_trace(mVcdFile, p_Result_1_fu_407_p3, "p_Result_1_fu_407_p3");
    sc_trace(mVcdFile, xor_ln416_fu_432_p2, "xor_ln416_fu_432_p2");
    sc_trace(mVcdFile, tmp_1_fu_452_p4, "tmp_1_fu_452_p4");
    sc_trace(mVcdFile, tmp_2_fu_468_p4, "tmp_2_fu_468_p4");
    sc_trace(mVcdFile, carry_1_fu_438_p2, "carry_1_fu_438_p2");
    sc_trace(mVcdFile, Range1_all_ones_fu_478_p2, "Range1_all_ones_fu_478_p2");
    sc_trace(mVcdFile, Range1_all_zeros_fu_484_p2, "Range1_all_zeros_fu_484_p2");
    sc_trace(mVcdFile, tmp_5_fu_498_p3, "tmp_5_fu_498_p3");
    sc_trace(mVcdFile, Range2_all_ones_fu_462_p2, "Range2_all_ones_fu_462_p2");
    sc_trace(mVcdFile, xor_ln779_fu_506_p2, "xor_ln779_fu_506_p2");
    sc_trace(mVcdFile, and_ln779_fu_512_p2, "and_ln779_fu_512_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_490_p3, "deleted_zeros_fu_490_p3");
    sc_trace(mVcdFile, p_Result_2_fu_444_p3, "p_Result_2_fu_444_p3");
    sc_trace(mVcdFile, xor_ln785_fu_532_p2, "xor_ln785_fu_532_p2");
    sc_trace(mVcdFile, p_Result_s_fu_389_p3, "p_Result_s_fu_389_p3");
    sc_trace(mVcdFile, or_ln785_fu_538_p2, "or_ln785_fu_538_p2");
    sc_trace(mVcdFile, xor_ln785_1_fu_544_p2, "xor_ln785_1_fu_544_p2");
    sc_trace(mVcdFile, deleted_ones_fu_518_p3, "deleted_ones_fu_518_p3");
    sc_trace(mVcdFile, and_ln781_fu_526_p2, "and_ln781_fu_526_p2");
    sc_trace(mVcdFile, and_ln786_fu_556_p2, "and_ln786_fu_556_p2");
    sc_trace(mVcdFile, or_ln786_fu_562_p2, "or_ln786_fu_562_p2");
    sc_trace(mVcdFile, xor_ln786_fu_568_p2, "xor_ln786_fu_568_p2");
    sc_trace(mVcdFile, underflow_fu_574_p2, "underflow_fu_574_p2");
    sc_trace(mVcdFile, overflow_fu_550_p2, "overflow_fu_550_p2");
    sc_trace(mVcdFile, or_ln340_2_fu_586_p2, "or_ln340_2_fu_586_p2");
    sc_trace(mVcdFile, or_ln340_fu_580_p2, "or_ln340_fu_580_p2");
    sc_trace(mVcdFile, or_ln340_1_fu_592_p2, "or_ln340_1_fu_592_p2");
    sc_trace(mVcdFile, select_ln340_fu_598_p3, "select_ln340_fu_598_p3");
    sc_trace(mVcdFile, select_ln388_fu_606_p3, "select_ln388_fu_606_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("fc.hdltvin.dat");
    mHdltvoutHandle.open("fc.hdltvout.dat");
}

fc::~fc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete fc_CTRL_s_axi_U;
    delete fc_IN_r_m_axi_U;
    delete fc_W_m_axi_U;
    delete fc_B_m_axi_U;
    delete fc_OUT_r_m_axi_U;
    delete fc_mul_mul_16s_16bkb_U1;
}

void fc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fc::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void fc::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void fc::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void fc::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void fc::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv32_5;
}

void fc::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void fc::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void fc::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv32_5DC0;
}

void fc::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_12C0;
}

void fc::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_lv2_3;
}

void fc::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv16_0;
}

void fc::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_fu_347_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
        i_0_reg_222 = i_reg_656.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(OUT_r_AWREADY.read(), ap_const_logic_1))) {
        i_0_reg_222 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        j_0_reg_244 = j_reg_669.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_0_reg_244 = ap_const_lv13_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        p_Val2_s_reg_233 = select_ln340_1_fu_614_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        p_Val2_s_reg_233 = tmp_V_reg_661.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        B_addr_reg_635 =  (sc_lv<32>) (empty_4_fu_285_p1.read());
        IN_addr_reg_647 =  (sc_lv<32>) (empty_6_fu_325_p1.read());
        OUT_addr_reg_629 =  (sc_lv<32>) (empty_fu_265_p1.read());
        W_addr_reg_641 =  (sc_lv<32>) (empty_5_fu_305_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
        IN_addr_read_reg_674 = IN_r_RDATA.read();
        W_addr_read_reg_679 = W_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0))) {
        i_reg_656 = i_fu_341_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
        j_reg_669 = j_fu_353_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_V_2_reg_684 = r_V_2_fu_622_p2.read();
        tmp_reg_689 = r_V_2_fu_622_p2.read().range(9, 9);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(B_RVALID.read(), ap_const_logic_1))) {
        tmp_V_reg_661 = B_RDATA.read();
    }
}

void fc::thread_B_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        B_ARVALID = ap_const_logic_1;
    } else {
        B_ARVALID = ap_const_logic_0;
    }
}

void fc::thread_B_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(B_RVALID.read(), ap_const_logic_1))) {
        B_RREADY = ap_const_logic_1;
    } else {
        B_RREADY = ap_const_logic_0;
    }
}

void fc::thread_B_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        B_blk_n_AR = m_axi_B_ARREADY.read();
    } else {
        B_blk_n_AR = ap_const_logic_1;
    }
}

void fc::thread_B_blk_n_R() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        B_blk_n_R = m_axi_B_RVALID.read();
    } else {
        B_blk_n_R = ap_const_logic_1;
    }
}

void fc::thread_IN_r_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_335_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0))) {
        IN_r_ARVALID = ap_const_logic_1;
    } else {
        IN_r_ARVALID = ap_const_logic_0;
    }
}

void fc::thread_IN_r_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
        IN_r_RREADY = ap_const_logic_1;
    } else {
        IN_r_RREADY = ap_const_logic_0;
    }
}

void fc::thread_IN_r_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_335_p2.read(), ap_const_lv1_0))) {
        IN_r_blk_n_AR = m_axi_IN_r_ARREADY.read();
    } else {
        IN_r_blk_n_AR = ap_const_logic_1;
    }
}

void fc::thread_IN_r_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()))) {
        IN_r_blk_n_R = m_axi_IN_r_RVALID.read();
    } else {
        IN_r_blk_n_R = ap_const_logic_1;
    }
}

void fc::thread_OUT_r_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(OUT_r_AWREADY.read(), ap_const_logic_1))) {
        OUT_r_AWVALID = ap_const_logic_1;
    } else {
        OUT_r_AWVALID = ap_const_logic_0;
    }
}

void fc::thread_OUT_r_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
        OUT_r_BREADY = ap_const_logic_1;
    } else {
        OUT_r_BREADY = ap_const_logic_0;
    }
}

void fc::thread_OUT_r_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_fu_347_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
        OUT_r_WVALID = ap_const_logic_1;
    } else {
        OUT_r_WVALID = ap_const_logic_0;
    }
}

void fc::thread_OUT_r_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        OUT_r_blk_n_AW = m_axi_OUT_r_AWREADY.read();
    } else {
        OUT_r_blk_n_AW = ap_const_logic_1;
    }
}

void fc::thread_OUT_r_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        OUT_r_blk_n_B = m_axi_OUT_r_BVALID.read();
    } else {
        OUT_r_blk_n_B = ap_const_logic_1;
    }
}

void fc::thread_OUT_r_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_fu_347_p2.read(), ap_const_lv1_1))) {
        OUT_r_blk_n_W = m_axi_OUT_r_WREADY.read();
    } else {
        OUT_r_blk_n_W = ap_const_logic_1;
    }
}

void fc::thread_Range1_all_ones_fu_478_p2() {
    Range1_all_ones_fu_478_p2 = (!tmp_2_fu_468_p4.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_468_p4.read() == ap_const_lv6_3F);
}

void fc::thread_Range1_all_zeros_fu_484_p2() {
    Range1_all_zeros_fu_484_p2 = (!tmp_2_fu_468_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_468_p4.read() == ap_const_lv6_0);
}

void fc::thread_Range2_all_ones_fu_462_p2() {
    Range2_all_ones_fu_462_p2 = (!tmp_1_fu_452_p4.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_452_p4.read() == ap_const_lv5_1F);
}

void fc::thread_W_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        W_ARVALID = ap_const_logic_1;
    } else {
        W_ARVALID = ap_const_logic_0;
    }
}

void fc::thread_W_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
        W_RREADY = ap_const_logic_1;
    } else {
        W_RREADY = ap_const_logic_0;
    }
}

void fc::thread_W_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        W_blk_n_AR = m_axi_W_ARREADY.read();
    } else {
        W_blk_n_AR = ap_const_logic_1;
    }
}

void fc::thread_W_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()))) {
        W_blk_n_R = m_axi_W_RVALID.read();
    } else {
        W_blk_n_R = ap_const_logic_1;
    }
}

void fc::thread_and_ln779_fu_512_p2() {
    and_ln779_fu_512_p2 = (Range2_all_ones_fu_462_p2.read() & xor_ln779_fu_506_p2.read());
}

void fc::thread_and_ln781_fu_526_p2() {
    and_ln781_fu_526_p2 = (carry_1_fu_438_p2.read() & Range1_all_ones_fu_478_p2.read());
}

void fc::thread_and_ln786_fu_556_p2() {
    and_ln786_fu_556_p2 = (p_Result_2_fu_444_p3.read() & deleted_ones_fu_518_p3.read());
}

void fc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void fc::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void fc::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void fc::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void fc::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void fc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fc::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void fc::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fc::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fc::thread_ap_block_state16() {
    ap_block_state16 = ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())));
}

void fc::thread_ap_block_state16_io() {
    ap_block_state16_io = (esl_seteq<1,1,1>(icmp_ln12_fu_347_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, OUT_r_WREADY.read()));
}

void fc::thread_ap_block_state2_io() {
    ap_block_state2_io = (esl_seteq<1,1,1>(ap_const_logic_0, B_ARREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, W_ARREADY.read()));
}

void fc::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(icmp_ln10_fu_335_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, IN_r_ARREADY.read()));
}

void fc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void fc::thread_bias_V5_fu_275_p4() {
    bias_V5_fu_275_p4 = bias_V.read().range(31, 1);
}

void fc::thread_carry_1_fu_438_p2() {
    carry_1_fu_438_p2 = (p_Result_1_fu_407_p3.read() & xor_ln416_fu_432_p2.read());
}

void fc::thread_deleted_ones_fu_518_p3() {
    deleted_ones_fu_518_p3 = (!carry_1_fu_438_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_438_p2.read()[0].to_bool())? and_ln779_fu_512_p2.read(): Range1_all_ones_fu_478_p2.read());
}

void fc::thread_deleted_zeros_fu_490_p3() {
    deleted_zeros_fu_490_p3 = (!carry_1_fu_438_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_438_p2.read()[0].to_bool())? Range1_all_ones_fu_478_p2.read(): Range1_all_zeros_fu_484_p2.read());
}

void fc::thread_empty_4_fu_285_p1() {
    empty_4_fu_285_p1 = esl_zext<64,31>(bias_V5_fu_275_p4.read());
}

void fc::thread_empty_5_fu_305_p1() {
    empty_5_fu_305_p1 = esl_zext<64,31>(weight_V3_fu_295_p4.read());
}

void fc::thread_empty_6_fu_325_p1() {
    empty_6_fu_325_p1 = esl_zext<64,31>(in_V1_fu_315_p4.read());
}

void fc::thread_empty_fu_265_p1() {
    empty_fu_265_p1 = esl_zext<64,31>(out_V7_fu_255_p4.read());
}

void fc::thread_i_fu_341_p2() {
    i_fu_341_p2 = (!i_0_reg_222.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_222.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void fc::thread_icmp_ln10_fu_335_p2() {
    icmp_ln10_fu_335_p2 = (!i_0_reg_222.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_222.read() == ap_const_lv3_5);
}

void fc::thread_icmp_ln12_fu_347_p2() {
    icmp_ln12_fu_347_p2 = (!j_0_reg_244.read().is_01() || !ap_const_lv13_12C0.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_244.read() == ap_const_lv13_12C0);
}

void fc::thread_in_V1_fu_315_p4() {
    in_V1_fu_315_p4 = in_V.read().range(31, 1);
}

void fc::thread_j_fu_353_p2() {
    j_fu_353_p2 = (!j_0_reg_244.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(j_0_reg_244.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void fc::thread_lhs_V_fu_372_p3() {
    lhs_V_fu_372_p3 = esl_concat<16,10>(p_Val2_s_reg_233.read(), ap_const_lv10_0);
}

void fc::thread_or_ln340_1_fu_592_p2() {
    or_ln340_1_fu_592_p2 = (or_ln340_2_fu_586_p2.read() | and_ln781_fu_526_p2.read());
}

void fc::thread_or_ln340_2_fu_586_p2() {
    or_ln340_2_fu_586_p2 = (and_ln786_fu_556_p2.read() | xor_ln785_1_fu_544_p2.read());
}

void fc::thread_or_ln340_fu_580_p2() {
    or_ln340_fu_580_p2 = (underflow_fu_574_p2.read() | overflow_fu_550_p2.read());
}

void fc::thread_or_ln785_fu_538_p2() {
    or_ln785_fu_538_p2 = (p_Result_2_fu_444_p3.read() | xor_ln785_fu_532_p2.read());
}

void fc::thread_or_ln786_fu_562_p2() {
    or_ln786_fu_562_p2 = (and_ln781_fu_526_p2.read() | and_ln786_fu_556_p2.read());
}

void fc::thread_out_V7_fu_255_p4() {
    out_V7_fu_255_p4 = out_V.read().range(31, 1);
}

void fc::thread_overflow_fu_550_p2() {
    overflow_fu_550_p2 = (or_ln785_fu_538_p2.read() & xor_ln785_1_fu_544_p2.read());
}

void fc::thread_p_Result_1_fu_407_p3() {
    p_Result_1_fu_407_p3 = ret_V_fu_384_p2.read().range(25, 25);
}

void fc::thread_p_Result_2_fu_444_p3() {
    p_Result_2_fu_444_p3 = tmp_V_4_fu_418_p2.read().range(15, 15);
}

void fc::thread_p_Result_s_fu_389_p3() {
    p_Result_s_fu_389_p3 = ret_V_fu_384_p2.read().range(31, 31);
}

void fc::thread_ret_V_fu_384_p2() {
    ret_V_fu_384_p2 = (!r_V_2_reg_684.read().is_01() || !sext_ln728_fu_380_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(r_V_2_reg_684.read()) + sc_bigint<32>(sext_ln728_fu_380_p1.read()));
}

void fc::thread_select_ln340_1_fu_614_p3() {
    select_ln340_1_fu_614_p3 = (!or_ln340_1_fu_592_p2.read()[0].is_01())? sc_lv<16>(): ((or_ln340_1_fu_592_p2.read()[0].to_bool())? select_ln340_fu_598_p3.read(): select_ln388_fu_606_p3.read());
}

void fc::thread_select_ln340_fu_598_p3() {
    select_ln340_fu_598_p3 = (!or_ln340_fu_580_p2.read()[0].is_01())? sc_lv<16>(): ((or_ln340_fu_580_p2.read()[0].to_bool())? ap_const_lv16_7FFF: tmp_V_4_fu_418_p2.read());
}

void fc::thread_select_ln388_fu_606_p3() {
    select_ln388_fu_606_p3 = (!underflow_fu_574_p2.read()[0].is_01())? sc_lv<16>(): ((underflow_fu_574_p2.read()[0].to_bool())? ap_const_lv16_8000: tmp_V_4_fu_418_p2.read());
}

void fc::thread_sext_ln728_fu_380_p1() {
    sext_ln728_fu_380_p1 = esl_sext<32,26>(lhs_V_fu_372_p3.read());
}

void fc::thread_tmp_1_fu_452_p4() {
    tmp_1_fu_452_p4 = ret_V_fu_384_p2.read().range(31, 27);
}

void fc::thread_tmp_2_fu_468_p4() {
    tmp_2_fu_468_p4 = ret_V_fu_384_p2.read().range(31, 26);
}

void fc::thread_tmp_3_fu_424_p3() {
    tmp_3_fu_424_p3 = tmp_V_4_fu_418_p2.read().range(15, 15);
}

void fc::thread_tmp_5_fu_498_p3() {
    tmp_5_fu_498_p3 = ret_V_fu_384_p2.read().range(26, 26);
}

void fc::thread_tmp_V_3_fu_397_p4() {
    tmp_V_3_fu_397_p4 = ret_V_fu_384_p2.read().range(25, 10);
}

void fc::thread_tmp_V_4_fu_418_p2() {
    tmp_V_4_fu_418_p2 = (!tmp_V_3_fu_397_p4.read().is_01() || !zext_ln415_fu_415_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_V_3_fu_397_p4.read()) + sc_biguint<16>(zext_ln415_fu_415_p1.read()));
}

void fc::thread_underflow_fu_574_p2() {
    underflow_fu_574_p2 = (p_Result_s_fu_389_p3.read() & xor_ln786_fu_568_p2.read());
}

void fc::thread_weight_V3_fu_295_p4() {
    weight_V3_fu_295_p4 = weight_V.read().range(31, 1);
}

void fc::thread_xor_ln416_fu_432_p2() {
    xor_ln416_fu_432_p2 = (tmp_3_fu_424_p3.read() ^ ap_const_lv1_1);
}

void fc::thread_xor_ln779_fu_506_p2() {
    xor_ln779_fu_506_p2 = (tmp_5_fu_498_p3.read() ^ ap_const_lv1_1);
}

void fc::thread_xor_ln785_1_fu_544_p2() {
    xor_ln785_1_fu_544_p2 = (p_Result_s_fu_389_p3.read() ^ ap_const_lv1_1);
}

void fc::thread_xor_ln785_fu_532_p2() {
    xor_ln785_fu_532_p2 = (deleted_zeros_fu_490_p3.read() ^ ap_const_lv1_1);
}

void fc::thread_xor_ln786_fu_568_p2() {
    xor_ln786_fu_568_p2 = (or_ln786_fu_562_p2.read() ^ ap_const_lv1_1);
}

void fc::thread_zext_ln415_fu_415_p1() {
    zext_ln415_fu_415_p1 = esl_zext<16,1>(tmp_reg_689.read());
}

void fc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(OUT_r_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln10_fu_335_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_335_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(B_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_347_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IN_r_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_347_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, W_RVALID.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(OUT_r_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void fc::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_IN_r_AWVALID\" :  \"" << m_axi_IN_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_AWREADY\" :  \"" << m_axi_IN_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWADDR\" :  \"" << m_axi_IN_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWID\" :  \"" << m_axi_IN_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWLEN\" :  \"" << m_axi_IN_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWSIZE\" :  \"" << m_axi_IN_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWBURST\" :  \"" << m_axi_IN_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWLOCK\" :  \"" << m_axi_IN_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWCACHE\" :  \"" << m_axi_IN_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWPROT\" :  \"" << m_axi_IN_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWQOS\" :  \"" << m_axi_IN_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWREGION\" :  \"" << m_axi_IN_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_AWUSER\" :  \"" << m_axi_IN_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WVALID\" :  \"" << m_axi_IN_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_WREADY\" :  \"" << m_axi_IN_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WDATA\" :  \"" << m_axi_IN_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WSTRB\" :  \"" << m_axi_IN_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WLAST\" :  \"" << m_axi_IN_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WID\" :  \"" << m_axi_IN_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_WUSER\" :  \"" << m_axi_IN_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARVALID\" :  \"" << m_axi_IN_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_ARREADY\" :  \"" << m_axi_IN_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARADDR\" :  \"" << m_axi_IN_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARID\" :  \"" << m_axi_IN_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARLEN\" :  \"" << m_axi_IN_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARSIZE\" :  \"" << m_axi_IN_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARBURST\" :  \"" << m_axi_IN_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARLOCK\" :  \"" << m_axi_IN_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARCACHE\" :  \"" << m_axi_IN_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARPROT\" :  \"" << m_axi_IN_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARQOS\" :  \"" << m_axi_IN_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARREGION\" :  \"" << m_axi_IN_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_ARUSER\" :  \"" << m_axi_IN_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RVALID\" :  \"" << m_axi_IN_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_RREADY\" :  \"" << m_axi_IN_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RDATA\" :  \"" << m_axi_IN_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RLAST\" :  \"" << m_axi_IN_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RID\" :  \"" << m_axi_IN_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RUSER\" :  \"" << m_axi_IN_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_RRESP\" :  \"" << m_axi_IN_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BVALID\" :  \"" << m_axi_IN_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_IN_r_BREADY\" :  \"" << m_axi_IN_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BRESP\" :  \"" << m_axi_IN_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BID\" :  \"" << m_axi_IN_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_IN_r_BUSER\" :  \"" << m_axi_IN_r_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWVALID\" :  \"" << m_axi_W_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_AWREADY\" :  \"" << m_axi_W_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWADDR\" :  \"" << m_axi_W_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWID\" :  \"" << m_axi_W_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWLEN\" :  \"" << m_axi_W_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWSIZE\" :  \"" << m_axi_W_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWBURST\" :  \"" << m_axi_W_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWLOCK\" :  \"" << m_axi_W_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWCACHE\" :  \"" << m_axi_W_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWPROT\" :  \"" << m_axi_W_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWQOS\" :  \"" << m_axi_W_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWREGION\" :  \"" << m_axi_W_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_AWUSER\" :  \"" << m_axi_W_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_WVALID\" :  \"" << m_axi_W_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_WREADY\" :  \"" << m_axi_W_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_WDATA\" :  \"" << m_axi_W_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_WSTRB\" :  \"" << m_axi_W_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_WLAST\" :  \"" << m_axi_W_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_WID\" :  \"" << m_axi_W_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_WUSER\" :  \"" << m_axi_W_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARVALID\" :  \"" << m_axi_W_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_ARREADY\" :  \"" << m_axi_W_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARADDR\" :  \"" << m_axi_W_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARID\" :  \"" << m_axi_W_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARLEN\" :  \"" << m_axi_W_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARSIZE\" :  \"" << m_axi_W_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARBURST\" :  \"" << m_axi_W_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARLOCK\" :  \"" << m_axi_W_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARCACHE\" :  \"" << m_axi_W_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARPROT\" :  \"" << m_axi_W_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARQOS\" :  \"" << m_axi_W_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARREGION\" :  \"" << m_axi_W_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_ARUSER\" :  \"" << m_axi_W_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_RVALID\" :  \"" << m_axi_W_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_RREADY\" :  \"" << m_axi_W_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_RDATA\" :  \"" << m_axi_W_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_RLAST\" :  \"" << m_axi_W_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_RID\" :  \"" << m_axi_W_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_RUSER\" :  \"" << m_axi_W_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_RRESP\" :  \"" << m_axi_W_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_BVALID\" :  \"" << m_axi_W_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_W_BREADY\" :  \"" << m_axi_W_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_BRESP\" :  \"" << m_axi_W_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_BID\" :  \"" << m_axi_W_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_W_BUSER\" :  \"" << m_axi_W_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWVALID\" :  \"" << m_axi_B_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_AWREADY\" :  \"" << m_axi_B_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWADDR\" :  \"" << m_axi_B_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWID\" :  \"" << m_axi_B_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWLEN\" :  \"" << m_axi_B_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWSIZE\" :  \"" << m_axi_B_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWBURST\" :  \"" << m_axi_B_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWLOCK\" :  \"" << m_axi_B_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWCACHE\" :  \"" << m_axi_B_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWPROT\" :  \"" << m_axi_B_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWQOS\" :  \"" << m_axi_B_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWREGION\" :  \"" << m_axi_B_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_AWUSER\" :  \"" << m_axi_B_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_WVALID\" :  \"" << m_axi_B_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_WREADY\" :  \"" << m_axi_B_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_WDATA\" :  \"" << m_axi_B_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_WSTRB\" :  \"" << m_axi_B_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_WLAST\" :  \"" << m_axi_B_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_WID\" :  \"" << m_axi_B_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_WUSER\" :  \"" << m_axi_B_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARVALID\" :  \"" << m_axi_B_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_ARREADY\" :  \"" << m_axi_B_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARADDR\" :  \"" << m_axi_B_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARID\" :  \"" << m_axi_B_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARLEN\" :  \"" << m_axi_B_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARSIZE\" :  \"" << m_axi_B_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARBURST\" :  \"" << m_axi_B_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARLOCK\" :  \"" << m_axi_B_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARCACHE\" :  \"" << m_axi_B_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARPROT\" :  \"" << m_axi_B_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARQOS\" :  \"" << m_axi_B_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARREGION\" :  \"" << m_axi_B_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_ARUSER\" :  \"" << m_axi_B_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_RVALID\" :  \"" << m_axi_B_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_RREADY\" :  \"" << m_axi_B_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_RDATA\" :  \"" << m_axi_B_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_RLAST\" :  \"" << m_axi_B_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_RID\" :  \"" << m_axi_B_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_RUSER\" :  \"" << m_axi_B_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_RRESP\" :  \"" << m_axi_B_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_BVALID\" :  \"" << m_axi_B_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_B_BREADY\" :  \"" << m_axi_B_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_BRESP\" :  \"" << m_axi_B_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_BID\" :  \"" << m_axi_B_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_B_BUSER\" :  \"" << m_axi_B_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWVALID\" :  \"" << m_axi_OUT_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_AWREADY\" :  \"" << m_axi_OUT_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWADDR\" :  \"" << m_axi_OUT_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWID\" :  \"" << m_axi_OUT_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWLEN\" :  \"" << m_axi_OUT_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWSIZE\" :  \"" << m_axi_OUT_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWBURST\" :  \"" << m_axi_OUT_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWLOCK\" :  \"" << m_axi_OUT_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWCACHE\" :  \"" << m_axi_OUT_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWPROT\" :  \"" << m_axi_OUT_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWQOS\" :  \"" << m_axi_OUT_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWREGION\" :  \"" << m_axi_OUT_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_AWUSER\" :  \"" << m_axi_OUT_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WVALID\" :  \"" << m_axi_OUT_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_WREADY\" :  \"" << m_axi_OUT_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WDATA\" :  \"" << m_axi_OUT_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WSTRB\" :  \"" << m_axi_OUT_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WLAST\" :  \"" << m_axi_OUT_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WID\" :  \"" << m_axi_OUT_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_WUSER\" :  \"" << m_axi_OUT_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARVALID\" :  \"" << m_axi_OUT_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_ARREADY\" :  \"" << m_axi_OUT_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARADDR\" :  \"" << m_axi_OUT_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARID\" :  \"" << m_axi_OUT_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARLEN\" :  \"" << m_axi_OUT_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARSIZE\" :  \"" << m_axi_OUT_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARBURST\" :  \"" << m_axi_OUT_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARLOCK\" :  \"" << m_axi_OUT_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARCACHE\" :  \"" << m_axi_OUT_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARPROT\" :  \"" << m_axi_OUT_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARQOS\" :  \"" << m_axi_OUT_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARREGION\" :  \"" << m_axi_OUT_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_ARUSER\" :  \"" << m_axi_OUT_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RVALID\" :  \"" << m_axi_OUT_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_RREADY\" :  \"" << m_axi_OUT_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RDATA\" :  \"" << m_axi_OUT_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RLAST\" :  \"" << m_axi_OUT_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RID\" :  \"" << m_axi_OUT_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RUSER\" :  \"" << m_axi_OUT_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_RRESP\" :  \"" << m_axi_OUT_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BVALID\" :  \"" << m_axi_OUT_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUT_r_BREADY\" :  \"" << m_axi_OUT_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BRESP\" :  \"" << m_axi_OUT_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BID\" :  \"" << m_axi_OUT_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUT_r_BUSER\" :  \"" << m_axi_OUT_r_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

